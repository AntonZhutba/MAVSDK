// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_streaming/log_streaming.proto

#include "log_streaming/log_streaming.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace log_streaming {
PROTOBUF_CONSTEXPR StartLogStreamingRequest::StartLogStreamingRequest(
    ::_pbi::ConstantInitialized) {}
struct StartLogStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartLogStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartLogStreamingRequestDefaultTypeInternal() {}
  union {
    StartLogStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartLogStreamingRequestDefaultTypeInternal _StartLogStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR StartLogStreamingResponse::StartLogStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.log_streaming_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartLogStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartLogStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartLogStreamingResponseDefaultTypeInternal() {}
  union {
    StartLogStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartLogStreamingResponseDefaultTypeInternal _StartLogStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR StopLogStreamingRequest::StopLogStreamingRequest(
    ::_pbi::ConstantInitialized) {}
struct StopLogStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopLogStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopLogStreamingRequestDefaultTypeInternal() {}
  union {
    StopLogStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopLogStreamingRequestDefaultTypeInternal _StopLogStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR StopLogStreamingResponse::StopLogStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.log_streaming_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopLogStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopLogStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopLogStreamingResponseDefaultTypeInternal() {}
  union {
    StopLogStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopLogStreamingResponseDefaultTypeInternal _StopLogStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeLogStreamingRawRequest::SubscribeLogStreamingRawRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeLogStreamingRawRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeLogStreamingRawRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeLogStreamingRawRequestDefaultTypeInternal() {}
  union {
    SubscribeLogStreamingRawRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeLogStreamingRawRequestDefaultTypeInternal _SubscribeLogStreamingRawRequest_default_instance_;
PROTOBUF_CONSTEXPR LogStreamingRawResponse::LogStreamingRawResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.logging_raw_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogStreamingRawResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogStreamingRawResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogStreamingRawResponseDefaultTypeInternal() {}
  union {
    LogStreamingRawResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogStreamingRawResponseDefaultTypeInternal _LogStreamingRawResponse_default_instance_;
PROTOBUF_CONSTEXPR LogStreamingRaw::LogStreamingRaw(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_base64_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogStreamingRawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogStreamingRawDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogStreamingRawDefaultTypeInternal() {}
  union {
    LogStreamingRaw _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogStreamingRawDefaultTypeInternal _LogStreamingRaw_default_instance_;
PROTOBUF_CONSTEXPR LogStreamingResult::LogStreamingResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_str_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogStreamingResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogStreamingResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogStreamingResultDefaultTypeInternal() {}
  union {
    LogStreamingResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogStreamingResultDefaultTypeInternal _LogStreamingResult_default_instance_;
}  // namespace log_streaming
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto = nullptr;

const uint32_t TableStruct_log_5fstreaming_2flog_5fstreaming_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingResponse, _impl_.log_streaming_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingResponse, _impl_.log_streaming_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRawResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRawResponse, _impl_.logging_raw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRaw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRaw, _impl_.data_base64_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingResult, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingResult, _impl_.result_str_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::log_streaming::StartLogStreamingRequest)},
  { 6, -1, -1, sizeof(::mavsdk::rpc::log_streaming::StartLogStreamingResponse)},
  { 13, -1, -1, sizeof(::mavsdk::rpc::log_streaming::StopLogStreamingRequest)},
  { 19, -1, -1, sizeof(::mavsdk::rpc::log_streaming::StopLogStreamingResponse)},
  { 26, -1, -1, sizeof(::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest)},
  { 32, -1, -1, sizeof(::mavsdk::rpc::log_streaming::LogStreamingRawResponse)},
  { 39, -1, -1, sizeof(::mavsdk::rpc::log_streaming::LogStreamingRaw)},
  { 46, -1, -1, sizeof(::mavsdk::rpc::log_streaming::LogStreamingResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::log_streaming::_StartLogStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_StartLogStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_StopLogStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_StopLogStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_SubscribeLogStreamingRawRequest_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_LogStreamingRawResponse_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_LogStreamingRaw_default_instance_._instance,
  &::mavsdk::rpc::log_streaming::_LogStreamingResult_default_instance_._instance,
};

const char descriptor_table_protodef_log_5fstreaming_2flog_5fstreaming_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!log_streaming/log_streaming.proto\022\030mav"
  "sdk.rpc.log_streaming\032\024mavsdk_options.pr"
  "oto\"\032\n\030StartLogStreamingRequest\"g\n\031Start"
  "LogStreamingResponse\022J\n\024log_streaming_re"
  "sult\030\001 \001(\0132,.mavsdk.rpc.log_streaming.Lo"
  "gStreamingResult\"\031\n\027StopLogStreamingRequ"
  "est\"f\n\030StopLogStreamingResponse\022J\n\024log_s"
  "treaming_result\030\001 \001(\0132,.mavsdk.rpc.log_s"
  "treaming.LogStreamingResult\"!\n\037Subscribe"
  "LogStreamingRawRequest\"Y\n\027LogStreamingRa"
  "wResponse\022>\n\013logging_raw\030\001 \001(\0132).mavsdk."
  "rpc.log_streaming.LogStreamingRaw\"&\n\017Log"
  "StreamingRaw\022\023\n\013data_base64\030\001 \001(\t\"\253\002\n\022Lo"
  "gStreamingResult\022C\n\006result\030\001 \001(\01623.mavsd"
  "k.rpc.log_streaming.LogStreamingResult.R"
  "esult\022\022\n\nresult_str\030\002 \001(\t\"\273\001\n\006Result\022\022\n\016"
  "RESULT_SUCCESS\020\000\022\024\n\020RESULT_NO_SYSTEM\020\001\022\033"
  "\n\027RESULT_CONNECTION_ERROR\020\002\022\017\n\013RESULT_BU"
  "SY\020\003\022\031\n\025RESULT_COMMAND_DENIED\020\004\022\022\n\016RESUL"
  "T_TIMEOUT\020\005\022\026\n\022RESULT_UNSUPPORTED\020\006\022\022\n\016R"
  "ESULT_UNKNOWN\020\0072\245\003\n\023LogStreamingService\022"
  "~\n\021StartLogStreaming\0222.mavsdk.rpc.log_st"
  "reaming.StartLogStreamingRequest\0323.mavsd"
  "k.rpc.log_streaming.StartLogStreamingRes"
  "ponse\"\000\022{\n\020StopLogStreaming\0221.mavsdk.rpc"
  ".log_streaming.StopLogStreamingRequest\0322"
  ".mavsdk.rpc.log_streaming.StopLogStreami"
  "ngResponse\"\000\022\220\001\n\030SubscribeLogStreamingRa"
  "w\0229.mavsdk.rpc.log_streaming.SubscribeLo"
  "gStreamingRawRequest\0321.mavsdk.rpc.log_st"
  "reaming.LogStreamingRawResponse\"\004\200\265\030\0000\001B"
  ",\n\027io.mavsdk.log_streamingB\021LogStreaming"
  "Protob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::_pbi::once_flag descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto = {
    false, false, 1293, descriptor_table_protodef_log_5fstreaming_2flog_5fstreaming_2eproto,
    "log_streaming/log_streaming.proto",
    &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once, descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_deps, 1, 8,
    schemas, file_default_instances, TableStruct_log_5fstreaming_2flog_5fstreaming_2eproto::offsets,
    file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto, file_level_enum_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto,
    file_level_service_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter() {
  return &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_log_5fstreaming_2flog_5fstreaming_2eproto(&descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto);
namespace mavsdk {
namespace rpc {
namespace log_streaming {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogStreamingResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto);
  return file_level_enum_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto[0];
}
bool LogStreamingResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_SUCCESS;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_NO_SYSTEM;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_CONNECTION_ERROR;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_BUSY;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_COMMAND_DENIED;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_TIMEOUT;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_UNSUPPORTED;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_UNKNOWN;
constexpr LogStreamingResult_Result LogStreamingResult::Result_MIN;
constexpr LogStreamingResult_Result LogStreamingResult::Result_MAX;
constexpr int LogStreamingResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class StartLogStreamingRequest::_Internal {
 public:
};

StartLogStreamingRequest::StartLogStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StartLogStreamingRequest)
}
StartLogStreamingRequest::StartLogStreamingRequest(const StartLogStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StartLogStreamingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StartLogStreamingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartLogStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartLogStreamingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StartLogStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[0]);
}

// ===================================================================

class StartLogStreamingResponse::_Internal {
 public:
  static const ::mavsdk::rpc::log_streaming::LogStreamingResult& log_streaming_result(const StartLogStreamingResponse* msg);
};

const ::mavsdk::rpc::log_streaming::LogStreamingResult&
StartLogStreamingResponse::_Internal::log_streaming_result(const StartLogStreamingResponse* msg) {
  return *msg->_impl_.log_streaming_result_;
}
StartLogStreamingResponse::StartLogStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
}
StartLogStreamingResponse::StartLogStreamingResponse(const StartLogStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartLogStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.log_streaming_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_log_streaming_result()) {
    _this->_impl_.log_streaming_result_ = new ::mavsdk::rpc::log_streaming::LogStreamingResult(*from._impl_.log_streaming_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
}

inline void StartLogStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.log_streaming_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StartLogStreamingResponse::~StartLogStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartLogStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.log_streaming_result_;
}

void StartLogStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartLogStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.log_streaming_result_ != nullptr) {
    delete _impl_.log_streaming_result_;
  }
  _impl_.log_streaming_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartLogStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_log_streaming_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartLogStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  if (this->_internal_has_log_streaming_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::log_streaming_result(this),
        _Internal::log_streaming_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  return target;
}

size_t StartLogStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  if (this->_internal_has_log_streaming_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.log_streaming_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartLogStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartLogStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartLogStreamingResponse::GetClassData() const { return &_class_data_; }


void StartLogStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartLogStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StartLogStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_log_streaming_result()) {
    _this->_internal_mutable_log_streaming_result()->::mavsdk::rpc::log_streaming::LogStreamingResult::MergeFrom(
        from._internal_log_streaming_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartLogStreamingResponse::CopyFrom(const StartLogStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartLogStreamingResponse::IsInitialized() const {
  return true;
}

void StartLogStreamingResponse::InternalSwap(StartLogStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.log_streaming_result_, other->_impl_.log_streaming_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartLogStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[1]);
}

// ===================================================================

class StopLogStreamingRequest::_Internal {
 public:
};

StopLogStreamingRequest::StopLogStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StopLogStreamingRequest)
}
StopLogStreamingRequest::StopLogStreamingRequest(const StopLogStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StopLogStreamingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StopLogStreamingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopLogStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopLogStreamingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopLogStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[2]);
}

// ===================================================================

class StopLogStreamingResponse::_Internal {
 public:
  static const ::mavsdk::rpc::log_streaming::LogStreamingResult& log_streaming_result(const StopLogStreamingResponse* msg);
};

const ::mavsdk::rpc::log_streaming::LogStreamingResult&
StopLogStreamingResponse::_Internal::log_streaming_result(const StopLogStreamingResponse* msg) {
  return *msg->_impl_.log_streaming_result_;
}
StopLogStreamingResponse::StopLogStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
}
StopLogStreamingResponse::StopLogStreamingResponse(const StopLogStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopLogStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.log_streaming_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_log_streaming_result()) {
    _this->_impl_.log_streaming_result_ = new ::mavsdk::rpc::log_streaming::LogStreamingResult(*from._impl_.log_streaming_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
}

inline void StopLogStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.log_streaming_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopLogStreamingResponse::~StopLogStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopLogStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.log_streaming_result_;
}

void StopLogStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopLogStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.log_streaming_result_ != nullptr) {
    delete _impl_.log_streaming_result_;
  }
  _impl_.log_streaming_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopLogStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_log_streaming_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopLogStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  if (this->_internal_has_log_streaming_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::log_streaming_result(this),
        _Internal::log_streaming_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  return target;
}

size_t StopLogStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  if (this->_internal_has_log_streaming_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.log_streaming_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopLogStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopLogStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopLogStreamingResponse::GetClassData() const { return &_class_data_; }


void StopLogStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopLogStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StopLogStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_log_streaming_result()) {
    _this->_internal_mutable_log_streaming_result()->::mavsdk::rpc::log_streaming::LogStreamingResult::MergeFrom(
        from._internal_log_streaming_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopLogStreamingResponse::CopyFrom(const StopLogStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopLogStreamingResponse::IsInitialized() const {
  return true;
}

void StopLogStreamingResponse::InternalSwap(StopLogStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.log_streaming_result_, other->_impl_.log_streaming_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopLogStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[3]);
}

// ===================================================================

class SubscribeLogStreamingRawRequest::_Internal {
 public:
};

SubscribeLogStreamingRawRequest::SubscribeLogStreamingRawRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.SubscribeLogStreamingRawRequest)
}
SubscribeLogStreamingRawRequest::SubscribeLogStreamingRawRequest(const SubscribeLogStreamingRawRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeLogStreamingRawRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.SubscribeLogStreamingRawRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeLogStreamingRawRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeLogStreamingRawRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeLogStreamingRawRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[4]);
}

// ===================================================================

class LogStreamingRawResponse::_Internal {
 public:
  static const ::mavsdk::rpc::log_streaming::LogStreamingRaw& logging_raw(const LogStreamingRawResponse* msg);
};

const ::mavsdk::rpc::log_streaming::LogStreamingRaw&
LogStreamingRawResponse::_Internal::logging_raw(const LogStreamingRawResponse* msg) {
  return *msg->_impl_.logging_raw_;
}
LogStreamingRawResponse::LogStreamingRawResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
}
LogStreamingRawResponse::LogStreamingRawResponse(const LogStreamingRawResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogStreamingRawResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.logging_raw_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_logging_raw()) {
    _this->_impl_.logging_raw_ = new ::mavsdk::rpc::log_streaming::LogStreamingRaw(*from._impl_.logging_raw_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
}

inline void LogStreamingRawResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.logging_raw_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LogStreamingRawResponse::~LogStreamingRawResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogStreamingRawResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.logging_raw_;
}

void LogStreamingRawResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogStreamingRawResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.logging_raw_ != nullptr) {
    delete _impl_.logging_raw_;
  }
  _impl_.logging_raw_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogStreamingRawResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_logging_raw(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogStreamingRawResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
  if (this->_internal_has_logging_raw()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::logging_raw(this),
        _Internal::logging_raw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  return target;
}

size_t LogStreamingRawResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
  if (this->_internal_has_logging_raw()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.logging_raw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogStreamingRawResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogStreamingRawResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogStreamingRawResponse::GetClassData() const { return &_class_data_; }


void LogStreamingRawResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogStreamingRawResponse*>(&to_msg);
  auto& from = static_cast<const LogStreamingRawResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_logging_raw()) {
    _this->_internal_mutable_logging_raw()->::mavsdk::rpc::log_streaming::LogStreamingRaw::MergeFrom(
        from._internal_logging_raw());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogStreamingRawResponse::CopyFrom(const LogStreamingRawResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogStreamingRawResponse::IsInitialized() const {
  return true;
}

void LogStreamingRawResponse::InternalSwap(LogStreamingRawResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.logging_raw_, other->_impl_.logging_raw_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogStreamingRawResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[5]);
}

// ===================================================================

class LogStreamingRaw::_Internal {
 public:
};

LogStreamingRaw::LogStreamingRaw(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.LogStreamingRaw)
}
LogStreamingRaw::LogStreamingRaw(const LogStreamingRaw& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogStreamingRaw* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_base64_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_base64_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_base64_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_base64().empty()) {
    _this->_impl_.data_base64_.Set(from._internal_data_base64(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.LogStreamingRaw)
}

inline void LogStreamingRaw::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_base64_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_base64_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_base64_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogStreamingRaw::~LogStreamingRaw() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.LogStreamingRaw)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogStreamingRaw::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_base64_.Destroy();
}

void LogStreamingRaw::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogStreamingRaw::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_base64_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogStreamingRaw::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_base64 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_base64();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.log_streaming.LogStreamingRaw.data_base64"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogStreamingRaw::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_base64 = 1;
  if (!this->_internal_data_base64().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_base64().data(), static_cast<int>(this->_internal_data_base64().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.log_streaming.LogStreamingRaw.data_base64");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_base64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.LogStreamingRaw)
  return target;
}

size_t LogStreamingRaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_base64 = 1;
  if (!this->_internal_data_base64().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_base64());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogStreamingRaw::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogStreamingRaw::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogStreamingRaw::GetClassData() const { return &_class_data_; }


void LogStreamingRaw::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogStreamingRaw*>(&to_msg);
  auto& from = static_cast<const LogStreamingRaw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_base64().empty()) {
    _this->_internal_set_data_base64(from._internal_data_base64());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogStreamingRaw::CopyFrom(const LogStreamingRaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogStreamingRaw::IsInitialized() const {
  return true;
}

void LogStreamingRaw::InternalSwap(LogStreamingRaw* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_base64_, lhs_arena,
      &other->_impl_.data_base64_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LogStreamingRaw::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[6]);
}

// ===================================================================

class LogStreamingResult::_Internal {
 public:
};

LogStreamingResult::LogStreamingResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.LogStreamingResult)
}
LogStreamingResult::LogStreamingResult(const LogStreamingResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogStreamingResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_str_){}
    , decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_str().empty()) {
    _this->_impl_.result_str_.Set(from._internal_result_str(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.LogStreamingResult)
}

inline void LogStreamingResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_str_){}
    , decltype(_impl_.result_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogStreamingResult::~LogStreamingResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.LogStreamingResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogStreamingResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_str_.Destroy();
}

void LogStreamingResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogStreamingResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogStreamingResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::log_streaming::LogStreamingResult_Result>(val));
        } else
          goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.log_streaming.LogStreamingResult.result_str"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogStreamingResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.log_streaming.LogStreamingResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.LogStreamingResult)
  return target;
}

size_t LogStreamingResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogStreamingResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogStreamingResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogStreamingResult::GetClassData() const { return &_class_data_; }


void LogStreamingResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogStreamingResult*>(&to_msg);
  auto& from = static_cast<const LogStreamingResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogStreamingResult::CopyFrom(const LogStreamingResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogStreamingResult::IsInitialized() const {
  return true;
}

void LogStreamingResult::InternalSwap(LogStreamingResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_str_, lhs_arena,
      &other->_impl_.result_str_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogStreamingResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace log_streaming
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::StartLogStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::StartLogStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::StartLogStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::StartLogStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::StartLogStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::StartLogStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::StopLogStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::StopLogStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::StopLogStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::StopLogStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::StopLogStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::StopLogStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::LogStreamingRawResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::LogStreamingRawResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::LogStreamingRawResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::LogStreamingRaw*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::LogStreamingRaw >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::LogStreamingRaw >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::log_streaming::LogStreamingResult*
Arena::CreateMaybeMessage< ::mavsdk::rpc::log_streaming::LogStreamingResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::log_streaming::LogStreamingResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
