// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_server/camera_server.proto

#include "camera_server/camera_server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace camera_server {
PROTOBUF_CONSTEXPR SetInformationRequest::SetInformationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.information_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInformationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInformationRequestDefaultTypeInternal() {}
  union {
    SetInformationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInformationRequestDefaultTypeInternal _SetInformationRequest_default_instance_;
PROTOBUF_CONSTEXPR SetInformationResponse::SetInformationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInformationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInformationResponseDefaultTypeInternal() {}
  union {
    SetInformationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInformationResponseDefaultTypeInternal _SetInformationResponse_default_instance_;
PROTOBUF_CONSTEXPR SetVideoStreamingRequest::SetVideoStreamingRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.video_streaming_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoStreamingRequestDefaultTypeInternal() {}
  union {
    SetVideoStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoStreamingRequestDefaultTypeInternal _SetVideoStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR SetVideoStreamingResponse::SetVideoStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoStreamingResponseDefaultTypeInternal() {}
  union {
    SetVideoStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoStreamingResponseDefaultTypeInternal _SetVideoStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR SetInProgressRequest::SetInProgressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.in_progress_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetInProgressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInProgressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInProgressRequestDefaultTypeInternal() {}
  union {
    SetInProgressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInProgressRequestDefaultTypeInternal _SetInProgressRequest_default_instance_;
PROTOBUF_CONSTEXPR SetInProgressResponse::SetInProgressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetInProgressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInProgressResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInProgressResponseDefaultTypeInternal() {}
  union {
    SetInProgressResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInProgressResponseDefaultTypeInternal _SetInProgressResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeTakePhotoRequest::SubscribeTakePhotoRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeTakePhotoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTakePhotoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTakePhotoRequestDefaultTypeInternal() {}
  union {
    SubscribeTakePhotoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTakePhotoRequestDefaultTypeInternal _SubscribeTakePhotoRequest_default_instance_;
PROTOBUF_CONSTEXPR TakePhotoResponse::TakePhotoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TakePhotoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakePhotoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakePhotoResponseDefaultTypeInternal() {}
  union {
    TakePhotoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakePhotoResponseDefaultTypeInternal _TakePhotoResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondTakePhotoRequest::RespondTakePhotoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.capture_info_)*/nullptr
  , /*decltype(_impl_.take_photo_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTakePhotoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTakePhotoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTakePhotoRequestDefaultTypeInternal() {}
  union {
    RespondTakePhotoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTakePhotoRequestDefaultTypeInternal _RespondTakePhotoRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondTakePhotoResponse::RespondTakePhotoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTakePhotoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTakePhotoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTakePhotoResponseDefaultTypeInternal() {}
  union {
    RespondTakePhotoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTakePhotoResponseDefaultTypeInternal _RespondTakePhotoResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeStartVideoRequest::SubscribeStartVideoRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeStartVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStartVideoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStartVideoRequestDefaultTypeInternal() {}
  union {
    SubscribeStartVideoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStartVideoRequestDefaultTypeInternal _SubscribeStartVideoRequest_default_instance_;
PROTOBUF_CONSTEXPR StartVideoResponse::StartVideoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stream_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoResponseDefaultTypeInternal() {}
  union {
    StartVideoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoResponseDefaultTypeInternal _StartVideoResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondStartVideoRequest::RespondStartVideoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_video_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStartVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoRequestDefaultTypeInternal() {}
  union {
    RespondStartVideoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoRequestDefaultTypeInternal _RespondStartVideoRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondStartVideoResponse::RespondStartVideoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStartVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoResponseDefaultTypeInternal() {}
  union {
    RespondStartVideoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoResponseDefaultTypeInternal _RespondStartVideoResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeStopVideoRequest::SubscribeStopVideoRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeStopVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStopVideoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStopVideoRequestDefaultTypeInternal() {}
  union {
    SubscribeStopVideoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStopVideoRequestDefaultTypeInternal _SubscribeStopVideoRequest_default_instance_;
PROTOBUF_CONSTEXPR StopVideoResponse::StopVideoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stream_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoResponseDefaultTypeInternal() {}
  union {
    StopVideoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoResponseDefaultTypeInternal _StopVideoResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondStopVideoRequest::RespondStopVideoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stop_video_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStopVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoRequestDefaultTypeInternal() {}
  union {
    RespondStopVideoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoRequestDefaultTypeInternal _RespondStopVideoRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondStopVideoResponse::RespondStopVideoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStopVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoResponseDefaultTypeInternal() {}
  union {
    RespondStopVideoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoResponseDefaultTypeInternal _RespondStopVideoResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeStartVideoStreamingRequest::SubscribeStartVideoStreamingRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeStartVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStartVideoStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStartVideoStreamingRequestDefaultTypeInternal() {}
  union {
    SubscribeStartVideoStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStartVideoStreamingRequestDefaultTypeInternal _SubscribeStartVideoStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR StartVideoStreamingResponse::StartVideoStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stream_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoStreamingResponseDefaultTypeInternal() {}
  union {
    StartVideoStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoStreamingResponseDefaultTypeInternal _StartVideoStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondStartVideoStreamingRequest::RespondStartVideoStreamingRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_video_streaming_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStartVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoStreamingRequestDefaultTypeInternal() {}
  union {
    RespondStartVideoStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoStreamingRequestDefaultTypeInternal _RespondStartVideoStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondStartVideoStreamingResponse::RespondStartVideoStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStartVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoStreamingResponseDefaultTypeInternal() {}
  union {
    RespondStartVideoStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoStreamingResponseDefaultTypeInternal _RespondStartVideoStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeStopVideoStreamingRequest::SubscribeStopVideoStreamingRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeStopVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStopVideoStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStopVideoStreamingRequestDefaultTypeInternal() {}
  union {
    SubscribeStopVideoStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStopVideoStreamingRequestDefaultTypeInternal _SubscribeStopVideoStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR StopVideoStreamingResponse::StopVideoStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stream_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoStreamingResponseDefaultTypeInternal() {}
  union {
    StopVideoStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoStreamingResponseDefaultTypeInternal _StopVideoStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondStopVideoStreamingRequest::RespondStopVideoStreamingRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stop_video_streaming_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStopVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoStreamingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoStreamingRequestDefaultTypeInternal() {}
  union {
    RespondStopVideoStreamingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoStreamingRequestDefaultTypeInternal _RespondStopVideoStreamingRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondStopVideoStreamingResponse::RespondStopVideoStreamingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStopVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoStreamingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoStreamingResponseDefaultTypeInternal() {}
  union {
    RespondStopVideoStreamingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoStreamingResponseDefaultTypeInternal _RespondStopVideoStreamingResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeSetModeRequest::SubscribeSetModeRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeSetModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeSetModeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeSetModeRequestDefaultTypeInternal() {}
  union {
    SubscribeSetModeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeSetModeRequestDefaultTypeInternal _SubscribeSetModeRequest_default_instance_;
PROTOBUF_CONSTEXPR SetModeResponse::SetModeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModeResponseDefaultTypeInternal() {}
  union {
    SetModeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModeResponseDefaultTypeInternal _SetModeResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondSetModeRequest::RespondSetModeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.set_mode_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondSetModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSetModeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSetModeRequestDefaultTypeInternal() {}
  union {
    RespondSetModeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSetModeRequestDefaultTypeInternal _RespondSetModeRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondSetModeResponse::RespondSetModeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondSetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSetModeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSetModeResponseDefaultTypeInternal() {}
  union {
    RespondSetModeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSetModeResponseDefaultTypeInternal _RespondSetModeResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeStorageInformationRequest::SubscribeStorageInformationRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeStorageInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStorageInformationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStorageInformationRequestDefaultTypeInternal() {}
  union {
    SubscribeStorageInformationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStorageInformationRequestDefaultTypeInternal _SubscribeStorageInformationRequest_default_instance_;
PROTOBUF_CONSTEXPR StorageInformationResponse::StorageInformationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.storage_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StorageInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageInformationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageInformationResponseDefaultTypeInternal() {}
  union {
    StorageInformationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageInformationResponseDefaultTypeInternal _StorageInformationResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondStorageInformationRequest::RespondStorageInformationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.storage_information_)*/nullptr
  , /*decltype(_impl_.storage_information_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStorageInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStorageInformationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStorageInformationRequestDefaultTypeInternal() {}
  union {
    RespondStorageInformationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStorageInformationRequestDefaultTypeInternal _RespondStorageInformationRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondStorageInformationResponse::RespondStorageInformationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondStorageInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStorageInformationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStorageInformationResponseDefaultTypeInternal() {}
  union {
    RespondStorageInformationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStorageInformationResponseDefaultTypeInternal _RespondStorageInformationResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeCaptureStatusRequest::SubscribeCaptureStatusRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeCaptureStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCaptureStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCaptureStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeCaptureStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCaptureStatusRequestDefaultTypeInternal _SubscribeCaptureStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR CaptureStatusResponse::CaptureStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reserved_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CaptureStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureStatusResponseDefaultTypeInternal() {}
  union {
    CaptureStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureStatusResponseDefaultTypeInternal _CaptureStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondCaptureStatusRequest::RespondCaptureStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.capture_status_)*/nullptr
  , /*decltype(_impl_.capture_status_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondCaptureStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondCaptureStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondCaptureStatusRequestDefaultTypeInternal() {}
  union {
    RespondCaptureStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondCaptureStatusRequestDefaultTypeInternal _RespondCaptureStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondCaptureStatusResponse::RespondCaptureStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondCaptureStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondCaptureStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondCaptureStatusResponseDefaultTypeInternal() {}
  union {
    RespondCaptureStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondCaptureStatusResponseDefaultTypeInternal _RespondCaptureStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeFormatStorageRequest::SubscribeFormatStorageRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeFormatStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeFormatStorageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeFormatStorageRequestDefaultTypeInternal() {}
  union {
    SubscribeFormatStorageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeFormatStorageRequestDefaultTypeInternal _SubscribeFormatStorageRequest_default_instance_;
PROTOBUF_CONSTEXPR FormatStorageResponse::FormatStorageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.storage_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FormatStorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FormatStorageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FormatStorageResponseDefaultTypeInternal() {}
  union {
    FormatStorageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FormatStorageResponseDefaultTypeInternal _FormatStorageResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondFormatStorageRequest::RespondFormatStorageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.format_storage_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondFormatStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondFormatStorageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondFormatStorageRequestDefaultTypeInternal() {}
  union {
    RespondFormatStorageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondFormatStorageRequestDefaultTypeInternal _RespondFormatStorageRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondFormatStorageResponse::RespondFormatStorageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondFormatStorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondFormatStorageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondFormatStorageResponseDefaultTypeInternal() {}
  union {
    RespondFormatStorageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondFormatStorageResponseDefaultTypeInternal _RespondFormatStorageResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeResetSettingsRequest::SubscribeResetSettingsRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeResetSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeResetSettingsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeResetSettingsRequestDefaultTypeInternal() {}
  union {
    SubscribeResetSettingsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeResetSettingsRequestDefaultTypeInternal _SubscribeResetSettingsRequest_default_instance_;
PROTOBUF_CONSTEXPR ResetSettingsResponse::ResetSettingsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reserved_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResetSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetSettingsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetSettingsResponseDefaultTypeInternal() {}
  union {
    ResetSettingsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetSettingsResponseDefaultTypeInternal _ResetSettingsResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondResetSettingsRequest::RespondResetSettingsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reset_settings_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondResetSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondResetSettingsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondResetSettingsRequestDefaultTypeInternal() {}
  union {
    RespondResetSettingsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondResetSettingsRequestDefaultTypeInternal _RespondResetSettingsRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondResetSettingsResponse::RespondResetSettingsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondResetSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondResetSettingsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondResetSettingsResponseDefaultTypeInternal() {}
  union {
    RespondResetSettingsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondResetSettingsResponseDefaultTypeInternal _RespondResetSettingsResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeZoomInStartRequest::SubscribeZoomInStartRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeZoomInStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeZoomInStartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeZoomInStartRequestDefaultTypeInternal() {}
  union {
    SubscribeZoomInStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeZoomInStartRequestDefaultTypeInternal _SubscribeZoomInStartRequest_default_instance_;
PROTOBUF_CONSTEXPR ZoomInStartResponse::ZoomInStartResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reserved_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ZoomInStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomInStartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomInStartResponseDefaultTypeInternal() {}
  union {
    ZoomInStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomInStartResponseDefaultTypeInternal _ZoomInStartResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomInStartRequest::RespondZoomInStartRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.zoom_in_start_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomInStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomInStartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomInStartRequestDefaultTypeInternal() {}
  union {
    RespondZoomInStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomInStartRequestDefaultTypeInternal _RespondZoomInStartRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomInStartResponse::RespondZoomInStartResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomInStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomInStartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomInStartResponseDefaultTypeInternal() {}
  union {
    RespondZoomInStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomInStartResponseDefaultTypeInternal _RespondZoomInStartResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeZoomOutStartRequest::SubscribeZoomOutStartRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeZoomOutStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeZoomOutStartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeZoomOutStartRequestDefaultTypeInternal() {}
  union {
    SubscribeZoomOutStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeZoomOutStartRequestDefaultTypeInternal _SubscribeZoomOutStartRequest_default_instance_;
PROTOBUF_CONSTEXPR ZoomOutStartResponse::ZoomOutStartResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reserved_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ZoomOutStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomOutStartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomOutStartResponseDefaultTypeInternal() {}
  union {
    ZoomOutStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomOutStartResponseDefaultTypeInternal _ZoomOutStartResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomOutStartRequest::RespondZoomOutStartRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.zoom_out_start_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomOutStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomOutStartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomOutStartRequestDefaultTypeInternal() {}
  union {
    RespondZoomOutStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomOutStartRequestDefaultTypeInternal _RespondZoomOutStartRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomOutStartResponse::RespondZoomOutStartResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomOutStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomOutStartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomOutStartResponseDefaultTypeInternal() {}
  union {
    RespondZoomOutStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomOutStartResponseDefaultTypeInternal _RespondZoomOutStartResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeZoomStopRequest::SubscribeZoomStopRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeZoomStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeZoomStopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeZoomStopRequestDefaultTypeInternal() {}
  union {
    SubscribeZoomStopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeZoomStopRequestDefaultTypeInternal _SubscribeZoomStopRequest_default_instance_;
PROTOBUF_CONSTEXPR ZoomStopResponse::ZoomStopResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reserved_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ZoomStopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomStopResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomStopResponseDefaultTypeInternal() {}
  union {
    ZoomStopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomStopResponseDefaultTypeInternal _ZoomStopResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomStopRequest::RespondZoomStopRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.zoom_stop_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomStopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomStopRequestDefaultTypeInternal() {}
  union {
    RespondZoomStopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomStopRequestDefaultTypeInternal _RespondZoomStopRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomStopResponse::RespondZoomStopResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomStopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomStopResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomStopResponseDefaultTypeInternal() {}
  union {
    RespondZoomStopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomStopResponseDefaultTypeInternal _RespondZoomStopResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeZoomRangeRequest::SubscribeZoomRangeRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeZoomRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeZoomRangeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeZoomRangeRequestDefaultTypeInternal() {}
  union {
    SubscribeZoomRangeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeZoomRangeRequestDefaultTypeInternal _SubscribeZoomRangeRequest_default_instance_;
PROTOBUF_CONSTEXPR ZoomRangeResponse::ZoomRangeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.factor_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ZoomRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomRangeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomRangeResponseDefaultTypeInternal() {}
  union {
    ZoomRangeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomRangeResponseDefaultTypeInternal _ZoomRangeResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomRangeRequest::RespondZoomRangeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.zoom_range_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomRangeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomRangeRequestDefaultTypeInternal() {}
  union {
    RespondZoomRangeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomRangeRequestDefaultTypeInternal _RespondZoomRangeRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondZoomRangeResponse::RespondZoomRangeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondZoomRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomRangeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomRangeResponseDefaultTypeInternal() {}
  union {
    RespondZoomRangeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomRangeResponseDefaultTypeInternal _RespondZoomRangeResponse_default_instance_;
PROTOBUF_CONSTEXPR Information::Information(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vendor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.firmware_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.definition_file_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.focal_length_mm_)*/0
  , /*decltype(_impl_.horizontal_sensor_size_mm_)*/0
  , /*decltype(_impl_.vertical_sensor_size_mm_)*/0
  , /*decltype(_impl_.horizontal_resolution_px_)*/0u
  , /*decltype(_impl_.vertical_resolution_px_)*/0u
  , /*decltype(_impl_.lens_id_)*/0u
  , /*decltype(_impl_.definition_file_version_)*/0u
  , /*decltype(_impl_.image_in_video_mode_supported_)*/false
  , /*decltype(_impl_.video_in_image_mode_supported_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InformationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InformationDefaultTypeInternal() {}
  union {
    Information _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InformationDefaultTypeInternal _Information_default_instance_;
PROTOBUF_CONSTEXPR VideoStreaming::VideoStreaming(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rtsp_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.has_rtsp_server_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VideoStreamingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamingDefaultTypeInternal() {}
  union {
    VideoStreaming _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamingDefaultTypeInternal _VideoStreaming_default_instance_;
PROTOBUF_CONSTEXPR Position::Position(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.latitude_deg_)*/0
  , /*decltype(_impl_.longitude_deg_)*/0
  , /*decltype(_impl_.absolute_altitude_m_)*/0
  , /*decltype(_impl_.relative_altitude_m_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;
PROTOBUF_CONSTEXPR Quaternion::Quaternion(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.w_)*/0
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;
PROTOBUF_CONSTEXPR CaptureInfo::CaptureInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.attitude_quaternion_)*/nullptr
  , /*decltype(_impl_.time_utc_us_)*/uint64_t{0u}
  , /*decltype(_impl_.is_success_)*/false
  , /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CaptureInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureInfoDefaultTypeInternal() {}
  union {
    CaptureInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureInfoDefaultTypeInternal _CaptureInfo_default_instance_;
PROTOBUF_CONSTEXPR CameraServerResult::CameraServerResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_str_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CameraServerResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraServerResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraServerResultDefaultTypeInternal() {}
  union {
    CameraServerResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraServerResultDefaultTypeInternal _CameraServerResult_default_instance_;
PROTOBUF_CONSTEXPR StorageInformation::StorageInformation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.used_storage_mib_)*/0
  , /*decltype(_impl_.available_storage_mib_)*/0
  , /*decltype(_impl_.total_storage_mib_)*/0
  , /*decltype(_impl_.storage_status_)*/0
  , /*decltype(_impl_.storage_id_)*/0u
  , /*decltype(_impl_.storage_type_)*/0
  , /*decltype(_impl_.read_speed_mib_s_)*/0
  , /*decltype(_impl_.write_speed_mib_s_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StorageInformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageInformationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageInformationDefaultTypeInternal() {}
  union {
    StorageInformation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageInformationDefaultTypeInternal _StorageInformation_default_instance_;
PROTOBUF_CONSTEXPR CaptureStatus::CaptureStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.image_interval_s_)*/0
  , /*decltype(_impl_.recording_time_s_)*/0
  , /*decltype(_impl_.available_capacity_mib_)*/0
  , /*decltype(_impl_.image_status_)*/0
  , /*decltype(_impl_.video_status_)*/0
  , /*decltype(_impl_.image_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CaptureStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureStatusDefaultTypeInternal() {}
  union {
    CaptureStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureStatusDefaultTypeInternal _CaptureStatus_default_instance_;
PROTOBUF_CONSTEXPR SetTrackingPointStatusRequest::SetTrackingPointStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tracked_point_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetTrackingPointStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTrackingPointStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTrackingPointStatusRequestDefaultTypeInternal() {}
  union {
    SetTrackingPointStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTrackingPointStatusRequestDefaultTypeInternal _SetTrackingPointStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR SetTrackingPointStatusResponse::SetTrackingPointStatusResponse(
    ::_pbi::ConstantInitialized) {}
struct SetTrackingPointStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTrackingPointStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTrackingPointStatusResponseDefaultTypeInternal() {}
  union {
    SetTrackingPointStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTrackingPointStatusResponseDefaultTypeInternal _SetTrackingPointStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SetTrackingRectangleStatusRequest::SetTrackingRectangleStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tracked_rectangle_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetTrackingRectangleStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTrackingRectangleStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTrackingRectangleStatusRequestDefaultTypeInternal() {}
  union {
    SetTrackingRectangleStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTrackingRectangleStatusRequestDefaultTypeInternal _SetTrackingRectangleStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR SetTrackingRectangleStatusResponse::SetTrackingRectangleStatusResponse(
    ::_pbi::ConstantInitialized) {}
struct SetTrackingRectangleStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTrackingRectangleStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTrackingRectangleStatusResponseDefaultTypeInternal() {}
  union {
    SetTrackingRectangleStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTrackingRectangleStatusResponseDefaultTypeInternal _SetTrackingRectangleStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SetTrackingOffStatusRequest::SetTrackingOffStatusRequest(
    ::_pbi::ConstantInitialized) {}
struct SetTrackingOffStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTrackingOffStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTrackingOffStatusRequestDefaultTypeInternal() {}
  union {
    SetTrackingOffStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTrackingOffStatusRequestDefaultTypeInternal _SetTrackingOffStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR SetTrackingOffStatusResponse::SetTrackingOffStatusResponse(
    ::_pbi::ConstantInitialized) {}
struct SetTrackingOffStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTrackingOffStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTrackingOffStatusResponseDefaultTypeInternal() {}
  union {
    SetTrackingOffStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTrackingOffStatusResponseDefaultTypeInternal _SetTrackingOffStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeTrackingPointCommandRequest::SubscribeTrackingPointCommandRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeTrackingPointCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTrackingPointCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTrackingPointCommandRequestDefaultTypeInternal() {}
  union {
    SubscribeTrackingPointCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTrackingPointCommandRequestDefaultTypeInternal _SubscribeTrackingPointCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR TrackingPointCommandResponse::TrackingPointCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.track_point_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrackingPointCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackingPointCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackingPointCommandResponseDefaultTypeInternal() {}
  union {
    TrackingPointCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackingPointCommandResponseDefaultTypeInternal _TrackingPointCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeTrackingRectangleCommandRequest::SubscribeTrackingRectangleCommandRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeTrackingRectangleCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTrackingRectangleCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTrackingRectangleCommandRequestDefaultTypeInternal() {}
  union {
    SubscribeTrackingRectangleCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTrackingRectangleCommandRequestDefaultTypeInternal _SubscribeTrackingRectangleCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR TrackingRectangleCommandResponse::TrackingRectangleCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.track_rectangle_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrackingRectangleCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackingRectangleCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackingRectangleCommandResponseDefaultTypeInternal() {}
  union {
    TrackingRectangleCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackingRectangleCommandResponseDefaultTypeInternal _TrackingRectangleCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeTrackingOffCommandRequest::SubscribeTrackingOffCommandRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeTrackingOffCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTrackingOffCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTrackingOffCommandRequestDefaultTypeInternal() {}
  union {
    SubscribeTrackingOffCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTrackingOffCommandRequestDefaultTypeInternal _SubscribeTrackingOffCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR TrackingOffCommandResponse::TrackingOffCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dummy_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrackingOffCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackingOffCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackingOffCommandResponseDefaultTypeInternal() {}
  union {
    TrackingOffCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackingOffCommandResponseDefaultTypeInternal _TrackingOffCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondTrackingPointCommandRequest::RespondTrackingPointCommandRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stop_video_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTrackingPointCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTrackingPointCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTrackingPointCommandRequestDefaultTypeInternal() {}
  union {
    RespondTrackingPointCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTrackingPointCommandRequestDefaultTypeInternal _RespondTrackingPointCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondTrackingPointCommandResponse::RespondTrackingPointCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTrackingPointCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTrackingPointCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTrackingPointCommandResponseDefaultTypeInternal() {}
  union {
    RespondTrackingPointCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTrackingPointCommandResponseDefaultTypeInternal _RespondTrackingPointCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondTrackingRectangleCommandRequest::RespondTrackingRectangleCommandRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stop_video_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTrackingRectangleCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTrackingRectangleCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTrackingRectangleCommandRequestDefaultTypeInternal() {}
  union {
    RespondTrackingRectangleCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTrackingRectangleCommandRequestDefaultTypeInternal _RespondTrackingRectangleCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondTrackingRectangleCommandResponse::RespondTrackingRectangleCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTrackingRectangleCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTrackingRectangleCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTrackingRectangleCommandResponseDefaultTypeInternal() {}
  union {
    RespondTrackingRectangleCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTrackingRectangleCommandResponseDefaultTypeInternal _RespondTrackingRectangleCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR RespondTrackingOffCommandRequest::RespondTrackingOffCommandRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stop_video_feedback_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTrackingOffCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTrackingOffCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTrackingOffCommandRequestDefaultTypeInternal() {}
  union {
    RespondTrackingOffCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTrackingOffCommandRequestDefaultTypeInternal _RespondTrackingOffCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR RespondTrackingOffCommandResponse::RespondTrackingOffCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camera_server_result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespondTrackingOffCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTrackingOffCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTrackingOffCommandResponseDefaultTypeInternal() {}
  union {
    RespondTrackingOffCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTrackingOffCommandResponseDefaultTypeInternal _RespondTrackingOffCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR TrackPoint::TrackPoint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.point_x_)*/0
  , /*decltype(_impl_.point_y_)*/0
  , /*decltype(_impl_.radius_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrackPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackPointDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackPointDefaultTypeInternal() {}
  union {
    TrackPoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackPointDefaultTypeInternal _TrackPoint_default_instance_;
PROTOBUF_CONSTEXPR TrackRectangle::TrackRectangle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.top_left_corner_x_)*/0
  , /*decltype(_impl_.top_left_corner_y_)*/0
  , /*decltype(_impl_.bottom_right_corner_x_)*/0
  , /*decltype(_impl_.bottom_right_corner_y_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrackRectangleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackRectangleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackRectangleDefaultTypeInternal() {}
  union {
    TrackRectangle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackRectangleDefaultTypeInternal _TrackRectangle_default_instance_;
}  // namespace camera_server
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[90];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[7];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_camera_5fserver_2fcamera_5fserver_2eproto = nullptr;

const uint32_t TableStruct_camera_5fserver_2fcamera_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationRequest, _impl_.information_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamingRequest, _impl_.video_streaming_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamingResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressRequest, _impl_.in_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TakePhotoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TakePhotoResponse, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _impl_.take_photo_feedback_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _impl_.capture_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStartVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoResponse, _impl_.stream_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoRequest, _impl_.start_video_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStopVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoResponse, _impl_.stream_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoRequest, _impl_.stop_video_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoStreamingResponse, _impl_.stream_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest, _impl_.start_video_streaming_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoStreamingResponse, _impl_.stream_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest, _impl_.stop_video_streaming_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeSetModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetModeResponse, _impl_.mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeRequest, _impl_.set_mode_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformationResponse, _impl_.storage_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _impl_.storage_information_feedback_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _impl_.storage_information_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatusResponse, _impl_.reserved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _impl_.capture_status_feedback_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _impl_.capture_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::FormatStorageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::FormatStorageResponse, _impl_.storage_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageRequest, _impl_.format_storage_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ResetSettingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ResetSettingsResponse, _impl_.reserved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsRequest, _impl_.reset_settings_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeZoomInStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomInStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomInStartResponse, _impl_.reserved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomInStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomInStartRequest, _impl_.zoom_in_start_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomInStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomInStartResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeZoomOutStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomOutStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomOutStartResponse, _impl_.reserved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomOutStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomOutStartRequest, _impl_.zoom_out_start_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomOutStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomOutStartResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeZoomStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomStopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomStopResponse, _impl_.reserved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomStopRequest, _impl_.zoom_stop_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomStopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomStopResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomRangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomRangeResponse, _impl_.factor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeRequest, _impl_.zoom_range_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.vendor_name_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.firmware_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.focal_length_mm_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.horizontal_sensor_size_mm_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.vertical_sensor_size_mm_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.horizontal_resolution_px_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.vertical_resolution_px_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.lens_id_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.definition_file_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.definition_file_uri_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.image_in_video_mode_supported_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.video_in_image_mode_supported_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreaming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreaming, _impl_.has_rtsp_server_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreaming, _impl_.rtsp_uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.latitude_deg_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.longitude_deg_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.absolute_altitude_m_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.relative_altitude_m_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.w_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.attitude_quaternion_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.time_utc_us_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.is_success_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.index_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.file_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CameraServerResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CameraServerResult, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CameraServerResult, _impl_.result_str_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.used_storage_mib_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.available_storage_mib_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.total_storage_mib_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.storage_status_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.storage_id_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.storage_type_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.read_speed_mib_s_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.write_speed_mib_s_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.image_interval_s_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.recording_time_s_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.available_capacity_mib_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.image_status_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.video_status_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.image_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingPointStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingPointStatusRequest, _impl_.tracked_point_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingPointStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingRectangleStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingRectangleStatusRequest, _impl_.tracked_rectangle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingRectangleStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingOffStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetTrackingOffStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeTrackingPointCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackingPointCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackingPointCommandResponse, _impl_.track_point_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeTrackingRectangleCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackingRectangleCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackingRectangleCommandResponse, _impl_.track_rectangle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeTrackingOffCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackingOffCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackingOffCommandResponse, _impl_.dummy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingPointCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingPointCommandRequest, _impl_.stop_video_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingPointCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingPointCommandResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandRequest, _impl_.stop_video_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingOffCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingOffCommandRequest, _impl_.stop_video_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingOffCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTrackingOffCommandResponse, _impl_.camera_server_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackPoint, _impl_.point_x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackPoint, _impl_.point_y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackPoint, _impl_.radius_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackRectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackRectangle, _impl_.top_left_corner_x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackRectangle, _impl_.top_left_corner_y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackRectangle, _impl_.bottom_right_corner_x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TrackRectangle, _impl_.bottom_right_corner_y_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetInformationRequest)},
  { 7, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetInformationResponse)},
  { 14, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetVideoStreamingRequest)},
  { 21, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetVideoStreamingResponse)},
  { 28, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetInProgressRequest)},
  { 35, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetInProgressResponse)},
  { 42, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest)},
  { 48, -1, -1, sizeof(::mavsdk::rpc::camera_server::TakePhotoResponse)},
  { 55, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTakePhotoRequest)},
  { 63, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTakePhotoResponse)},
  { 70, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStartVideoRequest)},
  { 76, -1, -1, sizeof(::mavsdk::rpc::camera_server::StartVideoResponse)},
  { 83, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoRequest)},
  { 90, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoResponse)},
  { 97, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStopVideoRequest)},
  { 103, -1, -1, sizeof(::mavsdk::rpc::camera_server::StopVideoResponse)},
  { 110, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoRequest)},
  { 117, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoResponse)},
  { 124, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest)},
  { 130, -1, -1, sizeof(::mavsdk::rpc::camera_server::StartVideoStreamingResponse)},
  { 137, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest)},
  { 144, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse)},
  { 151, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest)},
  { 157, -1, -1, sizeof(::mavsdk::rpc::camera_server::StopVideoStreamingResponse)},
  { 164, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest)},
  { 171, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse)},
  { 178, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeSetModeRequest)},
  { 184, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetModeResponse)},
  { 191, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondSetModeRequest)},
  { 198, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondSetModeResponse)},
  { 205, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest)},
  { 211, -1, -1, sizeof(::mavsdk::rpc::camera_server::StorageInformationResponse)},
  { 218, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStorageInformationRequest)},
  { 226, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStorageInformationResponse)},
  { 233, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest)},
  { 239, -1, -1, sizeof(::mavsdk::rpc::camera_server::CaptureStatusResponse)},
  { 246, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest)},
  { 254, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse)},
  { 261, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest)},
  { 267, -1, -1, sizeof(::mavsdk::rpc::camera_server::FormatStorageResponse)},
  { 274, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondFormatStorageRequest)},
  { 281, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondFormatStorageResponse)},
  { 288, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest)},
  { 294, -1, -1, sizeof(::mavsdk::rpc::camera_server::ResetSettingsResponse)},
  { 301, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondResetSettingsRequest)},
  { 308, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondResetSettingsResponse)},
  { 315, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeZoomInStartRequest)},
  { 321, -1, -1, sizeof(::mavsdk::rpc::camera_server::ZoomInStartResponse)},
  { 328, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomInStartRequest)},
  { 335, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomInStartResponse)},
  { 342, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeZoomOutStartRequest)},
  { 348, -1, -1, sizeof(::mavsdk::rpc::camera_server::ZoomOutStartResponse)},
  { 355, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomOutStartRequest)},
  { 362, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomOutStartResponse)},
  { 369, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeZoomStopRequest)},
  { 375, -1, -1, sizeof(::mavsdk::rpc::camera_server::ZoomStopResponse)},
  { 382, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomStopRequest)},
  { 389, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomStopResponse)},
  { 396, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest)},
  { 402, -1, -1, sizeof(::mavsdk::rpc::camera_server::ZoomRangeResponse)},
  { 409, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomRangeRequest)},
  { 416, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomRangeResponse)},
  { 423, -1, -1, sizeof(::mavsdk::rpc::camera_server::Information)},
  { 442, -1, -1, sizeof(::mavsdk::rpc::camera_server::VideoStreaming)},
  { 450, -1, -1, sizeof(::mavsdk::rpc::camera_server::Position)},
  { 460, -1, -1, sizeof(::mavsdk::rpc::camera_server::Quaternion)},
  { 470, -1, -1, sizeof(::mavsdk::rpc::camera_server::CaptureInfo)},
  { 482, -1, -1, sizeof(::mavsdk::rpc::camera_server::CameraServerResult)},
  { 490, -1, -1, sizeof(::mavsdk::rpc::camera_server::StorageInformation)},
  { 504, -1, -1, sizeof(::mavsdk::rpc::camera_server::CaptureStatus)},
  { 516, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetTrackingPointStatusRequest)},
  { 523, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetTrackingPointStatusResponse)},
  { 529, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetTrackingRectangleStatusRequest)},
  { 536, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetTrackingRectangleStatusResponse)},
  { 542, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetTrackingOffStatusRequest)},
  { 548, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetTrackingOffStatusResponse)},
  { 554, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeTrackingPointCommandRequest)},
  { 560, -1, -1, sizeof(::mavsdk::rpc::camera_server::TrackingPointCommandResponse)},
  { 567, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeTrackingRectangleCommandRequest)},
  { 573, -1, -1, sizeof(::mavsdk::rpc::camera_server::TrackingRectangleCommandResponse)},
  { 580, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeTrackingOffCommandRequest)},
  { 586, -1, -1, sizeof(::mavsdk::rpc::camera_server::TrackingOffCommandResponse)},
  { 593, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTrackingPointCommandRequest)},
  { 600, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTrackingPointCommandResponse)},
  { 607, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandRequest)},
  { 614, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandResponse)},
  { 621, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTrackingOffCommandRequest)},
  { 628, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondTrackingOffCommandResponse)},
  { 635, -1, -1, sizeof(::mavsdk::rpc::camera_server::TrackPoint)},
  { 644, -1, -1, sizeof(::mavsdk::rpc::camera_server::TrackRectangle)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::camera_server::_SetInformationRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetInformationResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetVideoStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetVideoStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetInProgressRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetInProgressResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeTakePhotoRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_TakePhotoResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTakePhotoRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTakePhotoResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeStartVideoRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_StartVideoResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStartVideoRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStartVideoResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeStopVideoRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_StopVideoResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStopVideoRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStopVideoResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeStartVideoStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_StartVideoStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStartVideoStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStartVideoStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeStopVideoStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_StopVideoStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStopVideoStreamingRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStopVideoStreamingResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeSetModeRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetModeResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondSetModeRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondSetModeResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeStorageInformationRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_StorageInformationResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStorageInformationRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondStorageInformationResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeCaptureStatusRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_CaptureStatusResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondCaptureStatusRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondCaptureStatusResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeFormatStorageRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_FormatStorageResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondFormatStorageRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondFormatStorageResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeResetSettingsRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_ResetSettingsResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondResetSettingsRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondResetSettingsResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeZoomInStartRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_ZoomInStartResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomInStartRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomInStartResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeZoomOutStartRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_ZoomOutStartResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomOutStartRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomOutStartResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeZoomStopRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_ZoomStopResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomStopRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomStopResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeZoomRangeRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_ZoomRangeResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomRangeRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondZoomRangeResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_Information_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_VideoStreaming_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_Position_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_Quaternion_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_CaptureInfo_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_CameraServerResult_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_StorageInformation_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_CaptureStatus_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetTrackingPointStatusRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetTrackingPointStatusResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetTrackingRectangleStatusRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetTrackingRectangleStatusResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetTrackingOffStatusRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SetTrackingOffStatusResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeTrackingPointCommandRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_TrackingPointCommandResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeTrackingRectangleCommandRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_TrackingRectangleCommandResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_SubscribeTrackingOffCommandRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_TrackingOffCommandResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTrackingPointCommandRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTrackingPointCommandResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTrackingRectangleCommandRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTrackingRectangleCommandResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTrackingOffCommandRequest_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_RespondTrackingOffCommandResponse_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_TrackPoint_default_instance_._instance,
  &::mavsdk::rpc::camera_server::_TrackRectangle_default_instance_._instance,
};

const char descriptor_table_protodef_camera_5fserver_2fcamera_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!camera_server/camera_server.proto\022\030mav"
  "sdk.rpc.camera_server\032\024mavsdk_options.pr"
  "oto\"S\n\025SetInformationRequest\022:\n\013informat"
  "ion\030\001 \001(\0132%.mavsdk.rpc.camera_server.Inf"
  "ormation\"d\n\026SetInformationResponse\022J\n\024ca"
  "mera_server_result\030\001 \001(\0132,.mavsdk.rpc.ca"
  "mera_server.CameraServerResult\"]\n\030SetVid"
  "eoStreamingRequest\022A\n\017video_streaming\030\001 "
  "\001(\0132(.mavsdk.rpc.camera_server.VideoStre"
  "aming\"g\n\031SetVideoStreamingResponse\022J\n\024ca"
  "mera_server_result\030\001 \001(\0132,.mavsdk.rpc.ca"
  "mera_server.CameraServerResult\"+\n\024SetInP"
  "rogressRequest\022\023\n\013in_progress\030\001 \001(\010\"c\n\025S"
  "etInProgressResponse\022J\n\024camera_server_re"
  "sult\030\001 \001(\0132,.mavsdk.rpc.camera_server.Ca"
  "meraServerResult\"\033\n\031SubscribeTakePhotoRe"
  "quest\"\"\n\021TakePhotoResponse\022\r\n\005index\030\001 \001("
  "\005\"\235\001\n\027RespondTakePhotoRequest\022E\n\023take_ph"
  "oto_feedback\030\001 \001(\0162(.mavsdk.rpc.camera_s"
  "erver.CameraFeedback\022;\n\014capture_info\030\002 \001"
  "(\0132%.mavsdk.rpc.camera_server.CaptureInf"
  "o\"f\n\030RespondTakePhotoResponse\022J\n\024camera_"
  "server_result\030\001 \001(\0132,.mavsdk.rpc.camera_"
  "server.CameraServerResult\"\034\n\032SubscribeSt"
  "artVideoRequest\"\'\n\022StartVideoResponse\022\021\n"
  "\tstream_id\030\001 \001(\005\"b\n\030RespondStartVideoReq"
  "uest\022F\n\024start_video_feedback\030\001 \001(\0162(.mav"
  "sdk.rpc.camera_server.CameraFeedback\"g\n\031"
  "RespondStartVideoResponse\022J\n\024camera_serv"
  "er_result\030\001 \001(\0132,.mavsdk.rpc.camera_serv"
  "er.CameraServerResult\"\033\n\031SubscribeStopVi"
  "deoRequest\"&\n\021StopVideoResponse\022\021\n\tstrea"
  "m_id\030\001 \001(\005\"`\n\027RespondStopVideoRequest\022E\n"
  "\023stop_video_feedback\030\001 \001(\0162(.mavsdk.rpc."
  "camera_server.CameraFeedback\"f\n\030RespondS"
  "topVideoResponse\022J\n\024camera_server_result"
  "\030\001 \001(\0132,.mavsdk.rpc.camera_server.Camera"
  "ServerResult\"%\n#SubscribeStartVideoStrea"
  "mingRequest\"0\n\033StartVideoStreamingRespon"
  "se\022\021\n\tstream_id\030\001 \001(\005\"u\n!RespondStartVid"
  "eoStreamingRequest\022P\n\036start_video_stream"
  "ing_feedback\030\001 \001(\0162(.mavsdk.rpc.camera_s"
  "erver.CameraFeedback\"p\n\"RespondStartVide"
  "oStreamingResponse\022J\n\024camera_server_resu"
  "lt\030\001 \001(\0132,.mavsdk.rpc.camera_server.Came"
  "raServerResult\"$\n\"SubscribeStopVideoStre"
  "amingRequest\"/\n\032StopVideoStreamingRespon"
  "se\022\021\n\tstream_id\030\001 \001(\005\"s\n RespondStopVide"
  "oStreamingRequest\022O\n\035stop_video_streamin"
  "g_feedback\030\001 \001(\0162(.mavsdk.rpc.camera_ser"
  "ver.CameraFeedback\"o\n!RespondStopVideoSt"
  "reamingResponse\022J\n\024camera_server_result\030"
  "\001 \001(\0132,.mavsdk.rpc.camera_server.CameraS"
  "erverResult\"\031\n\027SubscribeSetModeRequest\"\?"
  "\n\017SetModeResponse\022,\n\004mode\030\001 \001(\0162\036.mavsdk"
  ".rpc.camera_server.Mode\"\\\n\025RespondSetMod"
  "eRequest\022C\n\021set_mode_feedback\030\001 \001(\0162(.ma"
  "vsdk.rpc.camera_server.CameraFeedback\"d\n"
  "\026RespondSetModeResponse\022J\n\024camera_server"
  "_result\030\001 \001(\0132,.mavsdk.rpc.camera_server"
  ".CameraServerResult\"$\n\"SubscribeStorageI"
  "nformationRequest\"0\n\032StorageInformationR"
  "esponse\022\022\n\nstorage_id\030\001 \001(\005\"\275\001\n RespondS"
  "torageInformationRequest\022N\n\034storage_info"
  "rmation_feedback\030\001 \001(\0162(.mavsdk.rpc.came"
  "ra_server.CameraFeedback\022I\n\023storage_info"
  "rmation\030\002 \001(\0132,.mavsdk.rpc.camera_server"
  ".StorageInformation\"o\n!RespondStorageInf"
  "ormationResponse\022J\n\024camera_server_result"
  "\030\001 \001(\0132,.mavsdk.rpc.camera_server.Camera"
  "ServerResult\"\037\n\035SubscribeCaptureStatusRe"
  "quest\")\n\025CaptureStatusResponse\022\020\n\010reserv"
  "ed\030\001 \001(\005\"\251\001\n\033RespondCaptureStatusRequest"
  "\022I\n\027capture_status_feedback\030\001 \001(\0162(.mavs"
  "dk.rpc.camera_server.CameraFeedback\022\?\n\016c"
  "apture_status\030\002 \001(\0132\'.mavsdk.rpc.camera_"
  "server.CaptureStatus\"j\n\034RespondCaptureSt"
  "atusResponse\022J\n\024camera_server_result\030\001 \001"
  "(\0132,.mavsdk.rpc.camera_server.CameraServ"
  "erResult\"\037\n\035SubscribeFormatStorageReques"
  "t\"+\n\025FormatStorageResponse\022\022\n\nstorage_id"
  "\030\001 \001(\005\"h\n\033RespondFormatStorageRequest\022I\n"
  "\027format_storage_feedback\030\001 \001(\0162(.mavsdk."
  "rpc.camera_server.CameraFeedback\"j\n\034Resp"
  "ondFormatStorageResponse\022J\n\024camera_serve"
  "r_result\030\001 \001(\0132,.mavsdk.rpc.camera_serve"
  "r.CameraServerResult\"\037\n\035SubscribeResetSe"
  "ttingsRequest\")\n\025ResetSettingsResponse\022\020"
  "\n\010reserved\030\001 \001(\005\"h\n\033RespondResetSettings"
  "Request\022I\n\027reset_settings_feedback\030\001 \001(\016"
  "2(.mavsdk.rpc.camera_server.CameraFeedba"
  "ck\"j\n\034RespondResetSettingsResponse\022J\n\024ca"
  "mera_server_result\030\001 \001(\0132,.mavsdk.rpc.ca"
  "mera_server.CameraServerResult\"\035\n\033Subscr"
  "ibeZoomInStartRequest\"\'\n\023ZoomInStartResp"
  "onse\022\020\n\010reserved\030\001 \001(\005\"e\n\031RespondZoomInS"
  "tartRequest\022H\n\026zoom_in_start_feedback\030\001 "
  "\001(\0162(.mavsdk.rpc.camera_server.CameraFee"
  "dback\"h\n\032RespondZoomInStartResponse\022J\n\024c"
  "amera_server_result\030\001 \001(\0132,.mavsdk.rpc.c"
  "amera_server.CameraServerResult\"\036\n\034Subsc"
  "ribeZoomOutStartRequest\"(\n\024ZoomOutStartR"
  "esponse\022\020\n\010reserved\030\001 \001(\005\"g\n\032RespondZoom"
  "OutStartRequest\022I\n\027zoom_out_start_feedba"
  "ck\030\001 \001(\0162(.mavsdk.rpc.camera_server.Came"
  "raFeedback\"i\n\033RespondZoomOutStartRespons"
  "e\022J\n\024camera_server_result\030\001 \001(\0132,.mavsdk"
  ".rpc.camera_server.CameraServerResult\"\032\n"
  "\030SubscribeZoomStopRequest\"$\n\020ZoomStopRes"
  "ponse\022\020\n\010reserved\030\001 \001(\005\"^\n\026RespondZoomSt"
  "opRequest\022D\n\022zoom_stop_feedback\030\001 \001(\0162(."
  "mavsdk.rpc.camera_server.CameraFeedback\""
  "e\n\027RespondZoomStopResponse\022J\n\024camera_ser"
  "ver_result\030\001 \001(\0132,.mavsdk.rpc.camera_ser"
  "ver.CameraServerResult\"\033\n\031SubscribeZoomR"
  "angeRequest\"#\n\021ZoomRangeResponse\022\016\n\006fact"
  "or\030\001 \001(\002\"`\n\027RespondZoomRangeRequest\022E\n\023z"
  "oom_range_feedback\030\001 \001(\0162(.mavsdk.rpc.ca"
  "mera_server.CameraFeedback\"f\n\030RespondZoo"
  "mRangeResponse\022J\n\024camera_server_result\030\001"
  " \001(\0132,.mavsdk.rpc.camera_server.CameraSe"
  "rverResult\"\214\003\n\013Information\022\023\n\013vendor_nam"
  "e\030\001 \001(\t\022\022\n\nmodel_name\030\002 \001(\t\022\030\n\020firmware_"
  "version\030\003 \001(\t\022\027\n\017focal_length_mm\030\004 \001(\002\022!"
  "\n\031horizontal_sensor_size_mm\030\005 \001(\002\022\037\n\027ver"
  "tical_sensor_size_mm\030\006 \001(\002\022 \n\030horizontal"
  "_resolution_px\030\007 \001(\r\022\036\n\026vertical_resolut"
  "ion_px\030\010 \001(\r\022\017\n\007lens_id\030\t \001(\r\022\037\n\027definit"
  "ion_file_version\030\n \001(\r\022\033\n\023definition_fil"
  "e_uri\030\013 \001(\t\022%\n\035image_in_video_mode_suppo"
  "rted\030\014 \001(\010\022%\n\035video_in_image_mode_suppor"
  "ted\030\r \001(\010\";\n\016VideoStreaming\022\027\n\017has_rtsp_"
  "server\030\001 \001(\010\022\020\n\010rtsp_uri\030\002 \001(\t\"q\n\010Positi"
  "on\022\024\n\014latitude_deg\030\001 \001(\001\022\025\n\rlongitude_de"
  "g\030\002 \001(\001\022\033\n\023absolute_altitude_m\030\003 \001(\002\022\033\n\023"
  "relative_altitude_m\030\004 \001(\002\"8\n\nQuaternion\022"
  "\t\n\001w\030\001 \001(\002\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 "
  "\001(\002\"\320\001\n\013CaptureInfo\0224\n\010position\030\001 \001(\0132\"."
  "mavsdk.rpc.camera_server.Position\022A\n\023att"
  "itude_quaternion\030\002 \001(\0132$.mavsdk.rpc.came"
  "ra_server.Quaternion\022\023\n\013time_utc_us\030\003 \001("
  "\004\022\022\n\nis_success\030\004 \001(\010\022\r\n\005index\030\005 \001(\005\022\020\n\010"
  "file_url\030\006 \001(\t\"\263\002\n\022CameraServerResult\022C\n"
  "\006result\030\001 \001(\01623.mavsdk.rpc.camera_server"
  ".CameraServerResult.Result\022\022\n\nresult_str"
  "\030\002 \001(\t\"\303\001\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n"
  "\016RESULT_SUCCESS\020\001\022\026\n\022RESULT_IN_PROGRESS\020"
  "\002\022\017\n\013RESULT_BUSY\020\003\022\021\n\rRESULT_DENIED\020\004\022\020\n"
  "\014RESULT_ERROR\020\005\022\022\n\016RESULT_TIMEOUT\020\006\022\031\n\025R"
  "ESULT_WRONG_ARGUMENT\020\007\022\024\n\020RESULT_NO_SYST"
  "EM\020\010\"\214\005\n\022StorageInformation\022\030\n\020used_stor"
  "age_mib\030\001 \001(\002\022\035\n\025available_storage_mib\030\002"
  " \001(\002\022\031\n\021total_storage_mib\030\003 \001(\002\022R\n\016stora"
  "ge_status\030\004 \001(\0162:.mavsdk.rpc.camera_serv"
  "er.StorageInformation.StorageStatus\022\022\n\ns"
  "torage_id\030\005 \001(\r\022N\n\014storage_type\030\006 \001(\01628."
  "mavsdk.rpc.camera_server.StorageInformat"
  "ion.StorageType\022\030\n\020read_speed_mib_s\030\007 \001("
  "\002\022\031\n\021write_speed_mib_s\030\010 \001(\002\"\221\001\n\rStorage"
  "Status\022 \n\034STORAGE_STATUS_NOT_AVAILABLE\020\000"
  "\022\036\n\032STORAGE_STATUS_UNFORMATTED\020\001\022\034\n\030STOR"
  "AGE_STATUS_FORMATTED\020\002\022 \n\034STORAGE_STATUS"
  "_NOT_SUPPORTED\020\003\"\240\001\n\013StorageType\022\030\n\024STOR"
  "AGE_TYPE_UNKNOWN\020\000\022\032\n\026STORAGE_TYPE_USB_S"
  "TICK\020\001\022\023\n\017STORAGE_TYPE_SD\020\002\022\030\n\024STORAGE_T"
  "YPE_MICROSD\020\003\022\023\n\017STORAGE_TYPE_HD\020\007\022\027\n\022ST"
  "ORAGE_TYPE_OTHER\020\376\001\"\356\003\n\rCaptureStatus\022\030\n"
  "\020image_interval_s\030\001 \001(\002\022\030\n\020recording_tim"
  "e_s\030\002 \001(\002\022\036\n\026available_capacity_mib\030\003 \001("
  "\002\022I\n\014image_status\030\004 \001(\01623.mavsdk.rpc.cam"
  "era_server.CaptureStatus.ImageStatus\022I\n\014"
  "video_status\030\005 \001(\01623.mavsdk.rpc.camera_s"
  "erver.CaptureStatus.VideoStatus\022\023\n\013image"
  "_count\030\006 \001(\005\"\221\001\n\013ImageStatus\022\025\n\021IMAGE_ST"
  "ATUS_IDLE\020\000\022$\n IMAGE_STATUS_CAPTURE_IN_P"
  "ROGRESS\020\001\022\036\n\032IMAGE_STATUS_INTERVAL_IDLE\020"
  "\002\022%\n!IMAGE_STATUS_INTERVAL_IN_PROGRESS\020\003"
  "\"J\n\013VideoStatus\022\025\n\021VIDEO_STATUS_IDLE\020\000\022$"
  "\n VIDEO_STATUS_CAPTURE_IN_PROGRESS\020\001\"\\\n\035"
  "SetTrackingPointStatusRequest\022;\n\rtracked"
  "_point\030\001 \001(\0132$.mavsdk.rpc.camera_server."
  "TrackPoint\" \n\036SetTrackingPointStatusResp"
  "onse\"h\n!SetTrackingRectangleStatusReques"
  "t\022C\n\021tracked_rectangle\030\001 \001(\0132(.mavsdk.rp"
  "c.camera_server.TrackRectangle\"$\n\"SetTra"
  "ckingRectangleStatusResponse\"\035\n\033SetTrack"
  "ingOffStatusRequest\"\036\n\034SetTrackingOffSta"
  "tusResponse\"&\n$SubscribeTrackingPointCom"
  "mandRequest\"Y\n\034TrackingPointCommandRespo"
  "nse\0229\n\013track_point\030\001 \001(\0132$.mavsdk.rpc.ca"
  "mera_server.TrackPoint\"*\n(SubscribeTrack"
  "ingRectangleCommandRequest\"e\n TrackingRe"
  "ctangleCommandResponse\022A\n\017track_rectangl"
  "e\030\001 \001(\0132(.mavsdk.rpc.camera_server.Track"
  "Rectangle\"$\n\"SubscribeTrackingOffCommand"
  "Request\"+\n\032TrackingOffCommandResponse\022\r\n"
  "\005dummy\030\001 \001(\005\"k\n\"RespondTrackingPointComm"
  "andRequest\022E\n\023stop_video_feedback\030\001 \001(\0162"
  "(.mavsdk.rpc.camera_server.CameraFeedbac"
  "k\"q\n#RespondTrackingPointCommandResponse"
  "\022J\n\024camera_server_result\030\001 \001(\0132,.mavsdk."
  "rpc.camera_server.CameraServerResult\"o\n&"
  "RespondTrackingRectangleCommandRequest\022E"
  "\n\023stop_video_feedback\030\001 \001(\0162(.mavsdk.rpc"
  ".camera_server.CameraFeedback\"u\n\'Respond"
  "TrackingRectangleCommandResponse\022J\n\024came"
  "ra_server_result\030\001 \001(\0132,.mavsdk.rpc.came"
  "ra_server.CameraServerResult\"i\n RespondT"
  "rackingOffCommandRequest\022E\n\023stop_video_f"
  "eedback\030\001 \001(\0162(.mavsdk.rpc.camera_server"
  ".CameraFeedback\"o\n!RespondTrackingOffCom"
  "mandResponse\022J\n\024camera_server_result\030\001 \001"
  "(\0132,.mavsdk.rpc.camera_server.CameraServ"
  "erResult\">\n\nTrackPoint\022\017\n\007point_x\030\001 \001(\002\022"
  "\017\n\007point_y\030\002 \001(\002\022\016\n\006radius\030\003 \001(\002\"\204\001\n\016Tra"
  "ckRectangle\022\031\n\021top_left_corner_x\030\001 \001(\002\022\031"
  "\n\021top_left_corner_y\030\002 \001(\002\022\035\n\025bottom_righ"
  "t_corner_x\030\003 \001(\002\022\035\n\025bottom_right_corner_"
  "y\030\004 \001(\002*{\n\016CameraFeedback\022\033\n\027CAMERA_FEED"
  "BACK_UNKNOWN\020\000\022\026\n\022CAMERA_FEEDBACK_OK\020\001\022\030"
  "\n\024CAMERA_FEEDBACK_BUSY\020\002\022\032\n\026CAMERA_FEEDB"
  "ACK_FAILED\020\003*8\n\004Mode\022\020\n\014MODE_UNKNOWN\020\000\022\016"
  "\n\nMODE_PHOTO\020\001\022\016\n\nMODE_VIDEO\020\0022\270+\n\023Camer"
  "aServerService\022y\n\016SetInformation\022/.mavsd"
  "k.rpc.camera_server.SetInformationReques"
  "t\0320.mavsdk.rpc.camera_server.SetInformat"
  "ionResponse\"\004\200\265\030\001\022\202\001\n\021SetVideoStreaming\022"
  "2.mavsdk.rpc.camera_server.SetVideoStrea"
  "mingRequest\0323.mavsdk.rpc.camera_server.S"
  "etVideoStreamingResponse\"\004\200\265\030\001\022v\n\rSetInP"
  "rogress\022..mavsdk.rpc.camera_server.SetIn"
  "ProgressRequest\032/.mavsdk.rpc.camera_serv"
  "er.SetInProgressResponse\"\004\200\265\030\001\022~\n\022Subscr"
  "ibeTakePhoto\0223.mavsdk.rpc.camera_server."
  "SubscribeTakePhotoRequest\032+.mavsdk.rpc.c"
  "amera_server.TakePhotoResponse\"\004\200\265\030\0000\001\022\177"
  "\n\020RespondTakePhoto\0221.mavsdk.rpc.camera_s"
  "erver.RespondTakePhotoRequest\0322.mavsdk.r"
  "pc.camera_server.RespondTakePhotoRespons"
  "e\"\004\200\265\030\001\022\201\001\n\023SubscribeStartVideo\0224.mavsdk"
  ".rpc.camera_server.SubscribeStartVideoRe"
  "quest\032,.mavsdk.rpc.camera_server.StartVi"
  "deoResponse\"\004\200\265\030\0000\001\022\202\001\n\021RespondStartVide"
  "o\0222.mavsdk.rpc.camera_server.RespondStar"
  "tVideoRequest\0323.mavsdk.rpc.camera_server"
  ".RespondStartVideoResponse\"\004\200\265\030\001\022~\n\022Subs"
  "cribeStopVideo\0223.mavsdk.rpc.camera_serve"
  "r.SubscribeStopVideoRequest\032+.mavsdk.rpc"
  ".camera_server.StopVideoResponse\"\004\200\265\030\0000\001"
  "\022\177\n\020RespondStopVideo\0221.mavsdk.rpc.camera"
  "_server.RespondStopVideoRequest\0322.mavsdk"
  ".rpc.camera_server.RespondStopVideoRespo"
  "nse\"\004\200\265\030\001\022\234\001\n\034SubscribeStartVideoStreami"
  "ng\022=.mavsdk.rpc.camera_server.SubscribeS"
  "tartVideoStreamingRequest\0325.mavsdk.rpc.c"
  "amera_server.StartVideoStreamingResponse"
  "\"\004\200\265\030\0000\001\022\235\001\n\032RespondStartVideoStreaming\022"
  ";.mavsdk.rpc.camera_server.RespondStartV"
  "ideoStreamingRequest\032<.mavsdk.rpc.camera"
  "_server.RespondStartVideoStreamingRespon"
  "se\"\004\200\265\030\001\022\231\001\n\033SubscribeStopVideoStreaming"
  "\022<.mavsdk.rpc.camera_server.SubscribeSto"
  "pVideoStreamingRequest\0324.mavsdk.rpc.came"
  "ra_server.StopVideoStreamingResponse\"\004\200\265"
  "\030\0000\001\022\232\001\n\031RespondStopVideoStreaming\022:.mav"
  "sdk.rpc.camera_server.RespondStopVideoSt"
  "reamingRequest\032;.mavsdk.rpc.camera_serve"
  "r.RespondStopVideoStreamingResponse\"\004\200\265\030"
  "\001\022x\n\020SubscribeSetMode\0221.mavsdk.rpc.camer"
  "a_server.SubscribeSetModeRequest\032).mavsd"
  "k.rpc.camera_server.SetModeResponse\"\004\200\265\030"
  "\0000\001\022y\n\016RespondSetMode\022/.mavsdk.rpc.camer"
  "a_server.RespondSetModeRequest\0320.mavsdk."
  "rpc.camera_server.RespondSetModeResponse"
  "\"\004\200\265\030\001\022\231\001\n\033SubscribeStorageInformation\022<"
  ".mavsdk.rpc.camera_server.SubscribeStora"
  "geInformationRequest\0324.mavsdk.rpc.camera"
  "_server.StorageInformationResponse\"\004\200\265\030\000"
  "0\001\022\232\001\n\031RespondStorageInformation\022:.mavsd"
  "k.rpc.camera_server.RespondStorageInform"
  "ationRequest\032;.mavsdk.rpc.camera_server."
  "RespondStorageInformationResponse\"\004\200\265\030\001\022"
  "\212\001\n\026SubscribeCaptureStatus\0227.mavsdk.rpc."
  "camera_server.SubscribeCaptureStatusRequ"
  "est\032/.mavsdk.rpc.camera_server.CaptureSt"
  "atusResponse\"\004\200\265\030\0000\001\022\213\001\n\024RespondCaptureS"
  "tatus\0225.mavsdk.rpc.camera_server.Respond"
  "CaptureStatusRequest\0326.mavsdk.rpc.camera"
  "_server.RespondCaptureStatusResponse\"\004\200\265"
  "\030\001\022\212\001\n\026SubscribeFormatStorage\0227.mavsdk.r"
  "pc.camera_server.SubscribeFormatStorageR"
  "equest\032/.mavsdk.rpc.camera_server.Format"
  "StorageResponse\"\004\200\265\030\0000\001\022\213\001\n\024RespondForma"
  "tStorage\0225.mavsdk.rpc.camera_server.Resp"
  "ondFormatStorageRequest\0326.mavsdk.rpc.cam"
  "era_server.RespondFormatStorageResponse\""
  "\004\200\265\030\001\022\212\001\n\026SubscribeResetSettings\0227.mavsd"
  "k.rpc.camera_server.SubscribeResetSettin"
  "gsRequest\032/.mavsdk.rpc.camera_server.Res"
  "etSettingsResponse\"\004\200\265\030\0000\001\022\213\001\n\024RespondRe"
  "setSettings\0225.mavsdk.rpc.camera_server.R"
  "espondResetSettingsRequest\0326.mavsdk.rpc."
  "camera_server.RespondResetSettingsRespon"
  "se\"\004\200\265\030\001\022\204\001\n\024SubscribeZoomInStart\0225.mavs"
  "dk.rpc.camera_server.SubscribeZoomInStar"
  "tRequest\032-.mavsdk.rpc.camera_server.Zoom"
  "InStartResponse\"\004\200\265\030\0000\001\022\205\001\n\022RespondZoomI"
  "nStart\0223.mavsdk.rpc.camera_server.Respon"
  "dZoomInStartRequest\0324.mavsdk.rpc.camera_"
  "server.RespondZoomInStartResponse\"\004\200\265\030\001\022"
  "\207\001\n\025SubscribeZoomOutStart\0226.mavsdk.rpc.c"
  "amera_server.SubscribeZoomOutStartReques"
  "t\032..mavsdk.rpc.camera_server.ZoomOutStar"
  "tResponse\"\004\200\265\030\0000\001\022\210\001\n\023RespondZoomOutStar"
  "t\0224.mavsdk.rpc.camera_server.RespondZoom"
  "OutStartRequest\0325.mavsdk.rpc.camera_serv"
  "er.RespondZoomOutStartResponse\"\004\200\265\030\001\022{\n\021"
  "SubscribeZoomStop\0222.mavsdk.rpc.camera_se"
  "rver.SubscribeZoomStopRequest\032*.mavsdk.r"
  "pc.camera_server.ZoomStopResponse\"\004\200\265\030\0000"
  "\001\022|\n\017RespondZoomStop\0220.mavsdk.rpc.camera"
  "_server.RespondZoomStopRequest\0321.mavsdk."
  "rpc.camera_server.RespondZoomStopRespons"
  "e\"\004\200\265\030\001\022~\n\022SubscribeZoomRange\0223.mavsdk.r"
  "pc.camera_server.SubscribeZoomRangeReque"
  "st\032+.mavsdk.rpc.camera_server.ZoomRangeR"
  "esponse\"\004\200\265\030\0000\001\022\177\n\020RespondZoomRange\0221.ma"
  "vsdk.rpc.camera_server.RespondZoomRangeR"
  "equest\0322.mavsdk.rpc.camera_server.Respon"
  "dZoomRangeResponse\"\004\200\265\030\001\022\235\001\n\032SetTracking"
  "RectangleStatus\022;.mavsdk.rpc.camera_serv"
  "er.SetTrackingRectangleStatusRequest\032<.m"
  "avsdk.rpc.camera_server.SetTrackingRecta"
  "ngleStatusResponse\"\004\200\265\030\001\022\213\001\n\024SetTracking"
  "OffStatus\0225.mavsdk.rpc.camera_server.Set"
  "TrackingOffStatusRequest\0326.mavsdk.rpc.ca"
  "mera_server.SetTrackingOffStatusResponse"
  "\"\004\200\265\030\001\022\237\001\n\035SubscribeTrackingPointCommand"
  "\022>.mavsdk.rpc.camera_server.SubscribeTra"
  "ckingPointCommandRequest\0326.mavsdk.rpc.ca"
  "mera_server.TrackingPointCommandResponse"
  "\"\004\200\265\030\0000\001\022\253\001\n!SubscribeTrackingRectangleC"
  "ommand\022B.mavsdk.rpc.camera_server.Subscr"
  "ibeTrackingRectangleCommandRequest\032:.mav"
  "sdk.rpc.camera_server.TrackingRectangleC"
  "ommandResponse\"\004\200\265\030\0000\001\022\231\001\n\033SubscribeTrac"
  "kingOffCommand\022<.mavsdk.rpc.camera_serve"
  "r.SubscribeTrackingOffCommandRequest\0324.m"
  "avsdk.rpc.camera_server.TrackingOffComma"
  "ndResponse\"\004\200\265\030\0000\001\022\240\001\n\033RespondTrackingPo"
  "intCommand\022<.mavsdk.rpc.camera_server.Re"
  "spondTrackingPointCommandRequest\032=.mavsd"
  "k.rpc.camera_server.RespondTrackingPoint"
  "CommandResponse\"\004\200\265\030\001\022\254\001\n\037RespondTrackin"
  "gRectangleCommand\022@.mavsdk.rpc.camera_se"
  "rver.RespondTrackingRectangleCommandRequ"
  "est\032A.mavsdk.rpc.camera_server.RespondTr"
  "ackingRectangleCommandResponse\"\004\200\265\030\001\022\232\001\n"
  "\031RespondTrackingOffCommand\022:.mavsdk.rpc."
  "camera_server.RespondTrackingOffCommandR"
  "equest\032;.mavsdk.rpc.camera_server.Respon"
  "dTrackingOffCommandResponse\"\004\200\265\030\001B,\n\027io."
  "mavsdk.camera_serverB\021CameraServerProtob"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::_pbi::once_flag descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto = {
    false, false, 14527, descriptor_table_protodef_camera_5fserver_2fcamera_5fserver_2eproto,
    "camera_server/camera_server.proto",
    &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once, descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_deps, 1, 90,
    schemas, file_default_instances, TableStruct_camera_5fserver_2fcamera_5fserver_2eproto::offsets,
    file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto, file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto,
    file_level_service_descriptors_camera_5fserver_2fcamera_5fserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter() {
  return &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_camera_5fserver_2fcamera_5fserver_2eproto(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
namespace mavsdk {
namespace rpc {
namespace camera_server {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CameraServerResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[0];
}
bool CameraServerResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CameraServerResult_Result CameraServerResult::RESULT_UNKNOWN;
constexpr CameraServerResult_Result CameraServerResult::RESULT_SUCCESS;
constexpr CameraServerResult_Result CameraServerResult::RESULT_IN_PROGRESS;
constexpr CameraServerResult_Result CameraServerResult::RESULT_BUSY;
constexpr CameraServerResult_Result CameraServerResult::RESULT_DENIED;
constexpr CameraServerResult_Result CameraServerResult::RESULT_ERROR;
constexpr CameraServerResult_Result CameraServerResult::RESULT_TIMEOUT;
constexpr CameraServerResult_Result CameraServerResult::RESULT_WRONG_ARGUMENT;
constexpr CameraServerResult_Result CameraServerResult::RESULT_NO_SYSTEM;
constexpr CameraServerResult_Result CameraServerResult::Result_MIN;
constexpr CameraServerResult_Result CameraServerResult::Result_MAX;
constexpr int CameraServerResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StorageInformation_StorageStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[1];
}
bool StorageInformation_StorageStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_NOT_AVAILABLE;
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_UNFORMATTED;
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_FORMATTED;
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_NOT_SUPPORTED;
constexpr StorageInformation_StorageStatus StorageInformation::StorageStatus_MIN;
constexpr StorageInformation_StorageStatus StorageInformation::StorageStatus_MAX;
constexpr int StorageInformation::StorageStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StorageInformation_StorageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[2];
}
bool StorageInformation_StorageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
    case 254:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_UNKNOWN;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_USB_STICK;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_SD;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_MICROSD;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_HD;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_OTHER;
constexpr StorageInformation_StorageType StorageInformation::StorageType_MIN;
constexpr StorageInformation_StorageType StorageInformation::StorageType_MAX;
constexpr int StorageInformation::StorageType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CaptureStatus_ImageStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[3];
}
bool CaptureStatus_ImageStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_IDLE;
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_CAPTURE_IN_PROGRESS;
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_INTERVAL_IDLE;
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_INTERVAL_IN_PROGRESS;
constexpr CaptureStatus_ImageStatus CaptureStatus::ImageStatus_MIN;
constexpr CaptureStatus_ImageStatus CaptureStatus::ImageStatus_MAX;
constexpr int CaptureStatus::ImageStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CaptureStatus_VideoStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[4];
}
bool CaptureStatus_VideoStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CaptureStatus_VideoStatus CaptureStatus::VIDEO_STATUS_IDLE;
constexpr CaptureStatus_VideoStatus CaptureStatus::VIDEO_STATUS_CAPTURE_IN_PROGRESS;
constexpr CaptureStatus_VideoStatus CaptureStatus::VideoStatus_MIN;
constexpr CaptureStatus_VideoStatus CaptureStatus::VideoStatus_MAX;
constexpr int CaptureStatus::VideoStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CameraFeedback_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[5];
}
bool CameraFeedback_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Mode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[6];
}
bool Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SetInformationRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::Information& information(const SetInformationRequest* msg);
};

const ::mavsdk::rpc::camera_server::Information&
SetInformationRequest::_Internal::information(const SetInformationRequest* msg) {
  return *msg->_impl_.information_;
}
SetInformationRequest::SetInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInformationRequest)
}
SetInformationRequest::SetInformationRequest(const SetInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetInformationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.information_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_information()) {
    _this->_impl_.information_ = new ::mavsdk::rpc::camera_server::Information(*from._impl_.information_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInformationRequest)
}

inline void SetInformationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.information_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetInformationRequest::~SetInformationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInformationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetInformationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.information_;
}

void SetInformationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInformationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.information_ != nullptr) {
    delete _impl_.information_;
  }
  _impl_.information_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetInformationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.Information information = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_information(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetInformationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInformationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Information information = 1;
  if (this->_internal_has_information()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::information(this),
        _Internal::information(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInformationRequest)
  return target;
}

size_t SetInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInformationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Information information = 1;
  if (this->_internal_has_information()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.information_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInformationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetInformationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInformationRequest::GetClassData() const { return &_class_data_; }


void SetInformationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetInformationRequest*>(&to_msg);
  auto& from = static_cast<const SetInformationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInformationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_information()) {
    _this->_internal_mutable_information()->::mavsdk::rpc::camera_server::Information::MergeFrom(
        from._internal_information());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetInformationRequest::CopyFrom(const SetInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInformationRequest::IsInitialized() const {
  return true;
}

void SetInformationRequest::InternalSwap(SetInformationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.information_, other->_impl_.information_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[0]);
}

// ===================================================================

class SetInformationResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const SetInformationResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
SetInformationResponse::_Internal::camera_server_result(const SetInformationResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
SetInformationResponse::SetInformationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInformationResponse)
}
SetInformationResponse::SetInformationResponse(const SetInformationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetInformationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInformationResponse)
}

inline void SetInformationResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetInformationResponse::~SetInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInformationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetInformationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void SetInformationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInformationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetInformationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetInformationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInformationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInformationResponse)
  return target;
}

size_t SetInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInformationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInformationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetInformationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInformationResponse::GetClassData() const { return &_class_data_; }


void SetInformationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetInformationResponse*>(&to_msg);
  auto& from = static_cast<const SetInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInformationResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetInformationResponse::CopyFrom(const SetInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInformationResponse::IsInitialized() const {
  return true;
}

void SetInformationResponse::InternalSwap(SetInformationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[1]);
}

// ===================================================================

class SetVideoStreamingRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::VideoStreaming& video_streaming(const SetVideoStreamingRequest* msg);
};

const ::mavsdk::rpc::camera_server::VideoStreaming&
SetVideoStreamingRequest::_Internal::video_streaming(const SetVideoStreamingRequest* msg) {
  return *msg->_impl_.video_streaming_;
}
SetVideoStreamingRequest::SetVideoStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
}
SetVideoStreamingRequest::SetVideoStreamingRequest(const SetVideoStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVideoStreamingRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.video_streaming_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_video_streaming()) {
    _this->_impl_.video_streaming_ = new ::mavsdk::rpc::camera_server::VideoStreaming(*from._impl_.video_streaming_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
}

inline void SetVideoStreamingRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.video_streaming_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetVideoStreamingRequest::~SetVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVideoStreamingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.video_streaming_;
}

void SetVideoStreamingRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.video_streaming_ != nullptr) {
    delete _impl_.video_streaming_;
  }
  _impl_.video_streaming_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVideoStreamingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.VideoStreaming video_streaming = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_video_streaming(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVideoStreamingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.VideoStreaming video_streaming = 1;
  if (this->_internal_has_video_streaming()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::video_streaming(this),
        _Internal::video_streaming(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  return target;
}

size_t SetVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.VideoStreaming video_streaming = 1;
  if (this->_internal_has_video_streaming()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.video_streaming_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVideoStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVideoStreamingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVideoStreamingRequest::GetClassData() const { return &_class_data_; }


void SetVideoStreamingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const SetVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_video_streaming()) {
    _this->_internal_mutable_video_streaming()->::mavsdk::rpc::camera_server::VideoStreaming::MergeFrom(
        from._internal_video_streaming());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoStreamingRequest::CopyFrom(const SetVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVideoStreamingRequest::IsInitialized() const {
  return true;
}

void SetVideoStreamingRequest::InternalSwap(SetVideoStreamingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.video_streaming_, other->_impl_.video_streaming_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[2]);
}

// ===================================================================

class SetVideoStreamingResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const SetVideoStreamingResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
SetVideoStreamingResponse::_Internal::camera_server_result(const SetVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
SetVideoStreamingResponse::SetVideoStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
}
SetVideoStreamingResponse::SetVideoStreamingResponse(const SetVideoStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVideoStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
}

inline void SetVideoStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetVideoStreamingResponse::~SetVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVideoStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void SetVideoStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVideoStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVideoStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  return target;
}

size_t SetVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVideoStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVideoStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVideoStreamingResponse::GetClassData() const { return &_class_data_; }


void SetVideoStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const SetVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoStreamingResponse::CopyFrom(const SetVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVideoStreamingResponse::IsInitialized() const {
  return true;
}

void SetVideoStreamingResponse::InternalSwap(SetVideoStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[3]);
}

// ===================================================================

class SetInProgressRequest::_Internal {
 public:
};

SetInProgressRequest::SetInProgressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInProgressRequest)
}
SetInProgressRequest::SetInProgressRequest(const SetInProgressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetInProgressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.in_progress_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.in_progress_ = from._impl_.in_progress_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInProgressRequest)
}

inline void SetInProgressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.in_progress_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetInProgressRequest::~SetInProgressRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInProgressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetInProgressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetInProgressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetInProgressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.in_progress_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetInProgressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool in_progress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.in_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetInProgressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool in_progress = 1;
  if (this->_internal_in_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_in_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInProgressRequest)
  return target;
}

size_t SetInProgressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool in_progress = 1;
  if (this->_internal_in_progress() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInProgressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetInProgressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInProgressRequest::GetClassData() const { return &_class_data_; }


void SetInProgressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetInProgressRequest*>(&to_msg);
  auto& from = static_cast<const SetInProgressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_in_progress() != 0) {
    _this->_internal_set_in_progress(from._internal_in_progress());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetInProgressRequest::CopyFrom(const SetInProgressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInProgressRequest::IsInitialized() const {
  return true;
}

void SetInProgressRequest::InternalSwap(SetInProgressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.in_progress_, other->_impl_.in_progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetInProgressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[4]);
}

// ===================================================================

class SetInProgressResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const SetInProgressResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
SetInProgressResponse::_Internal::camera_server_result(const SetInProgressResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
SetInProgressResponse::SetInProgressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInProgressResponse)
}
SetInProgressResponse::SetInProgressResponse(const SetInProgressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetInProgressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInProgressResponse)
}

inline void SetInProgressResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetInProgressResponse::~SetInProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInProgressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetInProgressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void SetInProgressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetInProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetInProgressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetInProgressResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInProgressResponse)
  return target;
}

size_t SetInProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInProgressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetInProgressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInProgressResponse::GetClassData() const { return &_class_data_; }


void SetInProgressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetInProgressResponse*>(&to_msg);
  auto& from = static_cast<const SetInProgressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetInProgressResponse::CopyFrom(const SetInProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInProgressResponse::IsInitialized() const {
  return true;
}

void SetInProgressResponse::InternalSwap(SetInProgressResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetInProgressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[5]);
}

// ===================================================================

class SubscribeTakePhotoRequest::_Internal {
 public:
};

SubscribeTakePhotoRequest::SubscribeTakePhotoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeTakePhotoRequest)
}
SubscribeTakePhotoRequest::SubscribeTakePhotoRequest(const SubscribeTakePhotoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeTakePhotoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeTakePhotoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeTakePhotoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeTakePhotoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTakePhotoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[6]);
}

// ===================================================================

class TakePhotoResponse::_Internal {
 public:
};

TakePhotoResponse::TakePhotoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TakePhotoResponse)
}
TakePhotoResponse::TakePhotoResponse(const TakePhotoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TakePhotoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.TakePhotoResponse)
}

inline void TakePhotoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TakePhotoResponse::~TakePhotoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TakePhotoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TakePhotoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TakePhotoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TakePhotoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TakePhotoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TakePhotoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TakePhotoResponse)
  return target;
}

size_t TakePhotoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TakePhotoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TakePhotoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TakePhotoResponse::GetClassData() const { return &_class_data_; }


void TakePhotoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TakePhotoResponse*>(&to_msg);
  auto& from = static_cast<const TakePhotoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TakePhotoResponse::CopyFrom(const TakePhotoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakePhotoResponse::IsInitialized() const {
  return true;
}

void TakePhotoResponse::InternalSwap(TakePhotoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TakePhotoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[7]);
}

// ===================================================================

class RespondTakePhotoRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CaptureInfo& capture_info(const RespondTakePhotoRequest* msg);
};

const ::mavsdk::rpc::camera_server::CaptureInfo&
RespondTakePhotoRequest::_Internal::capture_info(const RespondTakePhotoRequest* msg) {
  return *msg->_impl_.capture_info_;
}
RespondTakePhotoRequest::RespondTakePhotoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
}
RespondTakePhotoRequest::RespondTakePhotoRequest(const RespondTakePhotoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTakePhotoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.capture_info_){nullptr}
    , decltype(_impl_.take_photo_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_capture_info()) {
    _this->_impl_.capture_info_ = new ::mavsdk::rpc::camera_server::CaptureInfo(*from._impl_.capture_info_);
  }
  _this->_impl_.take_photo_feedback_ = from._impl_.take_photo_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
}

inline void RespondTakePhotoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.capture_info_){nullptr}
    , decltype(_impl_.take_photo_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTakePhotoRequest::~RespondTakePhotoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTakePhotoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.capture_info_;
}

void RespondTakePhotoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTakePhotoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.capture_info_ != nullptr) {
    delete _impl_.capture_info_;
  }
  _impl_.capture_info_ = nullptr;
  _impl_.take_photo_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTakePhotoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_take_photo_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_capture_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTakePhotoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
  if (this->_internal_take_photo_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_take_photo_feedback(), target);
  }

  // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
  if (this->_internal_has_capture_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::capture_info(this),
        _Internal::capture_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  return target;
}

size_t RespondTakePhotoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
  if (this->_internal_has_capture_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.capture_info_);
  }

  // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
  if (this->_internal_take_photo_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_take_photo_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTakePhotoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTakePhotoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTakePhotoRequest::GetClassData() const { return &_class_data_; }


void RespondTakePhotoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTakePhotoRequest*>(&to_msg);
  auto& from = static_cast<const RespondTakePhotoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_capture_info()) {
    _this->_internal_mutable_capture_info()->::mavsdk::rpc::camera_server::CaptureInfo::MergeFrom(
        from._internal_capture_info());
  }
  if (from._internal_take_photo_feedback() != 0) {
    _this->_internal_set_take_photo_feedback(from._internal_take_photo_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTakePhotoRequest::CopyFrom(const RespondTakePhotoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTakePhotoRequest::IsInitialized() const {
  return true;
}

void RespondTakePhotoRequest::InternalSwap(RespondTakePhotoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.take_photo_feedback_)
      + sizeof(RespondTakePhotoRequest::_impl_.take_photo_feedback_)
      - PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.capture_info_)>(
          reinterpret_cast<char*>(&_impl_.capture_info_),
          reinterpret_cast<char*>(&other->_impl_.capture_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTakePhotoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[8]);
}

// ===================================================================

class RespondTakePhotoResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondTakePhotoResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondTakePhotoResponse::_Internal::camera_server_result(const RespondTakePhotoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondTakePhotoResponse::RespondTakePhotoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
}
RespondTakePhotoResponse::RespondTakePhotoResponse(const RespondTakePhotoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTakePhotoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
}

inline void RespondTakePhotoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTakePhotoResponse::~RespondTakePhotoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTakePhotoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondTakePhotoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTakePhotoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTakePhotoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTakePhotoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  return target;
}

size_t RespondTakePhotoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTakePhotoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTakePhotoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTakePhotoResponse::GetClassData() const { return &_class_data_; }


void RespondTakePhotoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTakePhotoResponse*>(&to_msg);
  auto& from = static_cast<const RespondTakePhotoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTakePhotoResponse::CopyFrom(const RespondTakePhotoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTakePhotoResponse::IsInitialized() const {
  return true;
}

void RespondTakePhotoResponse::InternalSwap(RespondTakePhotoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTakePhotoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[9]);
}

// ===================================================================

class SubscribeStartVideoRequest::_Internal {
 public:
};

SubscribeStartVideoRequest::SubscribeStartVideoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoRequest)
}
SubscribeStartVideoRequest::SubscribeStartVideoRequest(const SubscribeStartVideoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeStartVideoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeStartVideoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeStartVideoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeStartVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[10]);
}

// ===================================================================

class StartVideoResponse::_Internal {
 public:
};

StartVideoResponse::StartVideoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StartVideoResponse)
}
StartVideoResponse::StartVideoResponse(const StartVideoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartVideoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stream_id_ = from._impl_.stream_id_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.StartVideoResponse)
}

inline void StartVideoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StartVideoResponse::~StartVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StartVideoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartVideoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StartVideoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StartVideoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartVideoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.stream_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartVideoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StartVideoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StartVideoResponse)
  return target;
}

size_t StartVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StartVideoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartVideoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartVideoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartVideoResponse::GetClassData() const { return &_class_data_; }


void StartVideoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartVideoResponse*>(&to_msg);
  auto& from = static_cast<const StartVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StartVideoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoResponse::CopyFrom(const StartVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StartVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartVideoResponse::IsInitialized() const {
  return true;
}

void StartVideoResponse::InternalSwap(StartVideoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[11]);
}

// ===================================================================

class RespondStartVideoRequest::_Internal {
 public:
};

RespondStartVideoRequest::RespondStartVideoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoRequest)
}
RespondStartVideoRequest::RespondStartVideoRequest(const RespondStartVideoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStartVideoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_video_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.start_video_feedback_ = from._impl_.start_video_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStartVideoRequest)
}

inline void RespondStartVideoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_video_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStartVideoRequest::~RespondStartVideoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStartVideoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondStartVideoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStartVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_video_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStartVideoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_start_video_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStartVideoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
  if (this->_internal_start_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_start_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  return target;
}

size_t RespondStartVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
  if (this->_internal_start_video_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_start_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStartVideoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStartVideoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStartVideoRequest::GetClassData() const { return &_class_data_; }


void RespondStartVideoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoRequest*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_video_feedback() != 0) {
    _this->_internal_set_start_video_feedback(from._internal_start_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoRequest::CopyFrom(const RespondStartVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStartVideoRequest::IsInitialized() const {
  return true;
}

void RespondStartVideoRequest::InternalSwap(RespondStartVideoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.start_video_feedback_, other->_impl_.start_video_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStartVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[12]);
}

// ===================================================================

class RespondStartVideoResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStartVideoResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondStartVideoResponse::_Internal::camera_server_result(const RespondStartVideoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStartVideoResponse::RespondStartVideoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoResponse)
}
RespondStartVideoResponse::RespondStartVideoResponse(const RespondStartVideoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStartVideoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStartVideoResponse)
}

inline void RespondStartVideoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStartVideoResponse::~RespondStartVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStartVideoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondStartVideoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStartVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStartVideoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStartVideoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  return target;
}

size_t RespondStartVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStartVideoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStartVideoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStartVideoResponse::GetClassData() const { return &_class_data_; }


void RespondStartVideoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoResponse*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoResponse::CopyFrom(const RespondStartVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStartVideoResponse::IsInitialized() const {
  return true;
}

void RespondStartVideoResponse::InternalSwap(RespondStartVideoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStartVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[13]);
}

// ===================================================================

class SubscribeStopVideoRequest::_Internal {
 public:
};

SubscribeStopVideoRequest::SubscribeStopVideoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoRequest)
}
SubscribeStopVideoRequest::SubscribeStopVideoRequest(const SubscribeStopVideoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeStopVideoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeStopVideoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeStopVideoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeStopVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[14]);
}

// ===================================================================

class StopVideoResponse::_Internal {
 public:
};

StopVideoResponse::StopVideoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StopVideoResponse)
}
StopVideoResponse::StopVideoResponse(const StopVideoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopVideoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stream_id_ = from._impl_.stream_id_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.StopVideoResponse)
}

inline void StopVideoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopVideoResponse::~StopVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StopVideoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopVideoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StopVideoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StopVideoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopVideoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.stream_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopVideoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StopVideoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StopVideoResponse)
  return target;
}

size_t StopVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StopVideoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopVideoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopVideoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopVideoResponse::GetClassData() const { return &_class_data_; }


void StopVideoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopVideoResponse*>(&to_msg);
  auto& from = static_cast<const StopVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StopVideoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoResponse::CopyFrom(const StopVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StopVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopVideoResponse::IsInitialized() const {
  return true;
}

void StopVideoResponse::InternalSwap(StopVideoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[15]);
}

// ===================================================================

class RespondStopVideoRequest::_Internal {
 public:
};

RespondStopVideoRequest::RespondStopVideoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoRequest)
}
RespondStopVideoRequest::RespondStopVideoRequest(const RespondStopVideoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStopVideoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stop_video_feedback_ = from._impl_.stop_video_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStopVideoRequest)
}

inline void RespondStopVideoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStopVideoRequest::~RespondStopVideoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStopVideoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondStopVideoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStopVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStopVideoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_video_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStopVideoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stop_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  return target;
}

size_t RespondStopVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStopVideoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStopVideoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStopVideoRequest::GetClassData() const { return &_class_data_; }


void RespondStopVideoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoRequest*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_feedback() != 0) {
    _this->_internal_set_stop_video_feedback(from._internal_stop_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoRequest::CopyFrom(const RespondStopVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStopVideoRequest::IsInitialized() const {
  return true;
}

void RespondStopVideoRequest::InternalSwap(RespondStopVideoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_feedback_, other->_impl_.stop_video_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStopVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[16]);
}

// ===================================================================

class RespondStopVideoResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStopVideoResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondStopVideoResponse::_Internal::camera_server_result(const RespondStopVideoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStopVideoResponse::RespondStopVideoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoResponse)
}
RespondStopVideoResponse::RespondStopVideoResponse(const RespondStopVideoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStopVideoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStopVideoResponse)
}

inline void RespondStopVideoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStopVideoResponse::~RespondStopVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStopVideoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondStopVideoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStopVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStopVideoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStopVideoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  return target;
}

size_t RespondStopVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStopVideoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStopVideoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStopVideoResponse::GetClassData() const { return &_class_data_; }


void RespondStopVideoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoResponse*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoResponse::CopyFrom(const RespondStopVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStopVideoResponse::IsInitialized() const {
  return true;
}

void RespondStopVideoResponse::InternalSwap(RespondStopVideoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStopVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[17]);
}

// ===================================================================

class SubscribeStartVideoStreamingRequest::_Internal {
 public:
};

SubscribeStartVideoStreamingRequest::SubscribeStartVideoStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoStreamingRequest)
}
SubscribeStartVideoStreamingRequest::SubscribeStartVideoStreamingRequest(const SubscribeStartVideoStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeStartVideoStreamingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoStreamingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeStartVideoStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeStartVideoStreamingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeStartVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[18]);
}

// ===================================================================

class StartVideoStreamingResponse::_Internal {
 public:
};

StartVideoStreamingResponse::StartVideoStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
}
StartVideoStreamingResponse::StartVideoStreamingResponse(const StartVideoStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartVideoStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stream_id_ = from._impl_.stream_id_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
}

inline void StartVideoStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StartVideoStreamingResponse::~StartVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartVideoStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StartVideoStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartVideoStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.stream_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartVideoStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  return target;
}

size_t StartVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartVideoStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartVideoStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartVideoStreamingResponse::GetClassData() const { return &_class_data_; }


void StartVideoStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StartVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoStreamingResponse::CopyFrom(const StartVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartVideoStreamingResponse::IsInitialized() const {
  return true;
}

void StartVideoStreamingResponse::InternalSwap(StartVideoStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[19]);
}

// ===================================================================

class RespondStartVideoStreamingRequest::_Internal {
 public:
};

RespondStartVideoStreamingRequest::RespondStartVideoStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
}
RespondStartVideoStreamingRequest::RespondStartVideoStreamingRequest(const RespondStartVideoStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStartVideoStreamingRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_video_streaming_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.start_video_streaming_feedback_ = from._impl_.start_video_streaming_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
}

inline void RespondStartVideoStreamingRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_video_streaming_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStartVideoStreamingRequest::~RespondStartVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStartVideoStreamingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondStartVideoStreamingRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStartVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_video_streaming_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStartVideoStreamingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_start_video_streaming_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStartVideoStreamingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
  if (this->_internal_start_video_streaming_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_start_video_streaming_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  return target;
}

size_t RespondStartVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
  if (this->_internal_start_video_streaming_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_start_video_streaming_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStartVideoStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStartVideoStreamingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStartVideoStreamingRequest::GetClassData() const { return &_class_data_; }


void RespondStartVideoStreamingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_video_streaming_feedback() != 0) {
    _this->_internal_set_start_video_streaming_feedback(from._internal_start_video_streaming_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoStreamingRequest::CopyFrom(const RespondStartVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStartVideoStreamingRequest::IsInitialized() const {
  return true;
}

void RespondStartVideoStreamingRequest::InternalSwap(RespondStartVideoStreamingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.start_video_streaming_feedback_, other->_impl_.start_video_streaming_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStartVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[20]);
}

// ===================================================================

class RespondStartVideoStreamingResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStartVideoStreamingResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondStartVideoStreamingResponse::_Internal::camera_server_result(const RespondStartVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStartVideoStreamingResponse::RespondStartVideoStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
}
RespondStartVideoStreamingResponse::RespondStartVideoStreamingResponse(const RespondStartVideoStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStartVideoStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
}

inline void RespondStartVideoStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStartVideoStreamingResponse::~RespondStartVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStartVideoStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondStartVideoStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStartVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStartVideoStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStartVideoStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  return target;
}

size_t RespondStartVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStartVideoStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStartVideoStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStartVideoStreamingResponse::GetClassData() const { return &_class_data_; }


void RespondStartVideoStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoStreamingResponse::CopyFrom(const RespondStartVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStartVideoStreamingResponse::IsInitialized() const {
  return true;
}

void RespondStartVideoStreamingResponse::InternalSwap(RespondStartVideoStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStartVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[21]);
}

// ===================================================================

class SubscribeStopVideoStreamingRequest::_Internal {
 public:
};

SubscribeStopVideoStreamingRequest::SubscribeStopVideoStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoStreamingRequest)
}
SubscribeStopVideoStreamingRequest::SubscribeStopVideoStreamingRequest(const SubscribeStopVideoStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeStopVideoStreamingRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoStreamingRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeStopVideoStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeStopVideoStreamingRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeStopVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[22]);
}

// ===================================================================

class StopVideoStreamingResponse::_Internal {
 public:
};

StopVideoStreamingResponse::StopVideoStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
}
StopVideoStreamingResponse::StopVideoStreamingResponse(const StopVideoStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopVideoStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stream_id_ = from._impl_.stream_id_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
}

inline void StopVideoStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stream_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopVideoStreamingResponse::~StopVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopVideoStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StopVideoStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopVideoStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.stream_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopVideoStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  return target;
}

size_t StopVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopVideoStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopVideoStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopVideoStreamingResponse::GetClassData() const { return &_class_data_; }


void StopVideoStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StopVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoStreamingResponse::CopyFrom(const StopVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopVideoStreamingResponse::IsInitialized() const {
  return true;
}

void StopVideoStreamingResponse::InternalSwap(StopVideoStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[23]);
}

// ===================================================================

class RespondStopVideoStreamingRequest::_Internal {
 public:
};

RespondStopVideoStreamingRequest::RespondStopVideoStreamingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
}
RespondStopVideoStreamingRequest::RespondStopVideoStreamingRequest(const RespondStopVideoStreamingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStopVideoStreamingRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_streaming_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stop_video_streaming_feedback_ = from._impl_.stop_video_streaming_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
}

inline void RespondStopVideoStreamingRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_streaming_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStopVideoStreamingRequest::~RespondStopVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStopVideoStreamingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondStopVideoStreamingRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStopVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_streaming_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStopVideoStreamingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_video_streaming_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStopVideoStreamingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
  if (this->_internal_stop_video_streaming_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stop_video_streaming_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  return target;
}

size_t RespondStopVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
  if (this->_internal_stop_video_streaming_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_streaming_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStopVideoStreamingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStopVideoStreamingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStopVideoStreamingRequest::GetClassData() const { return &_class_data_; }


void RespondStopVideoStreamingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_streaming_feedback() != 0) {
    _this->_internal_set_stop_video_streaming_feedback(from._internal_stop_video_streaming_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoStreamingRequest::CopyFrom(const RespondStopVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStopVideoStreamingRequest::IsInitialized() const {
  return true;
}

void RespondStopVideoStreamingRequest::InternalSwap(RespondStopVideoStreamingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_streaming_feedback_, other->_impl_.stop_video_streaming_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStopVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[24]);
}

// ===================================================================

class RespondStopVideoStreamingResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStopVideoStreamingResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondStopVideoStreamingResponse::_Internal::camera_server_result(const RespondStopVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStopVideoStreamingResponse::RespondStopVideoStreamingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
}
RespondStopVideoStreamingResponse::RespondStopVideoStreamingResponse(const RespondStopVideoStreamingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStopVideoStreamingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
}

inline void RespondStopVideoStreamingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStopVideoStreamingResponse::~RespondStopVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStopVideoStreamingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondStopVideoStreamingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStopVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStopVideoStreamingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStopVideoStreamingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  return target;
}

size_t RespondStopVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStopVideoStreamingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStopVideoStreamingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStopVideoStreamingResponse::GetClassData() const { return &_class_data_; }


void RespondStopVideoStreamingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoStreamingResponse::CopyFrom(const RespondStopVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStopVideoStreamingResponse::IsInitialized() const {
  return true;
}

void RespondStopVideoStreamingResponse::InternalSwap(RespondStopVideoStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStopVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[25]);
}

// ===================================================================

class SubscribeSetModeRequest::_Internal {
 public:
};

SubscribeSetModeRequest::SubscribeSetModeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeSetModeRequest)
}
SubscribeSetModeRequest::SubscribeSetModeRequest(const SubscribeSetModeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeSetModeRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeSetModeRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeSetModeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeSetModeRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeSetModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[26]);
}

// ===================================================================

class SetModeResponse::_Internal {
 public:
};

SetModeResponse::SetModeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetModeResponse)
}
SetModeResponse::SetModeResponse(const SetModeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetModeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.mode_ = from._impl_.mode_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetModeResponse)
}

inline void SetModeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetModeResponse::~SetModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetModeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetModeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetModeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetModeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetModeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.Mode mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::mavsdk::rpc::camera_server::Mode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetModeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetModeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetModeResponse)
  return target;
}

size_t SetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetModeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetModeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetModeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetModeResponse::GetClassData() const { return &_class_data_; }


void SetModeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetModeResponse*>(&to_msg);
  auto& from = static_cast<const SetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetModeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetModeResponse::CopyFrom(const SetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetModeResponse::IsInitialized() const {
  return true;
}

void SetModeResponse::InternalSwap(SetModeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[27]);
}

// ===================================================================

class RespondSetModeRequest::_Internal {
 public:
};

RespondSetModeRequest::RespondSetModeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSetModeRequest)
}
RespondSetModeRequest::RespondSetModeRequest(const RespondSetModeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondSetModeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.set_mode_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.set_mode_feedback_ = from._impl_.set_mode_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondSetModeRequest)
}

inline void RespondSetModeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.set_mode_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondSetModeRequest::~RespondSetModeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSetModeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondSetModeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondSetModeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondSetModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.set_mode_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondSetModeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_set_mode_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondSetModeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
  if (this->_internal_set_mode_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_set_mode_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSetModeRequest)
  return target;
}

size_t RespondSetModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
  if (this->_internal_set_mode_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_set_mode_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondSetModeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondSetModeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondSetModeRequest::GetClassData() const { return &_class_data_; }


void RespondSetModeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondSetModeRequest*>(&to_msg);
  auto& from = static_cast<const RespondSetModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_set_mode_feedback() != 0) {
    _this->_internal_set_set_mode_feedback(from._internal_set_mode_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSetModeRequest::CopyFrom(const RespondSetModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondSetModeRequest::IsInitialized() const {
  return true;
}

void RespondSetModeRequest::InternalSwap(RespondSetModeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.set_mode_feedback_, other->_impl_.set_mode_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondSetModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[28]);
}

// ===================================================================

class RespondSetModeResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondSetModeResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondSetModeResponse::_Internal::camera_server_result(const RespondSetModeResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondSetModeResponse::RespondSetModeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSetModeResponse)
}
RespondSetModeResponse::RespondSetModeResponse(const RespondSetModeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondSetModeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondSetModeResponse)
}

inline void RespondSetModeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondSetModeResponse::~RespondSetModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSetModeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondSetModeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondSetModeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondSetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondSetModeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondSetModeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSetModeResponse)
  return target;
}

size_t RespondSetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondSetModeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondSetModeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondSetModeResponse::GetClassData() const { return &_class_data_; }


void RespondSetModeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondSetModeResponse*>(&to_msg);
  auto& from = static_cast<const RespondSetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSetModeResponse::CopyFrom(const RespondSetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondSetModeResponse::IsInitialized() const {
  return true;
}

void RespondSetModeResponse::InternalSwap(RespondSetModeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondSetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[29]);
}

// ===================================================================

class SubscribeStorageInformationRequest::_Internal {
 public:
};

SubscribeStorageInformationRequest::SubscribeStorageInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStorageInformationRequest)
}
SubscribeStorageInformationRequest::SubscribeStorageInformationRequest(const SubscribeStorageInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeStorageInformationRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStorageInformationRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeStorageInformationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeStorageInformationRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeStorageInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[30]);
}

// ===================================================================

class StorageInformationResponse::_Internal {
 public:
};

StorageInformationResponse::StorageInformationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StorageInformationResponse)
}
StorageInformationResponse::StorageInformationResponse(const StorageInformationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageInformationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.storage_id_ = from._impl_.storage_id_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.StorageInformationResponse)
}

inline void StorageInformationResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StorageInformationResponse::~StorageInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StorageInformationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageInformationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StorageInformationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageInformationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 storage_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.storage_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageInformationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_storage_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StorageInformationResponse)
  return target;
}

size_t StorageInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_storage_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageInformationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageInformationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageInformationResponse::GetClassData() const { return &_class_data_; }


void StorageInformationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageInformationResponse*>(&to_msg);
  auto& from = static_cast<const StorageInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageInformationResponse::CopyFrom(const StorageInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageInformationResponse::IsInitialized() const {
  return true;
}

void StorageInformationResponse::InternalSwap(StorageInformationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.storage_id_, other->_impl_.storage_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[31]);
}

// ===================================================================

class RespondStorageInformationRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::StorageInformation& storage_information(const RespondStorageInformationRequest* msg);
};

const ::mavsdk::rpc::camera_server::StorageInformation&
RespondStorageInformationRequest::_Internal::storage_information(const RespondStorageInformationRequest* msg) {
  return *msg->_impl_.storage_information_;
}
RespondStorageInformationRequest::RespondStorageInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
}
RespondStorageInformationRequest::RespondStorageInformationRequest(const RespondStorageInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStorageInformationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_information_){nullptr}
    , decltype(_impl_.storage_information_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_storage_information()) {
    _this->_impl_.storage_information_ = new ::mavsdk::rpc::camera_server::StorageInformation(*from._impl_.storage_information_);
  }
  _this->_impl_.storage_information_feedback_ = from._impl_.storage_information_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
}

inline void RespondStorageInformationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_information_){nullptr}
    , decltype(_impl_.storage_information_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStorageInformationRequest::~RespondStorageInformationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStorageInformationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.storage_information_;
}

void RespondStorageInformationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStorageInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.storage_information_ != nullptr) {
    delete _impl_.storage_information_;
  }
  _impl_.storage_information_ = nullptr;
  _impl_.storage_information_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStorageInformationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_storage_information_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_storage_information(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStorageInformationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
  if (this->_internal_storage_information_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_storage_information_feedback(), target);
  }

  // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
  if (this->_internal_has_storage_information()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::storage_information(this),
        _Internal::storage_information(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  return target;
}

size_t RespondStorageInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
  if (this->_internal_has_storage_information()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.storage_information_);
  }

  // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
  if (this->_internal_storage_information_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_information_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStorageInformationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStorageInformationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStorageInformationRequest::GetClassData() const { return &_class_data_; }


void RespondStorageInformationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStorageInformationRequest*>(&to_msg);
  auto& from = static_cast<const RespondStorageInformationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_storage_information()) {
    _this->_internal_mutable_storage_information()->::mavsdk::rpc::camera_server::StorageInformation::MergeFrom(
        from._internal_storage_information());
  }
  if (from._internal_storage_information_feedback() != 0) {
    _this->_internal_set_storage_information_feedback(from._internal_storage_information_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStorageInformationRequest::CopyFrom(const RespondStorageInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStorageInformationRequest::IsInitialized() const {
  return true;
}

void RespondStorageInformationRequest::InternalSwap(RespondStorageInformationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_feedback_)
      + sizeof(RespondStorageInformationRequest::_impl_.storage_information_feedback_)
      - PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_)>(
          reinterpret_cast<char*>(&_impl_.storage_information_),
          reinterpret_cast<char*>(&other->_impl_.storage_information_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStorageInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[32]);
}

// ===================================================================

class RespondStorageInformationResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStorageInformationResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondStorageInformationResponse::_Internal::camera_server_result(const RespondStorageInformationResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStorageInformationResponse::RespondStorageInformationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
}
RespondStorageInformationResponse::RespondStorageInformationResponse(const RespondStorageInformationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondStorageInformationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
}

inline void RespondStorageInformationResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondStorageInformationResponse::~RespondStorageInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondStorageInformationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondStorageInformationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondStorageInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondStorageInformationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondStorageInformationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  return target;
}

size_t RespondStorageInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondStorageInformationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondStorageInformationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondStorageInformationResponse::GetClassData() const { return &_class_data_; }


void RespondStorageInformationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondStorageInformationResponse*>(&to_msg);
  auto& from = static_cast<const RespondStorageInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStorageInformationResponse::CopyFrom(const RespondStorageInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondStorageInformationResponse::IsInitialized() const {
  return true;
}

void RespondStorageInformationResponse::InternalSwap(RespondStorageInformationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondStorageInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[33]);
}

// ===================================================================

class SubscribeCaptureStatusRequest::_Internal {
 public:
};

SubscribeCaptureStatusRequest::SubscribeCaptureStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeCaptureStatusRequest)
}
SubscribeCaptureStatusRequest::SubscribeCaptureStatusRequest(const SubscribeCaptureStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeCaptureStatusRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeCaptureStatusRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeCaptureStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeCaptureStatusRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeCaptureStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[34]);
}

// ===================================================================

class CaptureStatusResponse::_Internal {
 public:
};

CaptureStatusResponse::CaptureStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CaptureStatusResponse)
}
CaptureStatusResponse::CaptureStatusResponse(const CaptureStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CaptureStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reserved_ = from._impl_.reserved_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.CaptureStatusResponse)
}

inline void CaptureStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CaptureStatusResponse::~CaptureStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CaptureStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CaptureStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaptureStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CaptureStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptureStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reserved = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CaptureStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CaptureStatusResponse)
  return target;
}

size_t CaptureStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CaptureStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CaptureStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CaptureStatusResponse::GetClassData() const { return &_class_data_; }


void CaptureStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CaptureStatusResponse*>(&to_msg);
  auto& from = static_cast<const CaptureStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureStatusResponse::CopyFrom(const CaptureStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureStatusResponse::IsInitialized() const {
  return true;
}

void CaptureStatusResponse::InternalSwap(CaptureStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reserved_, other->_impl_.reserved_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptureStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[35]);
}

// ===================================================================

class RespondCaptureStatusRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CaptureStatus& capture_status(const RespondCaptureStatusRequest* msg);
};

const ::mavsdk::rpc::camera_server::CaptureStatus&
RespondCaptureStatusRequest::_Internal::capture_status(const RespondCaptureStatusRequest* msg) {
  return *msg->_impl_.capture_status_;
}
RespondCaptureStatusRequest::RespondCaptureStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
}
RespondCaptureStatusRequest::RespondCaptureStatusRequest(const RespondCaptureStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondCaptureStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.capture_status_){nullptr}
    , decltype(_impl_.capture_status_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_capture_status()) {
    _this->_impl_.capture_status_ = new ::mavsdk::rpc::camera_server::CaptureStatus(*from._impl_.capture_status_);
  }
  _this->_impl_.capture_status_feedback_ = from._impl_.capture_status_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
}

inline void RespondCaptureStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.capture_status_){nullptr}
    , decltype(_impl_.capture_status_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondCaptureStatusRequest::~RespondCaptureStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondCaptureStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.capture_status_;
}

void RespondCaptureStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondCaptureStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.capture_status_ != nullptr) {
    delete _impl_.capture_status_;
  }
  _impl_.capture_status_ = nullptr;
  _impl_.capture_status_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondCaptureStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_capture_status_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_capture_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondCaptureStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
  if (this->_internal_capture_status_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_capture_status_feedback(), target);
  }

  // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
  if (this->_internal_has_capture_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::capture_status(this),
        _Internal::capture_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  return target;
}

size_t RespondCaptureStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
  if (this->_internal_has_capture_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.capture_status_);
  }

  // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
  if (this->_internal_capture_status_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_capture_status_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondCaptureStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondCaptureStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondCaptureStatusRequest::GetClassData() const { return &_class_data_; }


void RespondCaptureStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondCaptureStatusRequest*>(&to_msg);
  auto& from = static_cast<const RespondCaptureStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_capture_status()) {
    _this->_internal_mutable_capture_status()->::mavsdk::rpc::camera_server::CaptureStatus::MergeFrom(
        from._internal_capture_status());
  }
  if (from._internal_capture_status_feedback() != 0) {
    _this->_internal_set_capture_status_feedback(from._internal_capture_status_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondCaptureStatusRequest::CopyFrom(const RespondCaptureStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondCaptureStatusRequest::IsInitialized() const {
  return true;
}

void RespondCaptureStatusRequest::InternalSwap(RespondCaptureStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_feedback_)
      + sizeof(RespondCaptureStatusRequest::_impl_.capture_status_feedback_)
      - PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_)>(
          reinterpret_cast<char*>(&_impl_.capture_status_),
          reinterpret_cast<char*>(&other->_impl_.capture_status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondCaptureStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[36]);
}

// ===================================================================

class RespondCaptureStatusResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondCaptureStatusResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondCaptureStatusResponse::_Internal::camera_server_result(const RespondCaptureStatusResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondCaptureStatusResponse::RespondCaptureStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
}
RespondCaptureStatusResponse::RespondCaptureStatusResponse(const RespondCaptureStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondCaptureStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
}

inline void RespondCaptureStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondCaptureStatusResponse::~RespondCaptureStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondCaptureStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondCaptureStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondCaptureStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondCaptureStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondCaptureStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  return target;
}

size_t RespondCaptureStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondCaptureStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondCaptureStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondCaptureStatusResponse::GetClassData() const { return &_class_data_; }


void RespondCaptureStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondCaptureStatusResponse*>(&to_msg);
  auto& from = static_cast<const RespondCaptureStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondCaptureStatusResponse::CopyFrom(const RespondCaptureStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondCaptureStatusResponse::IsInitialized() const {
  return true;
}

void RespondCaptureStatusResponse::InternalSwap(RespondCaptureStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondCaptureStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[37]);
}

// ===================================================================

class SubscribeFormatStorageRequest::_Internal {
 public:
};

SubscribeFormatStorageRequest::SubscribeFormatStorageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeFormatStorageRequest)
}
SubscribeFormatStorageRequest::SubscribeFormatStorageRequest(const SubscribeFormatStorageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeFormatStorageRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeFormatStorageRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeFormatStorageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeFormatStorageRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeFormatStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[38]);
}

// ===================================================================

class FormatStorageResponse::_Internal {
 public:
};

FormatStorageResponse::FormatStorageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.FormatStorageResponse)
}
FormatStorageResponse::FormatStorageResponse(const FormatStorageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FormatStorageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.storage_id_ = from._impl_.storage_id_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.FormatStorageResponse)
}

inline void FormatStorageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FormatStorageResponse::~FormatStorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.FormatStorageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FormatStorageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FormatStorageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FormatStorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FormatStorageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 storage_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.storage_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FormatStorageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_storage_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.FormatStorageResponse)
  return target;
}

size_t FormatStorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_storage_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FormatStorageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FormatStorageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FormatStorageResponse::GetClassData() const { return &_class_data_; }


void FormatStorageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FormatStorageResponse*>(&to_msg);
  auto& from = static_cast<const FormatStorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FormatStorageResponse::CopyFrom(const FormatStorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormatStorageResponse::IsInitialized() const {
  return true;
}

void FormatStorageResponse::InternalSwap(FormatStorageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.storage_id_, other->_impl_.storage_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FormatStorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[39]);
}

// ===================================================================

class RespondFormatStorageRequest::_Internal {
 public:
};

RespondFormatStorageRequest::RespondFormatStorageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
}
RespondFormatStorageRequest::RespondFormatStorageRequest(const RespondFormatStorageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondFormatStorageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.format_storage_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.format_storage_feedback_ = from._impl_.format_storage_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
}

inline void RespondFormatStorageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.format_storage_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondFormatStorageRequest::~RespondFormatStorageRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondFormatStorageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondFormatStorageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondFormatStorageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.format_storage_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondFormatStorageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_format_storage_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondFormatStorageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
  if (this->_internal_format_storage_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_format_storage_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  return target;
}

size_t RespondFormatStorageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
  if (this->_internal_format_storage_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_format_storage_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondFormatStorageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondFormatStorageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondFormatStorageRequest::GetClassData() const { return &_class_data_; }


void RespondFormatStorageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondFormatStorageRequest*>(&to_msg);
  auto& from = static_cast<const RespondFormatStorageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_format_storage_feedback() != 0) {
    _this->_internal_set_format_storage_feedback(from._internal_format_storage_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondFormatStorageRequest::CopyFrom(const RespondFormatStorageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondFormatStorageRequest::IsInitialized() const {
  return true;
}

void RespondFormatStorageRequest::InternalSwap(RespondFormatStorageRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.format_storage_feedback_, other->_impl_.format_storage_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondFormatStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[40]);
}

// ===================================================================

class RespondFormatStorageResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondFormatStorageResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondFormatStorageResponse::_Internal::camera_server_result(const RespondFormatStorageResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondFormatStorageResponse::RespondFormatStorageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
}
RespondFormatStorageResponse::RespondFormatStorageResponse(const RespondFormatStorageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondFormatStorageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
}

inline void RespondFormatStorageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondFormatStorageResponse::~RespondFormatStorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondFormatStorageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondFormatStorageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondFormatStorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondFormatStorageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondFormatStorageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  return target;
}

size_t RespondFormatStorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondFormatStorageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondFormatStorageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondFormatStorageResponse::GetClassData() const { return &_class_data_; }


void RespondFormatStorageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondFormatStorageResponse*>(&to_msg);
  auto& from = static_cast<const RespondFormatStorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondFormatStorageResponse::CopyFrom(const RespondFormatStorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondFormatStorageResponse::IsInitialized() const {
  return true;
}

void RespondFormatStorageResponse::InternalSwap(RespondFormatStorageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondFormatStorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[41]);
}

// ===================================================================

class SubscribeResetSettingsRequest::_Internal {
 public:
};

SubscribeResetSettingsRequest::SubscribeResetSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeResetSettingsRequest)
}
SubscribeResetSettingsRequest::SubscribeResetSettingsRequest(const SubscribeResetSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeResetSettingsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeResetSettingsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeResetSettingsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeResetSettingsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeResetSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[42]);
}

// ===================================================================

class ResetSettingsResponse::_Internal {
 public:
};

ResetSettingsResponse::ResetSettingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ResetSettingsResponse)
}
ResetSettingsResponse::ResetSettingsResponse(const ResetSettingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResetSettingsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reserved_ = from._impl_.reserved_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.ResetSettingsResponse)
}

inline void ResetSettingsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResetSettingsResponse::~ResetSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ResetSettingsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResetSettingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResetSettingsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResetSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetSettingsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reserved = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResetSettingsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ResetSettingsResponse)
  return target;
}

size_t ResetSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetSettingsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResetSettingsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetSettingsResponse::GetClassData() const { return &_class_data_; }


void ResetSettingsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResetSettingsResponse*>(&to_msg);
  auto& from = static_cast<const ResetSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResetSettingsResponse::CopyFrom(const ResetSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetSettingsResponse::IsInitialized() const {
  return true;
}

void ResetSettingsResponse::InternalSwap(ResetSettingsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reserved_, other->_impl_.reserved_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[43]);
}

// ===================================================================

class RespondResetSettingsRequest::_Internal {
 public:
};

RespondResetSettingsRequest::RespondResetSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
}
RespondResetSettingsRequest::RespondResetSettingsRequest(const RespondResetSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondResetSettingsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reset_settings_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reset_settings_feedback_ = from._impl_.reset_settings_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
}

inline void RespondResetSettingsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reset_settings_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondResetSettingsRequest::~RespondResetSettingsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondResetSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondResetSettingsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondResetSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reset_settings_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondResetSettingsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_reset_settings_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondResetSettingsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
  if (this->_internal_reset_settings_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_reset_settings_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  return target;
}

size_t RespondResetSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
  if (this->_internal_reset_settings_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_reset_settings_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondResetSettingsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondResetSettingsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondResetSettingsRequest::GetClassData() const { return &_class_data_; }


void RespondResetSettingsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondResetSettingsRequest*>(&to_msg);
  auto& from = static_cast<const RespondResetSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reset_settings_feedback() != 0) {
    _this->_internal_set_reset_settings_feedback(from._internal_reset_settings_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondResetSettingsRequest::CopyFrom(const RespondResetSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondResetSettingsRequest::IsInitialized() const {
  return true;
}

void RespondResetSettingsRequest::InternalSwap(RespondResetSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reset_settings_feedback_, other->_impl_.reset_settings_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondResetSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[44]);
}

// ===================================================================

class RespondResetSettingsResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondResetSettingsResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondResetSettingsResponse::_Internal::camera_server_result(const RespondResetSettingsResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondResetSettingsResponse::RespondResetSettingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
}
RespondResetSettingsResponse::RespondResetSettingsResponse(const RespondResetSettingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondResetSettingsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
}

inline void RespondResetSettingsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondResetSettingsResponse::~RespondResetSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondResetSettingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondResetSettingsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondResetSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondResetSettingsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondResetSettingsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  return target;
}

size_t RespondResetSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondResetSettingsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondResetSettingsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondResetSettingsResponse::GetClassData() const { return &_class_data_; }


void RespondResetSettingsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondResetSettingsResponse*>(&to_msg);
  auto& from = static_cast<const RespondResetSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondResetSettingsResponse::CopyFrom(const RespondResetSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondResetSettingsResponse::IsInitialized() const {
  return true;
}

void RespondResetSettingsResponse::InternalSwap(RespondResetSettingsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondResetSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[45]);
}

// ===================================================================

class SubscribeZoomInStartRequest::_Internal {
 public:
};

SubscribeZoomInStartRequest::SubscribeZoomInStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeZoomInStartRequest)
}
SubscribeZoomInStartRequest::SubscribeZoomInStartRequest(const SubscribeZoomInStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeZoomInStartRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeZoomInStartRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeZoomInStartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeZoomInStartRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeZoomInStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[46]);
}

// ===================================================================

class ZoomInStartResponse::_Internal {
 public:
};

ZoomInStartResponse::ZoomInStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ZoomInStartResponse)
}
ZoomInStartResponse::ZoomInStartResponse(const ZoomInStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ZoomInStartResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reserved_ = from._impl_.reserved_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.ZoomInStartResponse)
}

inline void ZoomInStartResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ZoomInStartResponse::~ZoomInStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ZoomInStartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ZoomInStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ZoomInStartResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ZoomInStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ZoomInStartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ZoomInStartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reserved = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ZoomInStartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ZoomInStartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ZoomInStartResponse)
  return target;
}

size_t ZoomInStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ZoomInStartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ZoomInStartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ZoomInStartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ZoomInStartResponse::GetClassData() const { return &_class_data_; }


void ZoomInStartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ZoomInStartResponse*>(&to_msg);
  auto& from = static_cast<const ZoomInStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ZoomInStartResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomInStartResponse::CopyFrom(const ZoomInStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ZoomInStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoomInStartResponse::IsInitialized() const {
  return true;
}

void ZoomInStartResponse::InternalSwap(ZoomInStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reserved_, other->_impl_.reserved_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZoomInStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[47]);
}

// ===================================================================

class RespondZoomInStartRequest::_Internal {
 public:
};

RespondZoomInStartRequest::RespondZoomInStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
}
RespondZoomInStartRequest::RespondZoomInStartRequest(const RespondZoomInStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomInStartRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_in_start_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.zoom_in_start_feedback_ = from._impl_.zoom_in_start_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
}

inline void RespondZoomInStartRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_in_start_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomInStartRequest::~RespondZoomInStartRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomInStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondZoomInStartRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomInStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zoom_in_start_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomInStartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback zoom_in_start_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_zoom_in_start_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomInStartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_in_start_feedback = 1;
  if (this->_internal_zoom_in_start_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_zoom_in_start_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  return target;
}

size_t RespondZoomInStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_in_start_feedback = 1;
  if (this->_internal_zoom_in_start_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_zoom_in_start_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomInStartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomInStartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomInStartRequest::GetClassData() const { return &_class_data_; }


void RespondZoomInStartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomInStartRequest*>(&to_msg);
  auto& from = static_cast<const RespondZoomInStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zoom_in_start_feedback() != 0) {
    _this->_internal_set_zoom_in_start_feedback(from._internal_zoom_in_start_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomInStartRequest::CopyFrom(const RespondZoomInStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomInStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomInStartRequest::IsInitialized() const {
  return true;
}

void RespondZoomInStartRequest::InternalSwap(RespondZoomInStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.zoom_in_start_feedback_, other->_impl_.zoom_in_start_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomInStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[48]);
}

// ===================================================================

class RespondZoomInStartResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondZoomInStartResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondZoomInStartResponse::_Internal::camera_server_result(const RespondZoomInStartResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondZoomInStartResponse::RespondZoomInStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
}
RespondZoomInStartResponse::RespondZoomInStartResponse(const RespondZoomInStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomInStartResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
}

inline void RespondZoomInStartResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomInStartResponse::~RespondZoomInStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomInStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondZoomInStartResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomInStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomInStartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomInStartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  return target;
}

size_t RespondZoomInStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomInStartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomInStartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomInStartResponse::GetClassData() const { return &_class_data_; }


void RespondZoomInStartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomInStartResponse*>(&to_msg);
  auto& from = static_cast<const RespondZoomInStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomInStartResponse::CopyFrom(const RespondZoomInStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomInStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomInStartResponse::IsInitialized() const {
  return true;
}

void RespondZoomInStartResponse::InternalSwap(RespondZoomInStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomInStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[49]);
}

// ===================================================================

class SubscribeZoomOutStartRequest::_Internal {
 public:
};

SubscribeZoomOutStartRequest::SubscribeZoomOutStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeZoomOutStartRequest)
}
SubscribeZoomOutStartRequest::SubscribeZoomOutStartRequest(const SubscribeZoomOutStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeZoomOutStartRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeZoomOutStartRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeZoomOutStartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeZoomOutStartRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeZoomOutStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[50]);
}

// ===================================================================

class ZoomOutStartResponse::_Internal {
 public:
};

ZoomOutStartResponse::ZoomOutStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ZoomOutStartResponse)
}
ZoomOutStartResponse::ZoomOutStartResponse(const ZoomOutStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ZoomOutStartResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reserved_ = from._impl_.reserved_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.ZoomOutStartResponse)
}

inline void ZoomOutStartResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ZoomOutStartResponse::~ZoomOutStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ZoomOutStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ZoomOutStartResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ZoomOutStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ZoomOutStartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reserved = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ZoomOutStartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  return target;
}

size_t ZoomOutStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ZoomOutStartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ZoomOutStartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ZoomOutStartResponse::GetClassData() const { return &_class_data_; }


void ZoomOutStartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ZoomOutStartResponse*>(&to_msg);
  auto& from = static_cast<const ZoomOutStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomOutStartResponse::CopyFrom(const ZoomOutStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ZoomOutStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoomOutStartResponse::IsInitialized() const {
  return true;
}

void ZoomOutStartResponse::InternalSwap(ZoomOutStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reserved_, other->_impl_.reserved_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZoomOutStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[51]);
}

// ===================================================================

class RespondZoomOutStartRequest::_Internal {
 public:
};

RespondZoomOutStartRequest::RespondZoomOutStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
}
RespondZoomOutStartRequest::RespondZoomOutStartRequest(const RespondZoomOutStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomOutStartRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_out_start_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.zoom_out_start_feedback_ = from._impl_.zoom_out_start_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
}

inline void RespondZoomOutStartRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_out_start_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomOutStartRequest::~RespondZoomOutStartRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomOutStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondZoomOutStartRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomOutStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zoom_out_start_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomOutStartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback zoom_out_start_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_zoom_out_start_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomOutStartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_out_start_feedback = 1;
  if (this->_internal_zoom_out_start_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_zoom_out_start_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  return target;
}

size_t RespondZoomOutStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_out_start_feedback = 1;
  if (this->_internal_zoom_out_start_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_zoom_out_start_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomOutStartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomOutStartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomOutStartRequest::GetClassData() const { return &_class_data_; }


void RespondZoomOutStartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomOutStartRequest*>(&to_msg);
  auto& from = static_cast<const RespondZoomOutStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zoom_out_start_feedback() != 0) {
    _this->_internal_set_zoom_out_start_feedback(from._internal_zoom_out_start_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomOutStartRequest::CopyFrom(const RespondZoomOutStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomOutStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomOutStartRequest::IsInitialized() const {
  return true;
}

void RespondZoomOutStartRequest::InternalSwap(RespondZoomOutStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.zoom_out_start_feedback_, other->_impl_.zoom_out_start_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomOutStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[52]);
}

// ===================================================================

class RespondZoomOutStartResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondZoomOutStartResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondZoomOutStartResponse::_Internal::camera_server_result(const RespondZoomOutStartResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondZoomOutStartResponse::RespondZoomOutStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
}
RespondZoomOutStartResponse::RespondZoomOutStartResponse(const RespondZoomOutStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomOutStartResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
}

inline void RespondZoomOutStartResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomOutStartResponse::~RespondZoomOutStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomOutStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondZoomOutStartResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomOutStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomOutStartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomOutStartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  return target;
}

size_t RespondZoomOutStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomOutStartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomOutStartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomOutStartResponse::GetClassData() const { return &_class_data_; }


void RespondZoomOutStartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomOutStartResponse*>(&to_msg);
  auto& from = static_cast<const RespondZoomOutStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomOutStartResponse::CopyFrom(const RespondZoomOutStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomOutStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomOutStartResponse::IsInitialized() const {
  return true;
}

void RespondZoomOutStartResponse::InternalSwap(RespondZoomOutStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomOutStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[53]);
}

// ===================================================================

class SubscribeZoomStopRequest::_Internal {
 public:
};

SubscribeZoomStopRequest::SubscribeZoomStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeZoomStopRequest)
}
SubscribeZoomStopRequest::SubscribeZoomStopRequest(const SubscribeZoomStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeZoomStopRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeZoomStopRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeZoomStopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeZoomStopRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeZoomStopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[54]);
}

// ===================================================================

class ZoomStopResponse::_Internal {
 public:
};

ZoomStopResponse::ZoomStopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ZoomStopResponse)
}
ZoomStopResponse::ZoomStopResponse(const ZoomStopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ZoomStopResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reserved_ = from._impl_.reserved_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.ZoomStopResponse)
}

inline void ZoomStopResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reserved_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ZoomStopResponse::~ZoomStopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ZoomStopResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ZoomStopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ZoomStopResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ZoomStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ZoomStopResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ZoomStopResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reserved = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ZoomStopResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ZoomStopResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ZoomStopResponse)
  return target;
}

size_t ZoomStopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ZoomStopResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ZoomStopResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ZoomStopResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ZoomStopResponse::GetClassData() const { return &_class_data_; }


void ZoomStopResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ZoomStopResponse*>(&to_msg);
  auto& from = static_cast<const ZoomStopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ZoomStopResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomStopResponse::CopyFrom(const ZoomStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ZoomStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoomStopResponse::IsInitialized() const {
  return true;
}

void ZoomStopResponse::InternalSwap(ZoomStopResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reserved_, other->_impl_.reserved_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZoomStopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[55]);
}

// ===================================================================

class RespondZoomStopRequest::_Internal {
 public:
};

RespondZoomStopRequest::RespondZoomStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomStopRequest)
}
RespondZoomStopRequest::RespondZoomStopRequest(const RespondZoomStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomStopRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_stop_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.zoom_stop_feedback_ = from._impl_.zoom_stop_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomStopRequest)
}

inline void RespondZoomStopRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_stop_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomStopRequest::~RespondZoomStopRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondZoomStopRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zoom_stop_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomStopRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback zoom_stop_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_zoom_stop_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomStopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_stop_feedback = 1;
  if (this->_internal_zoom_stop_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_zoom_stop_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  return target;
}

size_t RespondZoomStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_stop_feedback = 1;
  if (this->_internal_zoom_stop_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_zoom_stop_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomStopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomStopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomStopRequest::GetClassData() const { return &_class_data_; }


void RespondZoomStopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomStopRequest*>(&to_msg);
  auto& from = static_cast<const RespondZoomStopRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zoom_stop_feedback() != 0) {
    _this->_internal_set_zoom_stop_feedback(from._internal_zoom_stop_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomStopRequest::CopyFrom(const RespondZoomStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomStopRequest::IsInitialized() const {
  return true;
}

void RespondZoomStopRequest::InternalSwap(RespondZoomStopRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.zoom_stop_feedback_, other->_impl_.zoom_stop_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomStopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[56]);
}

// ===================================================================

class RespondZoomStopResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondZoomStopResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondZoomStopResponse::_Internal::camera_server_result(const RespondZoomStopResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondZoomStopResponse::RespondZoomStopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomStopResponse)
}
RespondZoomStopResponse::RespondZoomStopResponse(const RespondZoomStopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomStopResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomStopResponse)
}

inline void RespondZoomStopResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomStopResponse::~RespondZoomStopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomStopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondZoomStopResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomStopResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomStopResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  return target;
}

size_t RespondZoomStopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomStopResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomStopResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomStopResponse::GetClassData() const { return &_class_data_; }


void RespondZoomStopResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomStopResponse*>(&to_msg);
  auto& from = static_cast<const RespondZoomStopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomStopResponse::CopyFrom(const RespondZoomStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomStopResponse::IsInitialized() const {
  return true;
}

void RespondZoomStopResponse::InternalSwap(RespondZoomStopResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomStopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[57]);
}

// ===================================================================

class SubscribeZoomRangeRequest::_Internal {
 public:
};

SubscribeZoomRangeRequest::SubscribeZoomRangeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeZoomRangeRequest)
}
SubscribeZoomRangeRequest::SubscribeZoomRangeRequest(const SubscribeZoomRangeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeZoomRangeRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeZoomRangeRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeZoomRangeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeZoomRangeRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeZoomRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[58]);
}

// ===================================================================

class ZoomRangeResponse::_Internal {
 public:
};

ZoomRangeResponse::ZoomRangeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ZoomRangeResponse)
}
ZoomRangeResponse::ZoomRangeResponse(const ZoomRangeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ZoomRangeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.factor_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.factor_ = from._impl_.factor_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.ZoomRangeResponse)
}

inline void ZoomRangeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.factor_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ZoomRangeResponse::~ZoomRangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ZoomRangeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ZoomRangeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ZoomRangeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ZoomRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.factor_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ZoomRangeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float factor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.factor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ZoomRangeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float factor = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_factor = this->_internal_factor();
  uint32_t raw_factor;
  memcpy(&raw_factor, &tmp_factor, sizeof(tmp_factor));
  if (raw_factor != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_factor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ZoomRangeResponse)
  return target;
}

size_t ZoomRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float factor = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_factor = this->_internal_factor();
  uint32_t raw_factor;
  memcpy(&raw_factor, &tmp_factor, sizeof(tmp_factor));
  if (raw_factor != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ZoomRangeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ZoomRangeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ZoomRangeResponse::GetClassData() const { return &_class_data_; }


void ZoomRangeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ZoomRangeResponse*>(&to_msg);
  auto& from = static_cast<const ZoomRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_factor = from._internal_factor();
  uint32_t raw_factor;
  memcpy(&raw_factor, &tmp_factor, sizeof(tmp_factor));
  if (raw_factor != 0) {
    _this->_internal_set_factor(from._internal_factor());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomRangeResponse::CopyFrom(const ZoomRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoomRangeResponse::IsInitialized() const {
  return true;
}

void ZoomRangeResponse::InternalSwap(ZoomRangeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.factor_, other->_impl_.factor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZoomRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[59]);
}

// ===================================================================

class RespondZoomRangeRequest::_Internal {
 public:
};

RespondZoomRangeRequest::RespondZoomRangeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
}
RespondZoomRangeRequest::RespondZoomRangeRequest(const RespondZoomRangeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomRangeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_range_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.zoom_range_feedback_ = from._impl_.zoom_range_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
}

inline void RespondZoomRangeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.zoom_range_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomRangeRequest::~RespondZoomRangeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomRangeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondZoomRangeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zoom_range_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomRangeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_zoom_range_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomRangeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
  if (this->_internal_zoom_range_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_zoom_range_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  return target;
}

size_t RespondZoomRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
  if (this->_internal_zoom_range_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_zoom_range_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomRangeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomRangeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomRangeRequest::GetClassData() const { return &_class_data_; }


void RespondZoomRangeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomRangeRequest*>(&to_msg);
  auto& from = static_cast<const RespondZoomRangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zoom_range_feedback() != 0) {
    _this->_internal_set_zoom_range_feedback(from._internal_zoom_range_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomRangeRequest::CopyFrom(const RespondZoomRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomRangeRequest::IsInitialized() const {
  return true;
}

void RespondZoomRangeRequest::InternalSwap(RespondZoomRangeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.zoom_range_feedback_, other->_impl_.zoom_range_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[60]);
}

// ===================================================================

class RespondZoomRangeResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondZoomRangeResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondZoomRangeResponse::_Internal::camera_server_result(const RespondZoomRangeResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondZoomRangeResponse::RespondZoomRangeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
}
RespondZoomRangeResponse::RespondZoomRangeResponse(const RespondZoomRangeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondZoomRangeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
}

inline void RespondZoomRangeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondZoomRangeResponse::~RespondZoomRangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondZoomRangeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondZoomRangeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondZoomRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondZoomRangeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondZoomRangeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  return target;
}

size_t RespondZoomRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondZoomRangeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondZoomRangeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondZoomRangeResponse::GetClassData() const { return &_class_data_; }


void RespondZoomRangeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomRangeResponse*>(&to_msg);
  auto& from = static_cast<const RespondZoomRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomRangeResponse::CopyFrom(const RespondZoomRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondZoomRangeResponse::IsInitialized() const {
  return true;
}

void RespondZoomRangeResponse::InternalSwap(RespondZoomRangeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondZoomRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[61]);
}

// ===================================================================

class Information::_Internal {
 public:
};

Information::Information(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Information)
}
Information::Information(const Information& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Information* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vendor_name_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.firmware_version_){}
    , decltype(_impl_.definition_file_uri_){}
    , decltype(_impl_.focal_length_mm_){}
    , decltype(_impl_.horizontal_sensor_size_mm_){}
    , decltype(_impl_.vertical_sensor_size_mm_){}
    , decltype(_impl_.horizontal_resolution_px_){}
    , decltype(_impl_.vertical_resolution_px_){}
    , decltype(_impl_.lens_id_){}
    , decltype(_impl_.definition_file_version_){}
    , decltype(_impl_.image_in_video_mode_supported_){}
    , decltype(_impl_.video_in_image_mode_supported_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vendor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vendor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vendor_name().empty()) {
    _this->_impl_.vendor_name_.Set(from._internal_vendor_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.firmware_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.firmware_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_firmware_version().empty()) {
    _this->_impl_.firmware_version_.Set(from._internal_firmware_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.definition_file_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.definition_file_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_definition_file_uri().empty()) {
    _this->_impl_.definition_file_uri_.Set(from._internal_definition_file_uri(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.focal_length_mm_, &from._impl_.focal_length_mm_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.video_in_image_mode_supported_) -
    reinterpret_cast<char*>(&_impl_.focal_length_mm_)) + sizeof(_impl_.video_in_image_mode_supported_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.Information)
}

inline void Information::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vendor_name_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.firmware_version_){}
    , decltype(_impl_.definition_file_uri_){}
    , decltype(_impl_.focal_length_mm_){0}
    , decltype(_impl_.horizontal_sensor_size_mm_){0}
    , decltype(_impl_.vertical_sensor_size_mm_){0}
    , decltype(_impl_.horizontal_resolution_px_){0u}
    , decltype(_impl_.vertical_resolution_px_){0u}
    , decltype(_impl_.lens_id_){0u}
    , decltype(_impl_.definition_file_version_){0u}
    , decltype(_impl_.image_in_video_mode_supported_){false}
    , decltype(_impl_.video_in_image_mode_supported_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vendor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vendor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.firmware_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.firmware_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.definition_file_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.definition_file_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Information::~Information() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Information)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Information::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vendor_name_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.firmware_version_.Destroy();
  _impl_.definition_file_uri_.Destroy();
}

void Information::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Information::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Information)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vendor_name_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.firmware_version_.ClearToEmpty();
  _impl_.definition_file_uri_.ClearToEmpty();
  ::memset(&_impl_.focal_length_mm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.video_in_image_mode_supported_) -
      reinterpret_cast<char*>(&_impl_.focal_length_mm_)) + sizeof(_impl_.video_in_image_mode_supported_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Information::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string vendor_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vendor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.Information.vendor_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.Information.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string firmware_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_firmware_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.Information.firmware_version"));
        } else
          goto handle_unusual;
        continue;
      // float focal_length_mm = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.focal_length_mm_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float horizontal_sensor_size_mm = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.horizontal_sensor_size_mm_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float vertical_sensor_size_mm = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.vertical_sensor_size_mm_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // uint32 horizontal_resolution_px = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.horizontal_resolution_px_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 vertical_resolution_px = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.vertical_resolution_px_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 lens_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.lens_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 definition_file_version = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.definition_file_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string definition_file_uri = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_definition_file_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.Information.definition_file_uri"));
        } else
          goto handle_unusual;
        continue;
      // bool image_in_video_mode_supported = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.image_in_video_mode_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool video_in_image_mode_supported = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.video_in_image_mode_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Information::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Information)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string vendor_name = 1;
  if (!this->_internal_vendor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vendor_name().data(), static_cast<int>(this->_internal_vendor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.Information.vendor_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_vendor_name(), target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.Information.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // string firmware_version = 3;
  if (!this->_internal_firmware_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_firmware_version().data(), static_cast<int>(this->_internal_firmware_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.Information.firmware_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_firmware_version(), target);
  }

  // float focal_length_mm = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_focal_length_mm = this->_internal_focal_length_mm();
  uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_focal_length_mm(), target);
  }

  // float horizontal_sensor_size_mm = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = this->_internal_horizontal_sensor_size_mm();
  uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_horizontal_sensor_size_mm(), target);
  }

  // float vertical_sensor_size_mm = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = this->_internal_vertical_sensor_size_mm();
  uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_vertical_sensor_size_mm(), target);
  }

  // uint32 horizontal_resolution_px = 7;
  if (this->_internal_horizontal_resolution_px() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_horizontal_resolution_px(), target);
  }

  // uint32 vertical_resolution_px = 8;
  if (this->_internal_vertical_resolution_px() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_vertical_resolution_px(), target);
  }

  // uint32 lens_id = 9;
  if (this->_internal_lens_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_lens_id(), target);
  }

  // uint32 definition_file_version = 10;
  if (this->_internal_definition_file_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(10, this->_internal_definition_file_version(), target);
  }

  // string definition_file_uri = 11;
  if (!this->_internal_definition_file_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_definition_file_uri().data(), static_cast<int>(this->_internal_definition_file_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.Information.definition_file_uri");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_definition_file_uri(), target);
  }

  // bool image_in_video_mode_supported = 12;
  if (this->_internal_image_in_video_mode_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_image_in_video_mode_supported(), target);
  }

  // bool video_in_image_mode_supported = 13;
  if (this->_internal_video_in_image_mode_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_video_in_image_mode_supported(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Information)
  return target;
}

size_t Information::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Information)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string vendor_name = 1;
  if (!this->_internal_vendor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vendor_name());
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string firmware_version = 3;
  if (!this->_internal_firmware_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_firmware_version());
  }

  // string definition_file_uri = 11;
  if (!this->_internal_definition_file_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_definition_file_uri());
  }

  // float focal_length_mm = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_focal_length_mm = this->_internal_focal_length_mm();
  uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    total_size += 1 + 4;
  }

  // float horizontal_sensor_size_mm = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = this->_internal_horizontal_sensor_size_mm();
  uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    total_size += 1 + 4;
  }

  // float vertical_sensor_size_mm = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = this->_internal_vertical_sensor_size_mm();
  uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    total_size += 1 + 4;
  }

  // uint32 horizontal_resolution_px = 7;
  if (this->_internal_horizontal_resolution_px() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_horizontal_resolution_px());
  }

  // uint32 vertical_resolution_px = 8;
  if (this->_internal_vertical_resolution_px() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_vertical_resolution_px());
  }

  // uint32 lens_id = 9;
  if (this->_internal_lens_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_lens_id());
  }

  // uint32 definition_file_version = 10;
  if (this->_internal_definition_file_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_definition_file_version());
  }

  // bool image_in_video_mode_supported = 12;
  if (this->_internal_image_in_video_mode_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool video_in_image_mode_supported = 13;
  if (this->_internal_video_in_image_mode_supported() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Information::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Information::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Information::GetClassData() const { return &_class_data_; }


void Information::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Information*>(&to_msg);
  auto& from = static_cast<const Information&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Information)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vendor_name().empty()) {
    _this->_internal_set_vendor_name(from._internal_vendor_name());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_firmware_version().empty()) {
    _this->_internal_set_firmware_version(from._internal_firmware_version());
  }
  if (!from._internal_definition_file_uri().empty()) {
    _this->_internal_set_definition_file_uri(from._internal_definition_file_uri());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_focal_length_mm = from._internal_focal_length_mm();
  uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    _this->_internal_set_focal_length_mm(from._internal_focal_length_mm());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = from._internal_horizontal_sensor_size_mm();
  uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    _this->_internal_set_horizontal_sensor_size_mm(from._internal_horizontal_sensor_size_mm());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = from._internal_vertical_sensor_size_mm();
  uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    _this->_internal_set_vertical_sensor_size_mm(from._internal_vertical_sensor_size_mm());
  }
  if (from._internal_horizontal_resolution_px() != 0) {
    _this->_internal_set_horizontal_resolution_px(from._internal_horizontal_resolution_px());
  }
  if (from._internal_vertical_resolution_px() != 0) {
    _this->_internal_set_vertical_resolution_px(from._internal_vertical_resolution_px());
  }
  if (from._internal_lens_id() != 0) {
    _this->_internal_set_lens_id(from._internal_lens_id());
  }
  if (from._internal_definition_file_version() != 0) {
    _this->_internal_set_definition_file_version(from._internal_definition_file_version());
  }
  if (from._internal_image_in_video_mode_supported() != 0) {
    _this->_internal_set_image_in_video_mode_supported(from._internal_image_in_video_mode_supported());
  }
  if (from._internal_video_in_image_mode_supported() != 0) {
    _this->_internal_set_video_in_image_mode_supported(from._internal_video_in_image_mode_supported());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Information::CopyFrom(const Information& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Information::IsInitialized() const {
  return true;
}

void Information::InternalSwap(Information* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vendor_name_, lhs_arena,
      &other->_impl_.vendor_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.firmware_version_, lhs_arena,
      &other->_impl_.firmware_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.definition_file_uri_, lhs_arena,
      &other->_impl_.definition_file_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Information, _impl_.video_in_image_mode_supported_)
      + sizeof(Information::_impl_.video_in_image_mode_supported_)
      - PROTOBUF_FIELD_OFFSET(Information, _impl_.focal_length_mm_)>(
          reinterpret_cast<char*>(&_impl_.focal_length_mm_),
          reinterpret_cast<char*>(&other->_impl_.focal_length_mm_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Information::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[62]);
}

// ===================================================================

class VideoStreaming::_Internal {
 public:
};

VideoStreaming::VideoStreaming(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.VideoStreaming)
}
VideoStreaming::VideoStreaming(const VideoStreaming& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VideoStreaming* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rtsp_uri_){}
    , decltype(_impl_.has_rtsp_server_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rtsp_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rtsp_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rtsp_uri().empty()) {
    _this->_impl_.rtsp_uri_.Set(from._internal_rtsp_uri(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.has_rtsp_server_ = from._impl_.has_rtsp_server_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.VideoStreaming)
}

inline void VideoStreaming::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rtsp_uri_){}
    , decltype(_impl_.has_rtsp_server_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.rtsp_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rtsp_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VideoStreaming::~VideoStreaming() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.VideoStreaming)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VideoStreaming::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rtsp_uri_.Destroy();
}

void VideoStreaming::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VideoStreaming::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.VideoStreaming)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rtsp_uri_.ClearToEmpty();
  _impl_.has_rtsp_server_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VideoStreaming::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool has_rtsp_server = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.has_rtsp_server_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rtsp_uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rtsp_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.VideoStreaming.rtsp_uri"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VideoStreaming::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.VideoStreaming)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_rtsp_server = 1;
  if (this->_internal_has_rtsp_server() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_has_rtsp_server(), target);
  }

  // string rtsp_uri = 2;
  if (!this->_internal_rtsp_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rtsp_uri().data(), static_cast<int>(this->_internal_rtsp_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.VideoStreaming.rtsp_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rtsp_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.VideoStreaming)
  return target;
}

size_t VideoStreaming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.VideoStreaming)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rtsp_uri = 2;
  if (!this->_internal_rtsp_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rtsp_uri());
  }

  // bool has_rtsp_server = 1;
  if (this->_internal_has_rtsp_server() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VideoStreaming::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VideoStreaming::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VideoStreaming::GetClassData() const { return &_class_data_; }


void VideoStreaming::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VideoStreaming*>(&to_msg);
  auto& from = static_cast<const VideoStreaming&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.VideoStreaming)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rtsp_uri().empty()) {
    _this->_internal_set_rtsp_uri(from._internal_rtsp_uri());
  }
  if (from._internal_has_rtsp_server() != 0) {
    _this->_internal_set_has_rtsp_server(from._internal_has_rtsp_server());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreaming::CopyFrom(const VideoStreaming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.VideoStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoStreaming::IsInitialized() const {
  return true;
}

void VideoStreaming::InternalSwap(VideoStreaming* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rtsp_uri_, lhs_arena,
      &other->_impl_.rtsp_uri_, rhs_arena
  );
  swap(_impl_.has_rtsp_server_, other->_impl_.has_rtsp_server_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoStreaming::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[63]);
}

// ===================================================================

class Position::_Internal {
 public:
};

Position::Position(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Position)
}
Position::Position(const Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Position* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.latitude_deg_){}
    , decltype(_impl_.longitude_deg_){}
    , decltype(_impl_.absolute_altitude_m_){}
    , decltype(_impl_.relative_altitude_m_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.latitude_deg_, &from._impl_.latitude_deg_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.relative_altitude_m_) -
    reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.relative_altitude_m_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.Position)
}

inline void Position::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.latitude_deg_){0}
    , decltype(_impl_.longitude_deg_){0}
    , decltype(_impl_.absolute_altitude_m_){0}
    , decltype(_impl_.relative_altitude_m_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Position)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Position::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Position::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Position)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.relative_altitude_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.relative_altitude_m_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Position::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double latitude_deg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.latitude_deg_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double longitude_deg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.longitude_deg_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // float absolute_altitude_m = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.absolute_altitude_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float relative_altitude_m = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.relative_altitude_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Position::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Position)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude_deg = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_latitude_deg(), target);
  }

  // double longitude_deg = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_longitude_deg(), target);
  }

  // float absolute_altitude_m = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = this->_internal_absolute_altitude_m();
  uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_absolute_altitude_m(), target);
  }

  // float relative_altitude_m = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_relative_altitude_m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Position)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double latitude_deg = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    total_size += 1 + 8;
  }

  // double longitude_deg = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    total_size += 1 + 8;
  }

  // float absolute_altitude_m = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = this->_internal_absolute_altitude_m();
  uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    total_size += 1 + 4;
  }

  // float relative_altitude_m = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Position::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Position::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Position::GetClassData() const { return &_class_data_; }


void Position::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Position)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude_deg = from._internal_latitude_deg();
  uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    _this->_internal_set_latitude_deg(from._internal_latitude_deg());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude_deg = from._internal_longitude_deg();
  uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    _this->_internal_set_longitude_deg(from._internal_longitude_deg());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = from._internal_absolute_altitude_m();
  uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    _this->_internal_set_absolute_altitude_m(from._internal_absolute_altitude_m());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relative_altitude_m = from._internal_relative_altitude_m();
  uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    _this->_internal_set_relative_altitude_m(from._internal_relative_altitude_m());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::InternalSwap(Position* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)
      + sizeof(Position::_impl_.relative_altitude_m_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[64]);
}

// ===================================================================

class Quaternion::_Internal {
 public:
};

Quaternion::Quaternion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Quaternion)
}
Quaternion::Quaternion(const Quaternion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Quaternion* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.w_){}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.z_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.w_, &from._impl_.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.z_) -
    reinterpret_cast<char*>(&_impl_.w_)) + sizeof(_impl_.z_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.Quaternion)
}

inline void Quaternion::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.w_){0}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.z_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Quaternion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Quaternion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Quaternion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Quaternion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.w_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Quaternion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.w_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Quaternion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Quaternion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float w = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_w = this->_internal_w();
  uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_w(), target);
  }

  // float x = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_y(), target);
  }

  // float z = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Quaternion)
  return target;
}

size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Quaternion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float w = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_w = this->_internal_w();
  uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    total_size += 1 + 4;
  }

  // float x = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Quaternion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Quaternion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Quaternion::GetClassData() const { return &_class_data_; }


void Quaternion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Quaternion)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_w = from._internal_w();
  uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    _this->_internal_set_w(from._internal_w());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quaternion::IsInitialized() const {
  return true;
}

void Quaternion::InternalSwap(Quaternion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)
      + sizeof(Quaternion::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)>(
          reinterpret_cast<char*>(&_impl_.w_),
          reinterpret_cast<char*>(&other->_impl_.w_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Quaternion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[65]);
}

// ===================================================================

class CaptureInfo::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::Position& position(const CaptureInfo* msg);
  static const ::mavsdk::rpc::camera_server::Quaternion& attitude_quaternion(const CaptureInfo* msg);
};

const ::mavsdk::rpc::camera_server::Position&
CaptureInfo::_Internal::position(const CaptureInfo* msg) {
  return *msg->_impl_.position_;
}
const ::mavsdk::rpc::camera_server::Quaternion&
CaptureInfo::_Internal::attitude_quaternion(const CaptureInfo* msg) {
  return *msg->_impl_.attitude_quaternion_;
}
CaptureInfo::CaptureInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CaptureInfo)
}
CaptureInfo::CaptureInfo(const CaptureInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CaptureInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_url_){}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.attitude_quaternion_){nullptr}
    , decltype(_impl_.time_utc_us_){}
    , decltype(_impl_.is_success_){}
    , decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_url().empty()) {
    _this->_impl_.file_url_.Set(from._internal_file_url(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::mavsdk::rpc::camera_server::Position(*from._impl_.position_);
  }
  if (from._internal_has_attitude_quaternion()) {
    _this->_impl_.attitude_quaternion_ = new ::mavsdk::rpc::camera_server::Quaternion(*from._impl_.attitude_quaternion_);
  }
  ::memcpy(&_impl_.time_utc_us_, &from._impl_.time_utc_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.index_) -
    reinterpret_cast<char*>(&_impl_.time_utc_us_)) + sizeof(_impl_.index_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.CaptureInfo)
}

inline void CaptureInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_url_){}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.attitude_quaternion_){nullptr}
    , decltype(_impl_.time_utc_us_){uint64_t{0u}}
    , decltype(_impl_.is_success_){false}
    , decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CaptureInfo::~CaptureInfo() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CaptureInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CaptureInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.attitude_quaternion_;
}

void CaptureInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CaptureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CaptureInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_url_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.attitude_quaternion_ != nullptr) {
    delete _impl_.attitude_quaternion_;
  }
  _impl_.attitude_quaternion_ = nullptr;
  ::memset(&_impl_.time_utc_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.time_utc_us_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptureInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.Position position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_attitude_quaternion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 time_utc_us = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.time_utc_us_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_success = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 index = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file_url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_file_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.CaptureInfo.file_url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CaptureInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CaptureInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Position position = 1;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
  if (this->_internal_has_attitude_quaternion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::attitude_quaternion(this),
        _Internal::attitude_quaternion(this).GetCachedSize(), target, stream);
  }

  // uint64 time_utc_us = 3;
  if (this->_internal_time_utc_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_time_utc_us(), target);
  }

  // bool is_success = 4;
  if (this->_internal_is_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_success(), target);
  }

  // int32 index = 5;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_index(), target);
  }

  // string file_url = 6;
  if (!this->_internal_file_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_url().data(), static_cast<int>(this->_internal_file_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.CaptureInfo.file_url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_file_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CaptureInfo)
  return target;
}

size_t CaptureInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CaptureInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_url = 6;
  if (!this->_internal_file_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_url());
  }

  // .mavsdk.rpc.camera_server.Position position = 1;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
  if (this->_internal_has_attitude_quaternion()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attitude_quaternion_);
  }

  // uint64 time_utc_us = 3;
  if (this->_internal_time_utc_us() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_time_utc_us());
  }

  // bool is_success = 4;
  if (this->_internal_is_success() != 0) {
    total_size += 1 + 1;
  }

  // int32 index = 5;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CaptureInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CaptureInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CaptureInfo::GetClassData() const { return &_class_data_; }


void CaptureInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CaptureInfo*>(&to_msg);
  auto& from = static_cast<const CaptureInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CaptureInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_url().empty()) {
    _this->_internal_set_file_url(from._internal_file_url());
  }
  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::mavsdk::rpc::camera_server::Position::MergeFrom(
        from._internal_position());
  }
  if (from._internal_has_attitude_quaternion()) {
    _this->_internal_mutable_attitude_quaternion()->::mavsdk::rpc::camera_server::Quaternion::MergeFrom(
        from._internal_attitude_quaternion());
  }
  if (from._internal_time_utc_us() != 0) {
    _this->_internal_set_time_utc_us(from._internal_time_utc_us());
  }
  if (from._internal_is_success() != 0) {
    _this->_internal_set_is_success(from._internal_is_success());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureInfo::CopyFrom(const CaptureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CaptureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureInfo::IsInitialized() const {
  return true;
}

void CaptureInfo::InternalSwap(CaptureInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_url_, lhs_arena,
      &other->_impl_.file_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_)
      + sizeof(CaptureInfo::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptureInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[66]);
}

// ===================================================================

class CameraServerResult::_Internal {
 public:
};

CameraServerResult::CameraServerResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CameraServerResult)
}
CameraServerResult::CameraServerResult(const CameraServerResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CameraServerResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_str_){}
    , decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_str().empty()) {
    _this->_impl_.result_str_.Set(from._internal_result_str(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.CameraServerResult)
}

inline void CameraServerResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_str_){}
    , decltype(_impl_.result_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CameraServerResult::~CameraServerResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CameraServerResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CameraServerResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_str_.Destroy();
}

void CameraServerResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CameraServerResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CameraServerResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CameraServerResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::camera_server::CameraServerResult_Result>(val));
        } else
          goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.camera_server.CameraServerResult.result_str"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CameraServerResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CameraServerResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.camera_server.CameraServerResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CameraServerResult)
  return target;
}

size_t CameraServerResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CameraServerResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CameraServerResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CameraServerResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CameraServerResult::GetClassData() const { return &_class_data_; }


void CameraServerResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CameraServerResult*>(&to_msg);
  auto& from = static_cast<const CameraServerResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CameraServerResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CameraServerResult::CopyFrom(const CameraServerResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CameraServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraServerResult::IsInitialized() const {
  return true;
}

void CameraServerResult::InternalSwap(CameraServerResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_str_, lhs_arena,
      &other->_impl_.result_str_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CameraServerResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[67]);
}

// ===================================================================

class StorageInformation::_Internal {
 public:
};

StorageInformation::StorageInformation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StorageInformation)
}
StorageInformation::StorageInformation(const StorageInformation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageInformation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.used_storage_mib_){}
    , decltype(_impl_.available_storage_mib_){}
    , decltype(_impl_.total_storage_mib_){}
    , decltype(_impl_.storage_status_){}
    , decltype(_impl_.storage_id_){}
    , decltype(_impl_.storage_type_){}
    , decltype(_impl_.read_speed_mib_s_){}
    , decltype(_impl_.write_speed_mib_s_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.used_storage_mib_, &from._impl_.used_storage_mib_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.write_speed_mib_s_) -
    reinterpret_cast<char*>(&_impl_.used_storage_mib_)) + sizeof(_impl_.write_speed_mib_s_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.StorageInformation)
}

inline void StorageInformation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.used_storage_mib_){0}
    , decltype(_impl_.available_storage_mib_){0}
    , decltype(_impl_.total_storage_mib_){0}
    , decltype(_impl_.storage_status_){0}
    , decltype(_impl_.storage_id_){0u}
    , decltype(_impl_.storage_type_){0}
    , decltype(_impl_.read_speed_mib_s_){0}
    , decltype(_impl_.write_speed_mib_s_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StorageInformation::~StorageInformation() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StorageInformation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageInformation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StorageInformation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StorageInformation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.used_storage_mib_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.write_speed_mib_s_) -
      reinterpret_cast<char*>(&_impl_.used_storage_mib_)) + sizeof(_impl_.write_speed_mib_s_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageInformation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float used_storage_mib = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.used_storage_mib_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float available_storage_mib = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.available_storage_mib_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float total_storage_mib = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.total_storage_mib_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_storage_status(static_cast<::mavsdk::rpc::camera_server::StorageInformation_StorageStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 storage_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.storage_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_storage_type(static_cast<::mavsdk::rpc::camera_server::StorageInformation_StorageType>(val));
        } else
          goto handle_unusual;
        continue;
      // float read_speed_mib_s = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _impl_.read_speed_mib_s_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float write_speed_mib_s = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _impl_.write_speed_mib_s_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageInformation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StorageInformation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float used_storage_mib = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_used_storage_mib = this->_internal_used_storage_mib();
  uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_used_storage_mib(), target);
  }

  // float available_storage_mib = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_available_storage_mib = this->_internal_available_storage_mib();
  uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_available_storage_mib(), target);
  }

  // float total_storage_mib = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_storage_mib = this->_internal_total_storage_mib();
  uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_total_storage_mib(), target);
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
  if (this->_internal_storage_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_storage_status(), target);
  }

  // uint32 storage_id = 5;
  if (this->_internal_storage_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_storage_id(), target);
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
  if (this->_internal_storage_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_storage_type(), target);
  }

  // float read_speed_mib_s = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_read_speed_mib_s = this->_internal_read_speed_mib_s();
  uint32_t raw_read_speed_mib_s;
  memcpy(&raw_read_speed_mib_s, &tmp_read_speed_mib_s, sizeof(tmp_read_speed_mib_s));
  if (raw_read_speed_mib_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_read_speed_mib_s(), target);
  }

  // float write_speed_mib_s = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_write_speed_mib_s = this->_internal_write_speed_mib_s();
  uint32_t raw_write_speed_mib_s;
  memcpy(&raw_write_speed_mib_s, &tmp_write_speed_mib_s, sizeof(tmp_write_speed_mib_s));
  if (raw_write_speed_mib_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_write_speed_mib_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StorageInformation)
  return target;
}

size_t StorageInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StorageInformation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float used_storage_mib = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_used_storage_mib = this->_internal_used_storage_mib();
  uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    total_size += 1 + 4;
  }

  // float available_storage_mib = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_available_storage_mib = this->_internal_available_storage_mib();
  uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    total_size += 1 + 4;
  }

  // float total_storage_mib = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_storage_mib = this->_internal_total_storage_mib();
  uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    total_size += 1 + 4;
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
  if (this->_internal_storage_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_status());
  }

  // uint32 storage_id = 5;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_storage_id());
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
  if (this->_internal_storage_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_type());
  }

  // float read_speed_mib_s = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_read_speed_mib_s = this->_internal_read_speed_mib_s();
  uint32_t raw_read_speed_mib_s;
  memcpy(&raw_read_speed_mib_s, &tmp_read_speed_mib_s, sizeof(tmp_read_speed_mib_s));
  if (raw_read_speed_mib_s != 0) {
    total_size += 1 + 4;
  }

  // float write_speed_mib_s = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_write_speed_mib_s = this->_internal_write_speed_mib_s();
  uint32_t raw_write_speed_mib_s;
  memcpy(&raw_write_speed_mib_s, &tmp_write_speed_mib_s, sizeof(tmp_write_speed_mib_s));
  if (raw_write_speed_mib_s != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageInformation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageInformation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageInformation::GetClassData() const { return &_class_data_; }


void StorageInformation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageInformation*>(&to_msg);
  auto& from = static_cast<const StorageInformation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StorageInformation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_used_storage_mib = from._internal_used_storage_mib();
  uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    _this->_internal_set_used_storage_mib(from._internal_used_storage_mib());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_available_storage_mib = from._internal_available_storage_mib();
  uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    _this->_internal_set_available_storage_mib(from._internal_available_storage_mib());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_storage_mib = from._internal_total_storage_mib();
  uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    _this->_internal_set_total_storage_mib(from._internal_total_storage_mib());
  }
  if (from._internal_storage_status() != 0) {
    _this->_internal_set_storage_status(from._internal_storage_status());
  }
  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  if (from._internal_storage_type() != 0) {
    _this->_internal_set_storage_type(from._internal_storage_type());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_read_speed_mib_s = from._internal_read_speed_mib_s();
  uint32_t raw_read_speed_mib_s;
  memcpy(&raw_read_speed_mib_s, &tmp_read_speed_mib_s, sizeof(tmp_read_speed_mib_s));
  if (raw_read_speed_mib_s != 0) {
    _this->_internal_set_read_speed_mib_s(from._internal_read_speed_mib_s());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_write_speed_mib_s = from._internal_write_speed_mib_s();
  uint32_t raw_write_speed_mib_s;
  memcpy(&raw_write_speed_mib_s, &tmp_write_speed_mib_s, sizeof(tmp_write_speed_mib_s));
  if (raw_write_speed_mib_s != 0) {
    _this->_internal_set_write_speed_mib_s(from._internal_write_speed_mib_s());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageInformation::CopyFrom(const StorageInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StorageInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageInformation::IsInitialized() const {
  return true;
}

void StorageInformation::InternalSwap(StorageInformation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.write_speed_mib_s_)
      + sizeof(StorageInformation::_impl_.write_speed_mib_s_)
      - PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.used_storage_mib_)>(
          reinterpret_cast<char*>(&_impl_.used_storage_mib_),
          reinterpret_cast<char*>(&other->_impl_.used_storage_mib_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageInformation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[68]);
}

// ===================================================================

class CaptureStatus::_Internal {
 public:
};

CaptureStatus::CaptureStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CaptureStatus)
}
CaptureStatus::CaptureStatus(const CaptureStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CaptureStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.image_interval_s_){}
    , decltype(_impl_.recording_time_s_){}
    , decltype(_impl_.available_capacity_mib_){}
    , decltype(_impl_.image_status_){}
    , decltype(_impl_.video_status_){}
    , decltype(_impl_.image_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.image_interval_s_, &from._impl_.image_interval_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.image_count_) -
    reinterpret_cast<char*>(&_impl_.image_interval_s_)) + sizeof(_impl_.image_count_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.CaptureStatus)
}

inline void CaptureStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.image_interval_s_){0}
    , decltype(_impl_.recording_time_s_){0}
    , decltype(_impl_.available_capacity_mib_){0}
    , decltype(_impl_.image_status_){0}
    , decltype(_impl_.video_status_){0}
    , decltype(_impl_.image_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CaptureStatus::~CaptureStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CaptureStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CaptureStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaptureStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CaptureStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CaptureStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.image_interval_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.image_count_) -
      reinterpret_cast<char*>(&_impl_.image_interval_s_)) + sizeof(_impl_.image_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptureStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float image_interval_s = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.image_interval_s_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float recording_time_s = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.recording_time_s_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float available_capacity_mib = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.available_capacity_mib_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_image_status(static_cast<::mavsdk::rpc::camera_server::CaptureStatus_ImageStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_video_status(static_cast<::mavsdk::rpc::camera_server::CaptureStatus_VideoStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 image_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.image_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CaptureStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CaptureStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float image_interval_s = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_image_interval_s = this->_internal_image_interval_s();
  uint32_t raw_image_interval_s;
  memcpy(&raw_image_interval_s, &tmp_image_interval_s, sizeof(tmp_image_interval_s));
  if (raw_image_interval_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_image_interval_s(), target);
  }

  // float recording_time_s = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_recording_time_s = this->_internal_recording_time_s();
  uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_recording_time_s(), target);
  }

  // float available_capacity_mib = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_available_capacity_mib = this->_internal_available_capacity_mib();
  uint32_t raw_available_capacity_mib;
  memcpy(&raw_available_capacity_mib, &tmp_available_capacity_mib, sizeof(tmp_available_capacity_mib));
  if (raw_available_capacity_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_available_capacity_mib(), target);
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
  if (this->_internal_image_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_image_status(), target);
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
  if (this->_internal_video_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_video_status(), target);
  }

  // int32 image_count = 6;
  if (this->_internal_image_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_image_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CaptureStatus)
  return target;
}

size_t CaptureStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CaptureStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float image_interval_s = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_image_interval_s = this->_internal_image_interval_s();
  uint32_t raw_image_interval_s;
  memcpy(&raw_image_interval_s, &tmp_image_interval_s, sizeof(tmp_image_interval_s));
  if (raw_image_interval_s != 0) {
    total_size += 1 + 4;
  }

  // float recording_time_s = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_recording_time_s = this->_internal_recording_time_s();
  uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    total_size += 1 + 4;
  }

  // float available_capacity_mib = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_available_capacity_mib = this->_internal_available_capacity_mib();
  uint32_t raw_available_capacity_mib;
  memcpy(&raw_available_capacity_mib, &tmp_available_capacity_mib, sizeof(tmp_available_capacity_mib));
  if (raw_available_capacity_mib != 0) {
    total_size += 1 + 4;
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
  if (this->_internal_image_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_image_status());
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
  if (this->_internal_video_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_video_status());
  }

  // int32 image_count = 6;
  if (this->_internal_image_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_image_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CaptureStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CaptureStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CaptureStatus::GetClassData() const { return &_class_data_; }


void CaptureStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CaptureStatus*>(&to_msg);
  auto& from = static_cast<const CaptureStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CaptureStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_image_interval_s = from._internal_image_interval_s();
  uint32_t raw_image_interval_s;
  memcpy(&raw_image_interval_s, &tmp_image_interval_s, sizeof(tmp_image_interval_s));
  if (raw_image_interval_s != 0) {
    _this->_internal_set_image_interval_s(from._internal_image_interval_s());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_recording_time_s = from._internal_recording_time_s();
  uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    _this->_internal_set_recording_time_s(from._internal_recording_time_s());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_available_capacity_mib = from._internal_available_capacity_mib();
  uint32_t raw_available_capacity_mib;
  memcpy(&raw_available_capacity_mib, &tmp_available_capacity_mib, sizeof(tmp_available_capacity_mib));
  if (raw_available_capacity_mib != 0) {
    _this->_internal_set_available_capacity_mib(from._internal_available_capacity_mib());
  }
  if (from._internal_image_status() != 0) {
    _this->_internal_set_image_status(from._internal_image_status());
  }
  if (from._internal_video_status() != 0) {
    _this->_internal_set_video_status(from._internal_video_status());
  }
  if (from._internal_image_count() != 0) {
    _this->_internal_set_image_count(from._internal_image_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureStatus::CopyFrom(const CaptureStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CaptureStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureStatus::IsInitialized() const {
  return true;
}

void CaptureStatus::InternalSwap(CaptureStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_count_)
      + sizeof(CaptureStatus::_impl_.image_count_)
      - PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_interval_s_)>(
          reinterpret_cast<char*>(&_impl_.image_interval_s_),
          reinterpret_cast<char*>(&other->_impl_.image_interval_s_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptureStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[69]);
}

// ===================================================================

class SetTrackingPointStatusRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::TrackPoint& tracked_point(const SetTrackingPointStatusRequest* msg);
};

const ::mavsdk::rpc::camera_server::TrackPoint&
SetTrackingPointStatusRequest::_Internal::tracked_point(const SetTrackingPointStatusRequest* msg) {
  return *msg->_impl_.tracked_point_;
}
SetTrackingPointStatusRequest::SetTrackingPointStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
}
SetTrackingPointStatusRequest::SetTrackingPointStatusRequest(const SetTrackingPointStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetTrackingPointStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tracked_point_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tracked_point()) {
    _this->_impl_.tracked_point_ = new ::mavsdk::rpc::camera_server::TrackPoint(*from._impl_.tracked_point_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
}

inline void SetTrackingPointStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tracked_point_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetTrackingPointStatusRequest::~SetTrackingPointStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetTrackingPointStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tracked_point_;
}

void SetTrackingPointStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetTrackingPointStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.tracked_point_ != nullptr) {
    delete _impl_.tracked_point_;
  }
  _impl_.tracked_point_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTrackingPointStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.TrackPoint tracked_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tracked_point(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetTrackingPointStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackPoint tracked_point = 1;
  if (this->_internal_has_tracked_point()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tracked_point(this),
        _Internal::tracked_point(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  return target;
}

size_t SetTrackingPointStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackPoint tracked_point = 1;
  if (this->_internal_has_tracked_point()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tracked_point_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTrackingPointStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetTrackingPointStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTrackingPointStatusRequest::GetClassData() const { return &_class_data_; }


void SetTrackingPointStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetTrackingPointStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetTrackingPointStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_tracked_point()) {
    _this->_internal_mutable_tracked_point()->::mavsdk::rpc::camera_server::TrackPoint::MergeFrom(
        from._internal_tracked_point());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetTrackingPointStatusRequest::CopyFrom(const SetTrackingPointStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetTrackingPointStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTrackingPointStatusRequest::IsInitialized() const {
  return true;
}

void SetTrackingPointStatusRequest::InternalSwap(SetTrackingPointStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.tracked_point_, other->_impl_.tracked_point_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTrackingPointStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[70]);
}

// ===================================================================

class SetTrackingPointStatusResponse::_Internal {
 public:
};

SetTrackingPointStatusResponse::SetTrackingPointStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetTrackingPointStatusResponse)
}
SetTrackingPointStatusResponse::SetTrackingPointStatusResponse(const SetTrackingPointStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetTrackingPointStatusResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetTrackingPointStatusResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTrackingPointStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTrackingPointStatusResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetTrackingPointStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[71]);
}

// ===================================================================

class SetTrackingRectangleStatusRequest::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::TrackRectangle& tracked_rectangle(const SetTrackingRectangleStatusRequest* msg);
};

const ::mavsdk::rpc::camera_server::TrackRectangle&
SetTrackingRectangleStatusRequest::_Internal::tracked_rectangle(const SetTrackingRectangleStatusRequest* msg) {
  return *msg->_impl_.tracked_rectangle_;
}
SetTrackingRectangleStatusRequest::SetTrackingRectangleStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
}
SetTrackingRectangleStatusRequest::SetTrackingRectangleStatusRequest(const SetTrackingRectangleStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetTrackingRectangleStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tracked_rectangle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tracked_rectangle()) {
    _this->_impl_.tracked_rectangle_ = new ::mavsdk::rpc::camera_server::TrackRectangle(*from._impl_.tracked_rectangle_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
}

inline void SetTrackingRectangleStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tracked_rectangle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetTrackingRectangleStatusRequest::~SetTrackingRectangleStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetTrackingRectangleStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tracked_rectangle_;
}

void SetTrackingRectangleStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetTrackingRectangleStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.tracked_rectangle_ != nullptr) {
    delete _impl_.tracked_rectangle_;
  }
  _impl_.tracked_rectangle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTrackingRectangleStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.TrackRectangle tracked_rectangle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tracked_rectangle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetTrackingRectangleStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackRectangle tracked_rectangle = 1;
  if (this->_internal_has_tracked_rectangle()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tracked_rectangle(this),
        _Internal::tracked_rectangle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  return target;
}

size_t SetTrackingRectangleStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackRectangle tracked_rectangle = 1;
  if (this->_internal_has_tracked_rectangle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tracked_rectangle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTrackingRectangleStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetTrackingRectangleStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTrackingRectangleStatusRequest::GetClassData() const { return &_class_data_; }


void SetTrackingRectangleStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetTrackingRectangleStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetTrackingRectangleStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_tracked_rectangle()) {
    _this->_internal_mutable_tracked_rectangle()->::mavsdk::rpc::camera_server::TrackRectangle::MergeFrom(
        from._internal_tracked_rectangle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetTrackingRectangleStatusRequest::CopyFrom(const SetTrackingRectangleStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetTrackingRectangleStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTrackingRectangleStatusRequest::IsInitialized() const {
  return true;
}

void SetTrackingRectangleStatusRequest::InternalSwap(SetTrackingRectangleStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.tracked_rectangle_, other->_impl_.tracked_rectangle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTrackingRectangleStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[72]);
}

// ===================================================================

class SetTrackingRectangleStatusResponse::_Internal {
 public:
};

SetTrackingRectangleStatusResponse::SetTrackingRectangleStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetTrackingRectangleStatusResponse)
}
SetTrackingRectangleStatusResponse::SetTrackingRectangleStatusResponse(const SetTrackingRectangleStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetTrackingRectangleStatusResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetTrackingRectangleStatusResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTrackingRectangleStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTrackingRectangleStatusResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetTrackingRectangleStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[73]);
}

// ===================================================================

class SetTrackingOffStatusRequest::_Internal {
 public:
};

SetTrackingOffStatusRequest::SetTrackingOffStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetTrackingOffStatusRequest)
}
SetTrackingOffStatusRequest::SetTrackingOffStatusRequest(const SetTrackingOffStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetTrackingOffStatusRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetTrackingOffStatusRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTrackingOffStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTrackingOffStatusRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetTrackingOffStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[74]);
}

// ===================================================================

class SetTrackingOffStatusResponse::_Internal {
 public:
};

SetTrackingOffStatusResponse::SetTrackingOffStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetTrackingOffStatusResponse)
}
SetTrackingOffStatusResponse::SetTrackingOffStatusResponse(const SetTrackingOffStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetTrackingOffStatusResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetTrackingOffStatusResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTrackingOffStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTrackingOffStatusResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetTrackingOffStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[75]);
}

// ===================================================================

class SubscribeTrackingPointCommandRequest::_Internal {
 public:
};

SubscribeTrackingPointCommandRequest::SubscribeTrackingPointCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeTrackingPointCommandRequest)
}
SubscribeTrackingPointCommandRequest::SubscribeTrackingPointCommandRequest(const SubscribeTrackingPointCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeTrackingPointCommandRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeTrackingPointCommandRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeTrackingPointCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeTrackingPointCommandRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTrackingPointCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[76]);
}

// ===================================================================

class TrackingPointCommandResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::TrackPoint& track_point(const TrackingPointCommandResponse* msg);
};

const ::mavsdk::rpc::camera_server::TrackPoint&
TrackingPointCommandResponse::_Internal::track_point(const TrackingPointCommandResponse* msg) {
  return *msg->_impl_.track_point_;
}
TrackingPointCommandResponse::TrackingPointCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
}
TrackingPointCommandResponse::TrackingPointCommandResponse(const TrackingPointCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrackingPointCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.track_point_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_track_point()) {
    _this->_impl_.track_point_ = new ::mavsdk::rpc::camera_server::TrackPoint(*from._impl_.track_point_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
}

inline void TrackingPointCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.track_point_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TrackingPointCommandResponse::~TrackingPointCommandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrackingPointCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.track_point_;
}

void TrackingPointCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrackingPointCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.track_point_ != nullptr) {
    delete _impl_.track_point_;
  }
  _impl_.track_point_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrackingPointCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.TrackPoint track_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_track_point(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrackingPointCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackPoint track_point = 1;
  if (this->_internal_has_track_point()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::track_point(this),
        _Internal::track_point(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  return target;
}

size_t TrackingPointCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackPoint track_point = 1;
  if (this->_internal_has_track_point()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.track_point_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrackingPointCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrackingPointCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrackingPointCommandResponse::GetClassData() const { return &_class_data_; }


void TrackingPointCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrackingPointCommandResponse*>(&to_msg);
  auto& from = static_cast<const TrackingPointCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_track_point()) {
    _this->_internal_mutable_track_point()->::mavsdk::rpc::camera_server::TrackPoint::MergeFrom(
        from._internal_track_point());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrackingPointCommandResponse::CopyFrom(const TrackingPointCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TrackingPointCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackingPointCommandResponse::IsInitialized() const {
  return true;
}

void TrackingPointCommandResponse::InternalSwap(TrackingPointCommandResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.track_point_, other->_impl_.track_point_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrackingPointCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[77]);
}

// ===================================================================

class SubscribeTrackingRectangleCommandRequest::_Internal {
 public:
};

SubscribeTrackingRectangleCommandRequest::SubscribeTrackingRectangleCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeTrackingRectangleCommandRequest)
}
SubscribeTrackingRectangleCommandRequest::SubscribeTrackingRectangleCommandRequest(const SubscribeTrackingRectangleCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeTrackingRectangleCommandRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeTrackingRectangleCommandRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeTrackingRectangleCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeTrackingRectangleCommandRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTrackingRectangleCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[78]);
}

// ===================================================================

class TrackingRectangleCommandResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::TrackRectangle& track_rectangle(const TrackingRectangleCommandResponse* msg);
};

const ::mavsdk::rpc::camera_server::TrackRectangle&
TrackingRectangleCommandResponse::_Internal::track_rectangle(const TrackingRectangleCommandResponse* msg) {
  return *msg->_impl_.track_rectangle_;
}
TrackingRectangleCommandResponse::TrackingRectangleCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
}
TrackingRectangleCommandResponse::TrackingRectangleCommandResponse(const TrackingRectangleCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrackingRectangleCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.track_rectangle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_track_rectangle()) {
    _this->_impl_.track_rectangle_ = new ::mavsdk::rpc::camera_server::TrackRectangle(*from._impl_.track_rectangle_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
}

inline void TrackingRectangleCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.track_rectangle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TrackingRectangleCommandResponse::~TrackingRectangleCommandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrackingRectangleCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.track_rectangle_;
}

void TrackingRectangleCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrackingRectangleCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.track_rectangle_ != nullptr) {
    delete _impl_.track_rectangle_;
  }
  _impl_.track_rectangle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrackingRectangleCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.TrackRectangle track_rectangle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_track_rectangle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrackingRectangleCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackRectangle track_rectangle = 1;
  if (this->_internal_has_track_rectangle()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::track_rectangle(this),
        _Internal::track_rectangle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  return target;
}

size_t TrackingRectangleCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.TrackRectangle track_rectangle = 1;
  if (this->_internal_has_track_rectangle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.track_rectangle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrackingRectangleCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrackingRectangleCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrackingRectangleCommandResponse::GetClassData() const { return &_class_data_; }


void TrackingRectangleCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrackingRectangleCommandResponse*>(&to_msg);
  auto& from = static_cast<const TrackingRectangleCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_track_rectangle()) {
    _this->_internal_mutable_track_rectangle()->::mavsdk::rpc::camera_server::TrackRectangle::MergeFrom(
        from._internal_track_rectangle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrackingRectangleCommandResponse::CopyFrom(const TrackingRectangleCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TrackingRectangleCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackingRectangleCommandResponse::IsInitialized() const {
  return true;
}

void TrackingRectangleCommandResponse::InternalSwap(TrackingRectangleCommandResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.track_rectangle_, other->_impl_.track_rectangle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrackingRectangleCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[79]);
}

// ===================================================================

class SubscribeTrackingOffCommandRequest::_Internal {
 public:
};

SubscribeTrackingOffCommandRequest::SubscribeTrackingOffCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeTrackingOffCommandRequest)
}
SubscribeTrackingOffCommandRequest::SubscribeTrackingOffCommandRequest(const SubscribeTrackingOffCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeTrackingOffCommandRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeTrackingOffCommandRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeTrackingOffCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeTrackingOffCommandRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTrackingOffCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[80]);
}

// ===================================================================

class TrackingOffCommandResponse::_Internal {
 public:
};

TrackingOffCommandResponse::TrackingOffCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
}
TrackingOffCommandResponse::TrackingOffCommandResponse(const TrackingOffCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrackingOffCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dummy_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dummy_ = from._impl_.dummy_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
}

inline void TrackingOffCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dummy_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TrackingOffCommandResponse::~TrackingOffCommandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrackingOffCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TrackingOffCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrackingOffCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dummy_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrackingOffCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 dummy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.dummy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrackingOffCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->_internal_dummy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_dummy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  return target;
}

size_t TrackingOffCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->_internal_dummy() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_dummy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrackingOffCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrackingOffCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrackingOffCommandResponse::GetClassData() const { return &_class_data_; }


void TrackingOffCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrackingOffCommandResponse*>(&to_msg);
  auto& from = static_cast<const TrackingOffCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dummy() != 0) {
    _this->_internal_set_dummy(from._internal_dummy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrackingOffCommandResponse::CopyFrom(const TrackingOffCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TrackingOffCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackingOffCommandResponse::IsInitialized() const {
  return true;
}

void TrackingOffCommandResponse::InternalSwap(TrackingOffCommandResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dummy_, other->_impl_.dummy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrackingOffCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[81]);
}

// ===================================================================

class RespondTrackingPointCommandRequest::_Internal {
 public:
};

RespondTrackingPointCommandRequest::RespondTrackingPointCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
}
RespondTrackingPointCommandRequest::RespondTrackingPointCommandRequest(const RespondTrackingPointCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTrackingPointCommandRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stop_video_feedback_ = from._impl_.stop_video_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
}

inline void RespondTrackingPointCommandRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTrackingPointCommandRequest::~RespondTrackingPointCommandRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTrackingPointCommandRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondTrackingPointCommandRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTrackingPointCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTrackingPointCommandRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_video_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTrackingPointCommandRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stop_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  return target;
}

size_t RespondTrackingPointCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTrackingPointCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTrackingPointCommandRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTrackingPointCommandRequest::GetClassData() const { return &_class_data_; }


void RespondTrackingPointCommandRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTrackingPointCommandRequest*>(&to_msg);
  auto& from = static_cast<const RespondTrackingPointCommandRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_feedback() != 0) {
    _this->_internal_set_stop_video_feedback(from._internal_stop_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTrackingPointCommandRequest::CopyFrom(const RespondTrackingPointCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTrackingPointCommandRequest::IsInitialized() const {
  return true;
}

void RespondTrackingPointCommandRequest::InternalSwap(RespondTrackingPointCommandRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_feedback_, other->_impl_.stop_video_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTrackingPointCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[82]);
}

// ===================================================================

class RespondTrackingPointCommandResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondTrackingPointCommandResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondTrackingPointCommandResponse::_Internal::camera_server_result(const RespondTrackingPointCommandResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondTrackingPointCommandResponse::RespondTrackingPointCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
}
RespondTrackingPointCommandResponse::RespondTrackingPointCommandResponse(const RespondTrackingPointCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTrackingPointCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
}

inline void RespondTrackingPointCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTrackingPointCommandResponse::~RespondTrackingPointCommandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTrackingPointCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondTrackingPointCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTrackingPointCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTrackingPointCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTrackingPointCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  return target;
}

size_t RespondTrackingPointCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTrackingPointCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTrackingPointCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTrackingPointCommandResponse::GetClassData() const { return &_class_data_; }


void RespondTrackingPointCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTrackingPointCommandResponse*>(&to_msg);
  auto& from = static_cast<const RespondTrackingPointCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTrackingPointCommandResponse::CopyFrom(const RespondTrackingPointCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTrackingPointCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTrackingPointCommandResponse::IsInitialized() const {
  return true;
}

void RespondTrackingPointCommandResponse::InternalSwap(RespondTrackingPointCommandResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTrackingPointCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[83]);
}

// ===================================================================

class RespondTrackingRectangleCommandRequest::_Internal {
 public:
};

RespondTrackingRectangleCommandRequest::RespondTrackingRectangleCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
}
RespondTrackingRectangleCommandRequest::RespondTrackingRectangleCommandRequest(const RespondTrackingRectangleCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTrackingRectangleCommandRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stop_video_feedback_ = from._impl_.stop_video_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
}

inline void RespondTrackingRectangleCommandRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTrackingRectangleCommandRequest::~RespondTrackingRectangleCommandRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTrackingRectangleCommandRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondTrackingRectangleCommandRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTrackingRectangleCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTrackingRectangleCommandRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_video_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTrackingRectangleCommandRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stop_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  return target;
}

size_t RespondTrackingRectangleCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTrackingRectangleCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTrackingRectangleCommandRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTrackingRectangleCommandRequest::GetClassData() const { return &_class_data_; }


void RespondTrackingRectangleCommandRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTrackingRectangleCommandRequest*>(&to_msg);
  auto& from = static_cast<const RespondTrackingRectangleCommandRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_feedback() != 0) {
    _this->_internal_set_stop_video_feedback(from._internal_stop_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTrackingRectangleCommandRequest::CopyFrom(const RespondTrackingRectangleCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTrackingRectangleCommandRequest::IsInitialized() const {
  return true;
}

void RespondTrackingRectangleCommandRequest::InternalSwap(RespondTrackingRectangleCommandRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_feedback_, other->_impl_.stop_video_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTrackingRectangleCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[84]);
}

// ===================================================================

class RespondTrackingRectangleCommandResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondTrackingRectangleCommandResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondTrackingRectangleCommandResponse::_Internal::camera_server_result(const RespondTrackingRectangleCommandResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondTrackingRectangleCommandResponse::RespondTrackingRectangleCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
}
RespondTrackingRectangleCommandResponse::RespondTrackingRectangleCommandResponse(const RespondTrackingRectangleCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTrackingRectangleCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
}

inline void RespondTrackingRectangleCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTrackingRectangleCommandResponse::~RespondTrackingRectangleCommandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTrackingRectangleCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondTrackingRectangleCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTrackingRectangleCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTrackingRectangleCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTrackingRectangleCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  return target;
}

size_t RespondTrackingRectangleCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTrackingRectangleCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTrackingRectangleCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTrackingRectangleCommandResponse::GetClassData() const { return &_class_data_; }


void RespondTrackingRectangleCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTrackingRectangleCommandResponse*>(&to_msg);
  auto& from = static_cast<const RespondTrackingRectangleCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTrackingRectangleCommandResponse::CopyFrom(const RespondTrackingRectangleCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTrackingRectangleCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTrackingRectangleCommandResponse::IsInitialized() const {
  return true;
}

void RespondTrackingRectangleCommandResponse::InternalSwap(RespondTrackingRectangleCommandResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTrackingRectangleCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[85]);
}

// ===================================================================

class RespondTrackingOffCommandRequest::_Internal {
 public:
};

RespondTrackingOffCommandRequest::RespondTrackingOffCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
}
RespondTrackingOffCommandRequest::RespondTrackingOffCommandRequest(const RespondTrackingOffCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTrackingOffCommandRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.stop_video_feedback_ = from._impl_.stop_video_feedback_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
}

inline void RespondTrackingOffCommandRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_video_feedback_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTrackingOffCommandRequest::~RespondTrackingOffCommandRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTrackingOffCommandRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RespondTrackingOffCommandRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTrackingOffCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_feedback_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTrackingOffCommandRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_video_feedback(static_cast<::mavsdk::rpc::camera_server::CameraFeedback>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTrackingOffCommandRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stop_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  return target;
}

size_t RespondTrackingOffCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTrackingOffCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTrackingOffCommandRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTrackingOffCommandRequest::GetClassData() const { return &_class_data_; }


void RespondTrackingOffCommandRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTrackingOffCommandRequest*>(&to_msg);
  auto& from = static_cast<const RespondTrackingOffCommandRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_feedback() != 0) {
    _this->_internal_set_stop_video_feedback(from._internal_stop_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTrackingOffCommandRequest::CopyFrom(const RespondTrackingOffCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTrackingOffCommandRequest::IsInitialized() const {
  return true;
}

void RespondTrackingOffCommandRequest::InternalSwap(RespondTrackingOffCommandRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_feedback_, other->_impl_.stop_video_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTrackingOffCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[86]);
}

// ===================================================================

class RespondTrackingOffCommandResponse::_Internal {
 public:
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondTrackingOffCommandResponse* msg);
};

const ::mavsdk::rpc::camera_server::CameraServerResult&
RespondTrackingOffCommandResponse::_Internal::camera_server_result(const RespondTrackingOffCommandResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondTrackingOffCommandResponse::RespondTrackingOffCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
}
RespondTrackingOffCommandResponse::RespondTrackingOffCommandResponse(const RespondTrackingOffCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespondTrackingOffCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_camera_server_result()) {
    _this->_impl_.camera_server_result_ = new ::mavsdk::rpc::camera_server::CameraServerResult(*from._impl_.camera_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
}

inline void RespondTrackingOffCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camera_server_result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RespondTrackingOffCommandResponse::~RespondTrackingOffCommandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespondTrackingOffCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.camera_server_result_;
}

void RespondTrackingOffCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespondTrackingOffCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.camera_server_result_ != nullptr) {
    delete _impl_.camera_server_result_;
  }
  _impl_.camera_server_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespondTrackingOffCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_camera_server_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespondTrackingOffCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  return target;
}

size_t RespondTrackingOffCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (this->_internal_has_camera_server_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespondTrackingOffCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespondTrackingOffCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespondTrackingOffCommandResponse::GetClassData() const { return &_class_data_; }


void RespondTrackingOffCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespondTrackingOffCommandResponse*>(&to_msg);
  auto& from = static_cast<const RespondTrackingOffCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_camera_server_result()) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTrackingOffCommandResponse::CopyFrom(const RespondTrackingOffCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTrackingOffCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondTrackingOffCommandResponse::IsInitialized() const {
  return true;
}

void RespondTrackingOffCommandResponse::InternalSwap(RespondTrackingOffCommandResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespondTrackingOffCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[87]);
}

// ===================================================================

class TrackPoint::_Internal {
 public:
};

TrackPoint::TrackPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TrackPoint)
}
TrackPoint::TrackPoint(const TrackPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrackPoint* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.point_x_){}
    , decltype(_impl_.point_y_){}
    , decltype(_impl_.radius_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.point_x_, &from._impl_.point_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.radius_) -
    reinterpret_cast<char*>(&_impl_.point_x_)) + sizeof(_impl_.radius_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.TrackPoint)
}

inline void TrackPoint::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.point_x_){0}
    , decltype(_impl_.point_y_){0}
    , decltype(_impl_.radius_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TrackPoint::~TrackPoint() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TrackPoint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrackPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TrackPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrackPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TrackPoint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.point_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.radius_) -
      reinterpret_cast<char*>(&_impl_.point_x_)) + sizeof(_impl_.radius_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrackPoint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float point_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.point_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float point_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.point_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float radius = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrackPoint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TrackPoint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float point_x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_point_x = this->_internal_point_x();
  uint32_t raw_point_x;
  memcpy(&raw_point_x, &tmp_point_x, sizeof(tmp_point_x));
  if (raw_point_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_point_x(), target);
  }

  // float point_y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_point_y = this->_internal_point_y();
  uint32_t raw_point_y;
  memcpy(&raw_point_y, &tmp_point_y, sizeof(tmp_point_y));
  if (raw_point_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_point_y(), target);
  }

  // float radius = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_radius = this->_internal_radius();
  uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TrackPoint)
  return target;
}

size_t TrackPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TrackPoint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float point_x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_point_x = this->_internal_point_x();
  uint32_t raw_point_x;
  memcpy(&raw_point_x, &tmp_point_x, sizeof(tmp_point_x));
  if (raw_point_x != 0) {
    total_size += 1 + 4;
  }

  // float point_y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_point_y = this->_internal_point_y();
  uint32_t raw_point_y;
  memcpy(&raw_point_y, &tmp_point_y, sizeof(tmp_point_y));
  if (raw_point_y != 0) {
    total_size += 1 + 4;
  }

  // float radius = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_radius = this->_internal_radius();
  uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrackPoint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrackPoint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrackPoint::GetClassData() const { return &_class_data_; }


void TrackPoint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrackPoint*>(&to_msg);
  auto& from = static_cast<const TrackPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TrackPoint)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_point_x = from._internal_point_x();
  uint32_t raw_point_x;
  memcpy(&raw_point_x, &tmp_point_x, sizeof(tmp_point_x));
  if (raw_point_x != 0) {
    _this->_internal_set_point_x(from._internal_point_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_point_y = from._internal_point_y();
  uint32_t raw_point_y;
  memcpy(&raw_point_y, &tmp_point_y, sizeof(tmp_point_y));
  if (raw_point_y != 0) {
    _this->_internal_set_point_y(from._internal_point_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_radius = from._internal_radius();
  uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    _this->_internal_set_radius(from._internal_radius());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrackPoint::CopyFrom(const TrackPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TrackPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackPoint::IsInitialized() const {
  return true;
}

void TrackPoint::InternalSwap(TrackPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrackPoint, _impl_.radius_)
      + sizeof(TrackPoint::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(TrackPoint, _impl_.point_x_)>(
          reinterpret_cast<char*>(&_impl_.point_x_),
          reinterpret_cast<char*>(&other->_impl_.point_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrackPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[88]);
}

// ===================================================================

class TrackRectangle::_Internal {
 public:
};

TrackRectangle::TrackRectangle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TrackRectangle)
}
TrackRectangle::TrackRectangle(const TrackRectangle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrackRectangle* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.top_left_corner_x_){}
    , decltype(_impl_.top_left_corner_y_){}
    , decltype(_impl_.bottom_right_corner_x_){}
    , decltype(_impl_.bottom_right_corner_y_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.top_left_corner_x_, &from._impl_.top_left_corner_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.bottom_right_corner_y_) -
    reinterpret_cast<char*>(&_impl_.top_left_corner_x_)) + sizeof(_impl_.bottom_right_corner_y_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.TrackRectangle)
}

inline void TrackRectangle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.top_left_corner_x_){0}
    , decltype(_impl_.top_left_corner_y_){0}
    , decltype(_impl_.bottom_right_corner_x_){0}
    , decltype(_impl_.bottom_right_corner_y_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TrackRectangle::~TrackRectangle() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TrackRectangle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrackRectangle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TrackRectangle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrackRectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TrackRectangle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.top_left_corner_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.bottom_right_corner_y_) -
      reinterpret_cast<char*>(&_impl_.top_left_corner_x_)) + sizeof(_impl_.bottom_right_corner_y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrackRectangle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float top_left_corner_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.top_left_corner_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float top_left_corner_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.top_left_corner_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float bottom_right_corner_x = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.bottom_right_corner_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float bottom_right_corner_y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.bottom_right_corner_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrackRectangle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TrackRectangle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float top_left_corner_x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_left_corner_x = this->_internal_top_left_corner_x();
  uint32_t raw_top_left_corner_x;
  memcpy(&raw_top_left_corner_x, &tmp_top_left_corner_x, sizeof(tmp_top_left_corner_x));
  if (raw_top_left_corner_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_top_left_corner_x(), target);
  }

  // float top_left_corner_y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_left_corner_y = this->_internal_top_left_corner_y();
  uint32_t raw_top_left_corner_y;
  memcpy(&raw_top_left_corner_y, &tmp_top_left_corner_y, sizeof(tmp_top_left_corner_y));
  if (raw_top_left_corner_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_top_left_corner_y(), target);
  }

  // float bottom_right_corner_x = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_bottom_right_corner_x = this->_internal_bottom_right_corner_x();
  uint32_t raw_bottom_right_corner_x;
  memcpy(&raw_bottom_right_corner_x, &tmp_bottom_right_corner_x, sizeof(tmp_bottom_right_corner_x));
  if (raw_bottom_right_corner_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_bottom_right_corner_x(), target);
  }

  // float bottom_right_corner_y = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_bottom_right_corner_y = this->_internal_bottom_right_corner_y();
  uint32_t raw_bottom_right_corner_y;
  memcpy(&raw_bottom_right_corner_y, &tmp_bottom_right_corner_y, sizeof(tmp_bottom_right_corner_y));
  if (raw_bottom_right_corner_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_bottom_right_corner_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TrackRectangle)
  return target;
}

size_t TrackRectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TrackRectangle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float top_left_corner_x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_left_corner_x = this->_internal_top_left_corner_x();
  uint32_t raw_top_left_corner_x;
  memcpy(&raw_top_left_corner_x, &tmp_top_left_corner_x, sizeof(tmp_top_left_corner_x));
  if (raw_top_left_corner_x != 0) {
    total_size += 1 + 4;
  }

  // float top_left_corner_y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_left_corner_y = this->_internal_top_left_corner_y();
  uint32_t raw_top_left_corner_y;
  memcpy(&raw_top_left_corner_y, &tmp_top_left_corner_y, sizeof(tmp_top_left_corner_y));
  if (raw_top_left_corner_y != 0) {
    total_size += 1 + 4;
  }

  // float bottom_right_corner_x = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_bottom_right_corner_x = this->_internal_bottom_right_corner_x();
  uint32_t raw_bottom_right_corner_x;
  memcpy(&raw_bottom_right_corner_x, &tmp_bottom_right_corner_x, sizeof(tmp_bottom_right_corner_x));
  if (raw_bottom_right_corner_x != 0) {
    total_size += 1 + 4;
  }

  // float bottom_right_corner_y = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_bottom_right_corner_y = this->_internal_bottom_right_corner_y();
  uint32_t raw_bottom_right_corner_y;
  memcpy(&raw_bottom_right_corner_y, &tmp_bottom_right_corner_y, sizeof(tmp_bottom_right_corner_y));
  if (raw_bottom_right_corner_y != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrackRectangle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrackRectangle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrackRectangle::GetClassData() const { return &_class_data_; }


void TrackRectangle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrackRectangle*>(&to_msg);
  auto& from = static_cast<const TrackRectangle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TrackRectangle)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_left_corner_x = from._internal_top_left_corner_x();
  uint32_t raw_top_left_corner_x;
  memcpy(&raw_top_left_corner_x, &tmp_top_left_corner_x, sizeof(tmp_top_left_corner_x));
  if (raw_top_left_corner_x != 0) {
    _this->_internal_set_top_left_corner_x(from._internal_top_left_corner_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_left_corner_y = from._internal_top_left_corner_y();
  uint32_t raw_top_left_corner_y;
  memcpy(&raw_top_left_corner_y, &tmp_top_left_corner_y, sizeof(tmp_top_left_corner_y));
  if (raw_top_left_corner_y != 0) {
    _this->_internal_set_top_left_corner_y(from._internal_top_left_corner_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_bottom_right_corner_x = from._internal_bottom_right_corner_x();
  uint32_t raw_bottom_right_corner_x;
  memcpy(&raw_bottom_right_corner_x, &tmp_bottom_right_corner_x, sizeof(tmp_bottom_right_corner_x));
  if (raw_bottom_right_corner_x != 0) {
    _this->_internal_set_bottom_right_corner_x(from._internal_bottom_right_corner_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_bottom_right_corner_y = from._internal_bottom_right_corner_y();
  uint32_t raw_bottom_right_corner_y;
  memcpy(&raw_bottom_right_corner_y, &tmp_bottom_right_corner_y, sizeof(tmp_bottom_right_corner_y));
  if (raw_bottom_right_corner_y != 0) {
    _this->_internal_set_bottom_right_corner_y(from._internal_bottom_right_corner_y());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrackRectangle::CopyFrom(const TrackRectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TrackRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackRectangle::IsInitialized() const {
  return true;
}

void TrackRectangle::InternalSwap(TrackRectangle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrackRectangle, _impl_.bottom_right_corner_y_)
      + sizeof(TrackRectangle::_impl_.bottom_right_corner_y_)
      - PROTOBUF_FIELD_OFFSET(TrackRectangle, _impl_.top_left_corner_x_)>(
          reinterpret_cast<char*>(&_impl_.top_left_corner_x_),
          reinterpret_cast<char*>(&other->_impl_.top_left_corner_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrackRectangle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[89]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace camera_server
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetInformationRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetInformationResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetInformationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetInformationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetVideoStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetVideoStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetVideoStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetVideoStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetVideoStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetVideoStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetInProgressRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetInProgressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetInProgressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetInProgressResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetInProgressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetInProgressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::TakePhotoResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::TakePhotoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::TakePhotoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTakePhotoRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTakePhotoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTakePhotoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTakePhotoResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTakePhotoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTakePhotoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeStartVideoRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeStartVideoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeStartVideoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::StartVideoResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::StartVideoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::StartVideoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStartVideoRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStartVideoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStartVideoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStartVideoResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStartVideoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStartVideoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeStopVideoRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeStopVideoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeStopVideoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::StopVideoResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::StopVideoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::StopVideoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStopVideoRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStopVideoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStopVideoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStopVideoResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStopVideoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStopVideoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::StartVideoStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::StartVideoStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::StartVideoStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::StopVideoStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::StopVideoStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::StopVideoStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeSetModeRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeSetModeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeSetModeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetModeResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetModeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetModeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondSetModeRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondSetModeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondSetModeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondSetModeResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondSetModeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondSetModeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::StorageInformationResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::StorageInformationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::StorageInformationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStorageInformationRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStorageInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStorageInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondStorageInformationResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondStorageInformationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondStorageInformationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::CaptureStatusResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::CaptureStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::CaptureStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondCaptureStatusRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondCaptureStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondCaptureStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondCaptureStatusResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondCaptureStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondCaptureStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::FormatStorageResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::FormatStorageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::FormatStorageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondFormatStorageRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondFormatStorageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondFormatStorageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondFormatStorageResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondFormatStorageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondFormatStorageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::ResetSettingsResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::ResetSettingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::ResetSettingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondResetSettingsRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondResetSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondResetSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondResetSettingsResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondResetSettingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondResetSettingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeZoomInStartRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeZoomInStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeZoomInStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::ZoomInStartResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::ZoomInStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::ZoomInStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomInStartRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomInStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomInStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomInStartResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomInStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomInStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeZoomOutStartRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeZoomOutStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeZoomOutStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::ZoomOutStartResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::ZoomOutStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::ZoomOutStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomOutStartRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomOutStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomOutStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomOutStartResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomOutStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomOutStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeZoomStopRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeZoomStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeZoomStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::ZoomStopResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::ZoomStopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::ZoomStopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomStopRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomStopResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomStopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomStopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::ZoomRangeResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::ZoomRangeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::ZoomRangeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomRangeRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomRangeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomRangeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondZoomRangeResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondZoomRangeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondZoomRangeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::Information*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::Information >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::Information >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::VideoStreaming*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::VideoStreaming >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::VideoStreaming >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::Position*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::Position >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::Position >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::Quaternion*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::Quaternion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::Quaternion >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::CaptureInfo*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::CaptureInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::CaptureInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::CameraServerResult*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::CameraServerResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::CameraServerResult >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::StorageInformation*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::StorageInformation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::StorageInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::CaptureStatus*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::CaptureStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::CaptureStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetTrackingPointStatusRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetTrackingPointStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetTrackingPointStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetTrackingPointStatusResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetTrackingPointStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetTrackingPointStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetTrackingRectangleStatusRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetTrackingRectangleStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetTrackingRectangleStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetTrackingRectangleStatusResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetTrackingRectangleStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetTrackingRectangleStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetTrackingOffStatusRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetTrackingOffStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetTrackingOffStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SetTrackingOffStatusResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SetTrackingOffStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SetTrackingOffStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeTrackingPointCommandRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeTrackingPointCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeTrackingPointCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::TrackingPointCommandResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::TrackingPointCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::TrackingPointCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeTrackingRectangleCommandRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeTrackingRectangleCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeTrackingRectangleCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::TrackingRectangleCommandResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::TrackingRectangleCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::TrackingRectangleCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::SubscribeTrackingOffCommandRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::SubscribeTrackingOffCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::SubscribeTrackingOffCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::TrackingOffCommandResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::TrackingOffCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::TrackingOffCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTrackingPointCommandRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTrackingPointCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTrackingPointCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTrackingPointCommandResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTrackingPointCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTrackingPointCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTrackingRectangleCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTrackingOffCommandRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTrackingOffCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTrackingOffCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::RespondTrackingOffCommandResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::RespondTrackingOffCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::RespondTrackingOffCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::TrackPoint*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::TrackPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::TrackPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::camera_server::TrackRectangle*
Arena::CreateMaybeMessage< ::mavsdk::rpc::camera_server::TrackRectangle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::camera_server::TrackRectangle >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
