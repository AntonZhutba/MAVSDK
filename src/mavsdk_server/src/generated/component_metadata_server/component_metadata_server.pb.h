// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component_metadata_server/component_metadata_server.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto;
namespace mavsdk {
namespace rpc {
namespace component_metadata_server {
class Metadata;
struct MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class SetMetadataRequest;
struct SetMetadataRequestDefaultTypeInternal;
extern SetMetadataRequestDefaultTypeInternal _SetMetadataRequest_default_instance_;
class SetMetadataResponse;
struct SetMetadataResponseDefaultTypeInternal;
extern SetMetadataResponseDefaultTypeInternal _SetMetadataResponse_default_instance_;
}  // namespace component_metadata_server
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> ::mavsdk::rpc::component_metadata_server::Metadata* Arena::CreateMaybeMessage<::mavsdk::rpc::component_metadata_server::Metadata>(Arena*);
template<> ::mavsdk::rpc::component_metadata_server::SetMetadataRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::component_metadata_server::SetMetadataRequest>(Arena*);
template<> ::mavsdk::rpc::component_metadata_server::SetMetadataResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::component_metadata_server::SetMetadataResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mavsdk {
namespace rpc {
namespace component_metadata_server {

enum MetadataType : int {
  METADATA_TYPE_PARAMETER = 0,
  METADATA_TYPE_EVENTS = 1,
  METADATA_TYPE_ACTUATORS = 2,
  MetadataType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MetadataType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MetadataType_IsValid(int value);
constexpr MetadataType MetadataType_MIN = METADATA_TYPE_PARAMETER;
constexpr MetadataType MetadataType_MAX = METADATA_TYPE_ACTUATORS;
constexpr int MetadataType_ARRAYSIZE = MetadataType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MetadataType_descriptor();
template<typename T>
inline const std::string& MetadataType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MetadataType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MetadataType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MetadataType_descriptor(), enum_t_value);
}
inline bool MetadataType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MetadataType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MetadataType>(
    MetadataType_descriptor(), name, value);
}
// ===================================================================

class SetMetadataRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_metadata_server.SetMetadataRequest) */ {
 public:
  inline SetMetadataRequest() : SetMetadataRequest(nullptr) {}
  ~SetMetadataRequest() override;
  explicit PROTOBUF_CONSTEXPR SetMetadataRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetMetadataRequest(const SetMetadataRequest& from);
  SetMetadataRequest(SetMetadataRequest&& from) noexcept
    : SetMetadataRequest() {
    *this = ::std::move(from);
  }

  inline SetMetadataRequest& operator=(const SetMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMetadataRequest& operator=(SetMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const SetMetadataRequest*>(
               &_SetMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetMetadataRequest& a, SetMetadataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMetadataRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMetadataRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMetadataRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMetadataRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetMetadataRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SetMetadataRequest& from) {
    SetMetadataRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMetadataRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.component_metadata_server.SetMetadataRequest";
  }
  protected:
  explicit SetMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.component_metadata_server.Metadata metadata = 1;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;
  public:
  void clear_metadata();
  ::mavsdk::rpc::component_metadata_server::Metadata* mutable_metadata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::component_metadata_server::Metadata >*
      mutable_metadata();
  private:
  const ::mavsdk::rpc::component_metadata_server::Metadata& _internal_metadata(int index) const;
  ::mavsdk::rpc::component_metadata_server::Metadata* _internal_add_metadata();
  public:
  const ::mavsdk::rpc::component_metadata_server::Metadata& metadata(int index) const;
  ::mavsdk::rpc::component_metadata_server::Metadata* add_metadata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::component_metadata_server::Metadata >&
      metadata() const;

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_metadata_server.SetMetadataRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::component_metadata_server::Metadata > metadata_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto;
};
// -------------------------------------------------------------------

class SetMetadataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_metadata_server.SetMetadataResponse) */ {
 public:
  inline SetMetadataResponse() : SetMetadataResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SetMetadataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetMetadataResponse(const SetMetadataResponse& from);
  SetMetadataResponse(SetMetadataResponse&& from) noexcept
    : SetMetadataResponse() {
    *this = ::std::move(from);
  }

  inline SetMetadataResponse& operator=(const SetMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMetadataResponse& operator=(SetMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const SetMetadataResponse*>(
               &_SetMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetMetadataResponse& a, SetMetadataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMetadataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMetadataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMetadataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMetadataResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetMetadataResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetMetadataResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.component_metadata_server.SetMetadataResponse";
  }
  protected:
  explicit SetMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_metadata_server.SetMetadataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Metadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_metadata_server.Metadata) */ {
 public:
  inline Metadata() : Metadata(nullptr) {}
  ~Metadata() override;
  explicit PROTOBUF_CONSTEXPR Metadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Metadata(const Metadata& from);
  Metadata(Metadata&& from) noexcept
    : Metadata() {
    *this = ::std::move(from);
  }

  inline Metadata& operator=(const Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline Metadata& operator=(Metadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Metadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const Metadata* internal_default_instance() {
    return reinterpret_cast<const Metadata*>(
               &_Metadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Metadata& a, Metadata& b) {
    a.Swap(&b);
  }
  inline void Swap(Metadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Metadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Metadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Metadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Metadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Metadata& from) {
    Metadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Metadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.component_metadata_server.Metadata";
  }
  protected:
  explicit Metadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJsonMetadataFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // string json_metadata = 2;
  void clear_json_metadata();
  const std::string& json_metadata() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_json_metadata(ArgT0&& arg0, ArgT... args);
  std::string* mutable_json_metadata();
  PROTOBUF_NODISCARD std::string* release_json_metadata();
  void set_allocated_json_metadata(std::string* json_metadata);
  private:
  const std::string& _internal_json_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_json_metadata(const std::string& value);
  std::string* _internal_mutable_json_metadata();
  public:

  // .mavsdk.rpc.component_metadata_server.MetadataType type = 1;
  void clear_type();
  ::mavsdk::rpc::component_metadata_server::MetadataType type() const;
  void set_type(::mavsdk::rpc::component_metadata_server::MetadataType value);
  private:
  ::mavsdk::rpc::component_metadata_server::MetadataType _internal_type() const;
  void _internal_set_type(::mavsdk::rpc::component_metadata_server::MetadataType value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_metadata_server.Metadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr json_metadata_;
    int type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetMetadataRequest

// repeated .mavsdk.rpc.component_metadata_server.Metadata metadata = 1;
inline int SetMetadataRequest::_internal_metadata_size() const {
  return _impl_.metadata_.size();
}
inline int SetMetadataRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void SetMetadataRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline ::mavsdk::rpc::component_metadata_server::Metadata* SetMetadataRequest::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_metadata_server.SetMetadataRequest.metadata)
  return _impl_.metadata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::component_metadata_server::Metadata >*
SetMetadataRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.component_metadata_server.SetMetadataRequest.metadata)
  return &_impl_.metadata_;
}
inline const ::mavsdk::rpc::component_metadata_server::Metadata& SetMetadataRequest::_internal_metadata(int index) const {
  return _impl_.metadata_.Get(index);
}
inline const ::mavsdk::rpc::component_metadata_server::Metadata& SetMetadataRequest::metadata(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_metadata_server.SetMetadataRequest.metadata)
  return _internal_metadata(index);
}
inline ::mavsdk::rpc::component_metadata_server::Metadata* SetMetadataRequest::_internal_add_metadata() {
  return _impl_.metadata_.Add();
}
inline ::mavsdk::rpc::component_metadata_server::Metadata* SetMetadataRequest::add_metadata() {
  ::mavsdk::rpc::component_metadata_server::Metadata* _add = _internal_add_metadata();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.component_metadata_server.SetMetadataRequest.metadata)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::component_metadata_server::Metadata >&
SetMetadataRequest::metadata() const {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.component_metadata_server.SetMetadataRequest.metadata)
  return _impl_.metadata_;
}

// -------------------------------------------------------------------

// SetMetadataResponse

// -------------------------------------------------------------------

// Metadata

// .mavsdk.rpc.component_metadata_server.MetadataType type = 1;
inline void Metadata::clear_type() {
  _impl_.type_ = 0;
}
inline ::mavsdk::rpc::component_metadata_server::MetadataType Metadata::_internal_type() const {
  return static_cast< ::mavsdk::rpc::component_metadata_server::MetadataType >(_impl_.type_);
}
inline ::mavsdk::rpc::component_metadata_server::MetadataType Metadata::type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_metadata_server.Metadata.type)
  return _internal_type();
}
inline void Metadata::_internal_set_type(::mavsdk::rpc::component_metadata_server::MetadataType value) {
  
  _impl_.type_ = value;
}
inline void Metadata::set_type(::mavsdk::rpc::component_metadata_server::MetadataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_metadata_server.Metadata.type)
}

// string json_metadata = 2;
inline void Metadata::clear_json_metadata() {
  _impl_.json_metadata_.ClearToEmpty();
}
inline const std::string& Metadata::json_metadata() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_metadata_server.Metadata.json_metadata)
  return _internal_json_metadata();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Metadata::set_json_metadata(ArgT0&& arg0, ArgT... args) {
 
 _impl_.json_metadata_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_metadata_server.Metadata.json_metadata)
}
inline std::string* Metadata::mutable_json_metadata() {
  std::string* _s = _internal_mutable_json_metadata();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_metadata_server.Metadata.json_metadata)
  return _s;
}
inline const std::string& Metadata::_internal_json_metadata() const {
  return _impl_.json_metadata_.Get();
}
inline void Metadata::_internal_set_json_metadata(const std::string& value) {
  
  _impl_.json_metadata_.Set(value, GetArenaForAllocation());
}
inline std::string* Metadata::_internal_mutable_json_metadata() {
  
  return _impl_.json_metadata_.Mutable(GetArenaForAllocation());
}
inline std::string* Metadata::release_json_metadata() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_metadata_server.Metadata.json_metadata)
  return _impl_.json_metadata_.Release();
}
inline void Metadata::set_allocated_json_metadata(std::string* json_metadata) {
  if (json_metadata != nullptr) {
    
  } else {
    
  }
  _impl_.json_metadata_.SetAllocated(json_metadata, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.json_metadata_.IsDefault()) {
    _impl_.json_metadata_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_metadata_server.Metadata.json_metadata)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace component_metadata_server
}  // namespace rpc
}  // namespace mavsdk

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::mavsdk::rpc::component_metadata_server::MetadataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::component_metadata_server::MetadataType>() {
  return ::mavsdk::rpc::component_metadata_server::MetadataType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_component_5fmetadata_5fserver_2fcomponent_5fmetadata_5fserver_2eproto
