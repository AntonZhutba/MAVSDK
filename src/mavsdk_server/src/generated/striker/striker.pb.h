// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: striker/striker.proto
// Protobuf C++ Version: 5.29.2

#ifndef striker_2fstriker_2eproto_2epb_2eh
#define striker_2fstriker_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_striker_2fstriker_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_striker_2fstriker_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_striker_2fstriker_2eproto;
namespace mavsdk {
namespace rpc {
namespace striker {
class ActuatorServosStatus;
struct ActuatorServosStatusDefaultTypeInternal;
extern ActuatorServosStatusDefaultTypeInternal _ActuatorServosStatus_default_instance_;
class ActuatorServosStatusResponse;
struct ActuatorServosStatusResponseDefaultTypeInternal;
extern ActuatorServosStatusResponseDefaultTypeInternal _ActuatorServosStatusResponse_default_instance_;
class AvailableMode;
struct AvailableModeDefaultTypeInternal;
extern AvailableModeDefaultTypeInternal _AvailableMode_default_instance_;
class AvailableModesResponse;
struct AvailableModesResponseDefaultTypeInternal;
extern AvailableModesResponseDefaultTypeInternal _AvailableModesResponse_default_instance_;
class BatteryVoltages;
struct BatteryVoltagesDefaultTypeInternal;
extern BatteryVoltagesDefaultTypeInternal _BatteryVoltages_default_instance_;
class BatteryVoltagesResponse;
struct BatteryVoltagesResponseDefaultTypeInternal;
extern BatteryVoltagesResponseDefaultTypeInternal _BatteryVoltagesResponse_default_instance_;
class CaaConfidenceLevel;
struct CaaConfidenceLevelDefaultTypeInternal;
extern CaaConfidenceLevelDefaultTypeInternal _CaaConfidenceLevel_default_instance_;
class CaaConfidenceLevelResponse;
struct CaaConfidenceLevelResponseDefaultTypeInternal;
extern CaaConfidenceLevelResponseDefaultTypeInternal _CaaConfidenceLevelResponse_default_instance_;
class Heartbeat;
struct HeartbeatDefaultTypeInternal;
extern HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;
class HeartbeatResponse;
struct HeartbeatResponseDefaultTypeInternal;
extern HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;
class Magnitometer;
struct MagnitometerDefaultTypeInternal;
extern MagnitometerDefaultTypeInternal _Magnitometer_default_instance_;
class MagnitometerResponse;
struct MagnitometerResponseDefaultTypeInternal;
extern MagnitometerResponseDefaultTypeInternal _MagnitometerResponse_default_instance_;
class RcChannel;
struct RcChannelDefaultTypeInternal;
extern RcChannelDefaultTypeInternal _RcChannel_default_instance_;
class RcChannelResponse;
struct RcChannelResponseDefaultTypeInternal;
extern RcChannelResponseDefaultTypeInternal _RcChannelResponse_default_instance_;
class RequestAvailableModesRequest;
struct RequestAvailableModesRequestDefaultTypeInternal;
extern RequestAvailableModesRequestDefaultTypeInternal _RequestAvailableModesRequest_default_instance_;
class RequestAvailableModesResponse;
struct RequestAvailableModesResponseDefaultTypeInternal;
extern RequestAvailableModesResponseDefaultTypeInternal _RequestAvailableModesResponse_default_instance_;
class SetManualFlightModeRequest;
struct SetManualFlightModeRequestDefaultTypeInternal;
extern SetManualFlightModeRequestDefaultTypeInternal _SetManualFlightModeRequest_default_instance_;
class SetManualFlightModeResponse;
struct SetManualFlightModeResponseDefaultTypeInternal;
extern SetManualFlightModeResponseDefaultTypeInternal _SetManualFlightModeResponse_default_instance_;
class SetRateActuatorServosStatusRequest;
struct SetRateActuatorServosStatusRequestDefaultTypeInternal;
extern SetRateActuatorServosStatusRequestDefaultTypeInternal _SetRateActuatorServosStatusRequest_default_instance_;
class SetRateActuatorServosStatusResponse;
struct SetRateActuatorServosStatusResponseDefaultTypeInternal;
extern SetRateActuatorServosStatusResponseDefaultTypeInternal _SetRateActuatorServosStatusResponse_default_instance_;
class SetRateCaaConfidenceLevelRequest;
struct SetRateCaaConfidenceLevelRequestDefaultTypeInternal;
extern SetRateCaaConfidenceLevelRequestDefaultTypeInternal _SetRateCaaConfidenceLevelRequest_default_instance_;
class SetRateCaaConfidenceLevelResponse;
struct SetRateCaaConfidenceLevelResponseDefaultTypeInternal;
extern SetRateCaaConfidenceLevelResponseDefaultTypeInternal _SetRateCaaConfidenceLevelResponse_default_instance_;
class StrikerResult;
struct StrikerResultDefaultTypeInternal;
extern StrikerResultDefaultTypeInternal _StrikerResult_default_instance_;
class SubscribeActuatorServosStatusRequest;
struct SubscribeActuatorServosStatusRequestDefaultTypeInternal;
extern SubscribeActuatorServosStatusRequestDefaultTypeInternal _SubscribeActuatorServosStatusRequest_default_instance_;
class SubscribeAvailableModesRequest;
struct SubscribeAvailableModesRequestDefaultTypeInternal;
extern SubscribeAvailableModesRequestDefaultTypeInternal _SubscribeAvailableModesRequest_default_instance_;
class SubscribeBatteryVoltagesRequest;
struct SubscribeBatteryVoltagesRequestDefaultTypeInternal;
extern SubscribeBatteryVoltagesRequestDefaultTypeInternal _SubscribeBatteryVoltagesRequest_default_instance_;
class SubscribeCaaConfidenceLevelRequest;
struct SubscribeCaaConfidenceLevelRequestDefaultTypeInternal;
extern SubscribeCaaConfidenceLevelRequestDefaultTypeInternal _SubscribeCaaConfidenceLevelRequest_default_instance_;
class SubscribeHeartbeatRequest;
struct SubscribeHeartbeatRequestDefaultTypeInternal;
extern SubscribeHeartbeatRequestDefaultTypeInternal _SubscribeHeartbeatRequest_default_instance_;
class SubscribeMagnitometerRequest;
struct SubscribeMagnitometerRequestDefaultTypeInternal;
extern SubscribeMagnitometerRequestDefaultTypeInternal _SubscribeMagnitometerRequest_default_instance_;
class SubscribeRcChannelRequest;
struct SubscribeRcChannelRequestDefaultTypeInternal;
extern SubscribeRcChannelRequestDefaultTypeInternal _SubscribeRcChannelRequest_default_instance_;
class SubscribeSysStatusRequest;
struct SubscribeSysStatusRequestDefaultTypeInternal;
extern SubscribeSysStatusRequestDefaultTypeInternal _SubscribeSysStatusRequest_default_instance_;
class SysStatus;
struct SysStatusDefaultTypeInternal;
extern SysStatusDefaultTypeInternal _SysStatus_default_instance_;
class SysStatusResponse;
struct SysStatusResponseDefaultTypeInternal;
extern SysStatusResponseDefaultTypeInternal _SysStatusResponse_default_instance_;
}  // namespace striker
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace striker {
enum StrikerResult_Result : int {
  StrikerResult_Result_RESULT_UNKNOWN = 0,
  StrikerResult_Result_RESULT_SUCCESS = 1,
  StrikerResult_Result_RESULT_NO_SYSTEM = 2,
  StrikerResult_Result_RESULT_CONNECTION_ERROR = 3,
  StrikerResult_Result_RESULT_BUSY = 4,
  StrikerResult_Result_RESULT_COMMAND_DENIED = 5,
  StrikerResult_Result_RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN = 6,
  StrikerResult_Result_RESULT_COMMAND_DENIED_NOT_LANDED = 7,
  StrikerResult_Result_RESULT_TIMEOUT = 8,
  StrikerResult_Result_RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN = 9,
  StrikerResult_Result_RESULT_NO_VTOL_TRANSITION_SUPPORT = 10,
  StrikerResult_Result_RESULT_PARAMETER_ERROR = 11,
  StrikerResult_Result_RESULT_UNSUPPORTED = 12,
  StrikerResult_Result_RESULT_FAILED = 13,
  StrikerResult_Result_RESULT_INVALID_ARGUMENT = 14,
  StrikerResult_Result_StrikerResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StrikerResult_Result_StrikerResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StrikerResult_Result_IsValid(int value);
extern const uint32_t StrikerResult_Result_internal_data_[];
constexpr StrikerResult_Result StrikerResult_Result_Result_MIN = static_cast<StrikerResult_Result>(0);
constexpr StrikerResult_Result StrikerResult_Result_Result_MAX = static_cast<StrikerResult_Result>(14);
constexpr int StrikerResult_Result_Result_ARRAYSIZE = 14 + 1;
const ::google::protobuf::EnumDescriptor*
StrikerResult_Result_descriptor();
template <typename T>
const std::string& StrikerResult_Result_Name(T value) {
  static_assert(std::is_same<T, StrikerResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return StrikerResult_Result_Name(static_cast<StrikerResult_Result>(value));
}
template <>
inline const std::string& StrikerResult_Result_Name(StrikerResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StrikerResult_Result_descriptor,
                                                 0, 14>(
      static_cast<int>(value));
}
inline bool StrikerResult_Result_Parse(absl::string_view name, StrikerResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StrikerResult_Result>(
      StrikerResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SysStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SysStatus) */ {
 public:
  inline SysStatus() : SysStatus(nullptr) {}
  ~SysStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SysStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SysStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SysStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline SysStatus(const SysStatus& from) : SysStatus(nullptr, from) {}
  inline SysStatus(SysStatus&& from) noexcept
      : SysStatus(nullptr, std::move(from)) {}
  inline SysStatus& operator=(const SysStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysStatus& operator=(SysStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SysStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SysStatus* internal_default_instance() {
    return reinterpret_cast<const SysStatus*>(
        &_SysStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SysStatus& a, SysStatus& b) { a.Swap(&b); }
  inline void Swap(SysStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SysStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SysStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SysStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SysStatus& from) { SysStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SysStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SysStatus"; }

 protected:
  explicit SysStatus(::google::protobuf::Arena* arena);
  SysStatus(::google::protobuf::Arena* arena, const SysStatus& from);
  SysStatus(::google::protobuf::Arena* arena, SysStatus&& from) noexcept
      : SysStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOnboardControlSensorsPresentFieldNumber = 1,
    kOnboardControlSensorsEnabledFieldNumber = 2,
    kOnboardControlSensorsHealthFieldNumber = 3,
    kLoadFieldNumber = 4,
    kVoltageBatteryFieldNumber = 5,
    kCurrentBatteryFieldNumber = 6,
    kDropRateCommFieldNumber = 7,
    kErrorsCommFieldNumber = 8,
    kErrorsCount1FieldNumber = 9,
    kErrorsCount2FieldNumber = 10,
    kErrorsCount3FieldNumber = 11,
    kErrorsCount4FieldNumber = 12,
    kBatteryRemainingFieldNumber = 13,
    kOnboardControlSensorsPresentExtendedFieldNumber = 14,
    kOnboardControlSensorsEnabledExtendedFieldNumber = 15,
    kOnboardControlSensorsHealthExtendedFieldNumber = 16,
  };
  // uint32 onboard_control_sensors_present = 1;
  void clear_onboard_control_sensors_present() ;
  ::uint32_t onboard_control_sensors_present() const;
  void set_onboard_control_sensors_present(::uint32_t value);

  private:
  ::uint32_t _internal_onboard_control_sensors_present() const;
  void _internal_set_onboard_control_sensors_present(::uint32_t value);

  public:
  // uint32 onboard_control_sensors_enabled = 2;
  void clear_onboard_control_sensors_enabled() ;
  ::uint32_t onboard_control_sensors_enabled() const;
  void set_onboard_control_sensors_enabled(::uint32_t value);

  private:
  ::uint32_t _internal_onboard_control_sensors_enabled() const;
  void _internal_set_onboard_control_sensors_enabled(::uint32_t value);

  public:
  // uint32 onboard_control_sensors_health = 3;
  void clear_onboard_control_sensors_health() ;
  ::uint32_t onboard_control_sensors_health() const;
  void set_onboard_control_sensors_health(::uint32_t value);

  private:
  ::uint32_t _internal_onboard_control_sensors_health() const;
  void _internal_set_onboard_control_sensors_health(::uint32_t value);

  public:
  // uint32 load = 4;
  void clear_load() ;
  ::uint32_t load() const;
  void set_load(::uint32_t value);

  private:
  ::uint32_t _internal_load() const;
  void _internal_set_load(::uint32_t value);

  public:
  // uint32 voltage_battery = 5;
  void clear_voltage_battery() ;
  ::uint32_t voltage_battery() const;
  void set_voltage_battery(::uint32_t value);

  private:
  ::uint32_t _internal_voltage_battery() const;
  void _internal_set_voltage_battery(::uint32_t value);

  public:
  // int32 current_battery = 6;
  void clear_current_battery() ;
  ::int32_t current_battery() const;
  void set_current_battery(::int32_t value);

  private:
  ::int32_t _internal_current_battery() const;
  void _internal_set_current_battery(::int32_t value);

  public:
  // uint32 drop_rate_comm = 7;
  void clear_drop_rate_comm() ;
  ::uint32_t drop_rate_comm() const;
  void set_drop_rate_comm(::uint32_t value);

  private:
  ::uint32_t _internal_drop_rate_comm() const;
  void _internal_set_drop_rate_comm(::uint32_t value);

  public:
  // uint32 errors_comm = 8;
  void clear_errors_comm() ;
  ::uint32_t errors_comm() const;
  void set_errors_comm(::uint32_t value);

  private:
  ::uint32_t _internal_errors_comm() const;
  void _internal_set_errors_comm(::uint32_t value);

  public:
  // uint32 errors_count1 = 9;
  void clear_errors_count1() ;
  ::uint32_t errors_count1() const;
  void set_errors_count1(::uint32_t value);

  private:
  ::uint32_t _internal_errors_count1() const;
  void _internal_set_errors_count1(::uint32_t value);

  public:
  // uint32 errors_count2 = 10;
  void clear_errors_count2() ;
  ::uint32_t errors_count2() const;
  void set_errors_count2(::uint32_t value);

  private:
  ::uint32_t _internal_errors_count2() const;
  void _internal_set_errors_count2(::uint32_t value);

  public:
  // uint32 errors_count3 = 11;
  void clear_errors_count3() ;
  ::uint32_t errors_count3() const;
  void set_errors_count3(::uint32_t value);

  private:
  ::uint32_t _internal_errors_count3() const;
  void _internal_set_errors_count3(::uint32_t value);

  public:
  // uint32 errors_count4 = 12;
  void clear_errors_count4() ;
  ::uint32_t errors_count4() const;
  void set_errors_count4(::uint32_t value);

  private:
  ::uint32_t _internal_errors_count4() const;
  void _internal_set_errors_count4(::uint32_t value);

  public:
  // int32 battery_remaining = 13;
  void clear_battery_remaining() ;
  ::int32_t battery_remaining() const;
  void set_battery_remaining(::int32_t value);

  private:
  ::int32_t _internal_battery_remaining() const;
  void _internal_set_battery_remaining(::int32_t value);

  public:
  // uint32 onboard_control_sensors_present_extended = 14;
  void clear_onboard_control_sensors_present_extended() ;
  ::uint32_t onboard_control_sensors_present_extended() const;
  void set_onboard_control_sensors_present_extended(::uint32_t value);

  private:
  ::uint32_t _internal_onboard_control_sensors_present_extended() const;
  void _internal_set_onboard_control_sensors_present_extended(::uint32_t value);

  public:
  // uint32 onboard_control_sensors_enabled_extended = 15;
  void clear_onboard_control_sensors_enabled_extended() ;
  ::uint32_t onboard_control_sensors_enabled_extended() const;
  void set_onboard_control_sensors_enabled_extended(::uint32_t value);

  private:
  ::uint32_t _internal_onboard_control_sensors_enabled_extended() const;
  void _internal_set_onboard_control_sensors_enabled_extended(::uint32_t value);

  public:
  // uint32 onboard_control_sensors_health_extended = 16;
  void clear_onboard_control_sensors_health_extended() ;
  ::uint32_t onboard_control_sensors_health_extended() const;
  void set_onboard_control_sensors_health_extended(::uint32_t value);

  private:
  ::uint32_t _internal_onboard_control_sensors_health_extended() const;
  void _internal_set_onboard_control_sensors_health_extended(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SysStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SysStatus& from_msg);
    ::uint32_t onboard_control_sensors_present_;
    ::uint32_t onboard_control_sensors_enabled_;
    ::uint32_t onboard_control_sensors_health_;
    ::uint32_t load_;
    ::uint32_t voltage_battery_;
    ::int32_t current_battery_;
    ::uint32_t drop_rate_comm_;
    ::uint32_t errors_comm_;
    ::uint32_t errors_count1_;
    ::uint32_t errors_count2_;
    ::uint32_t errors_count3_;
    ::uint32_t errors_count4_;
    ::int32_t battery_remaining_;
    ::uint32_t onboard_control_sensors_present_extended_;
    ::uint32_t onboard_control_sensors_enabled_extended_;
    ::uint32_t onboard_control_sensors_health_extended_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeSysStatusRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeSysStatusRequest) */ {
 public:
  inline SubscribeSysStatusRequest() : SubscribeSysStatusRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeSysStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeSysStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeSysStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeSysStatusRequest(const SubscribeSysStatusRequest& from) : SubscribeSysStatusRequest(nullptr, from) {}
  inline SubscribeSysStatusRequest(SubscribeSysStatusRequest&& from) noexcept
      : SubscribeSysStatusRequest(nullptr, std::move(from)) {}
  inline SubscribeSysStatusRequest& operator=(const SubscribeSysStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeSysStatusRequest& operator=(SubscribeSysStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeSysStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeSysStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeSysStatusRequest*>(
        &_SubscribeSysStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubscribeSysStatusRequest& a, SubscribeSysStatusRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeSysStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeSysStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeSysStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeSysStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeSysStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeSysStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeSysStatusRequest"; }

 protected:
  explicit SubscribeSysStatusRequest(::google::protobuf::Arena* arena);
  SubscribeSysStatusRequest(::google::protobuf::Arena* arena, const SubscribeSysStatusRequest& from);
  SubscribeSysStatusRequest(::google::protobuf::Arena* arena, SubscribeSysStatusRequest&& from) noexcept
      : SubscribeSysStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeSysStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeSysStatusRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeRcChannelRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeRcChannelRequest) */ {
 public:
  inline SubscribeRcChannelRequest() : SubscribeRcChannelRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeRcChannelRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeRcChannelRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeRcChannelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeRcChannelRequest(const SubscribeRcChannelRequest& from) : SubscribeRcChannelRequest(nullptr, from) {}
  inline SubscribeRcChannelRequest(SubscribeRcChannelRequest&& from) noexcept
      : SubscribeRcChannelRequest(nullptr, std::move(from)) {}
  inline SubscribeRcChannelRequest& operator=(const SubscribeRcChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRcChannelRequest& operator=(SubscribeRcChannelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeRcChannelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeRcChannelRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRcChannelRequest*>(
        &_SubscribeRcChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SubscribeRcChannelRequest& a, SubscribeRcChannelRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeRcChannelRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeRcChannelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeRcChannelRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeRcChannelRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeRcChannelRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeRcChannelRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeRcChannelRequest"; }

 protected:
  explicit SubscribeRcChannelRequest(::google::protobuf::Arena* arena);
  SubscribeRcChannelRequest(::google::protobuf::Arena* arena, const SubscribeRcChannelRequest& from);
  SubscribeRcChannelRequest(::google::protobuf::Arena* arena, SubscribeRcChannelRequest&& from) noexcept
      : SubscribeRcChannelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeRcChannelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeRcChannelRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeMagnitometerRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeMagnitometerRequest) */ {
 public:
  inline SubscribeMagnitometerRequest() : SubscribeMagnitometerRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeMagnitometerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeMagnitometerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeMagnitometerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeMagnitometerRequest(const SubscribeMagnitometerRequest& from) : SubscribeMagnitometerRequest(nullptr, from) {}
  inline SubscribeMagnitometerRequest(SubscribeMagnitometerRequest&& from) noexcept
      : SubscribeMagnitometerRequest(nullptr, std::move(from)) {}
  inline SubscribeMagnitometerRequest& operator=(const SubscribeMagnitometerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeMagnitometerRequest& operator=(SubscribeMagnitometerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeMagnitometerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeMagnitometerRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeMagnitometerRequest*>(
        &_SubscribeMagnitometerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SubscribeMagnitometerRequest& a, SubscribeMagnitometerRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeMagnitometerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeMagnitometerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeMagnitometerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeMagnitometerRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeMagnitometerRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeMagnitometerRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeMagnitometerRequest"; }

 protected:
  explicit SubscribeMagnitometerRequest(::google::protobuf::Arena* arena);
  SubscribeMagnitometerRequest(::google::protobuf::Arena* arena, const SubscribeMagnitometerRequest& from);
  SubscribeMagnitometerRequest(::google::protobuf::Arena* arena, SubscribeMagnitometerRequest&& from) noexcept
      : SubscribeMagnitometerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeMagnitometerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeMagnitometerRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeHeartbeatRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeHeartbeatRequest) */ {
 public:
  inline SubscribeHeartbeatRequest() : SubscribeHeartbeatRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeHeartbeatRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeHeartbeatRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeHeartbeatRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeHeartbeatRequest(const SubscribeHeartbeatRequest& from) : SubscribeHeartbeatRequest(nullptr, from) {}
  inline SubscribeHeartbeatRequest(SubscribeHeartbeatRequest&& from) noexcept
      : SubscribeHeartbeatRequest(nullptr, std::move(from)) {}
  inline SubscribeHeartbeatRequest& operator=(const SubscribeHeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeHeartbeatRequest& operator=(SubscribeHeartbeatRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeHeartbeatRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeHeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeHeartbeatRequest*>(
        &_SubscribeHeartbeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SubscribeHeartbeatRequest& a, SubscribeHeartbeatRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeHeartbeatRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeHeartbeatRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeHeartbeatRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeHeartbeatRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeHeartbeatRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeHeartbeatRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeHeartbeatRequest"; }

 protected:
  explicit SubscribeHeartbeatRequest(::google::protobuf::Arena* arena);
  SubscribeHeartbeatRequest(::google::protobuf::Arena* arena, const SubscribeHeartbeatRequest& from);
  SubscribeHeartbeatRequest(::google::protobuf::Arena* arena, SubscribeHeartbeatRequest&& from) noexcept
      : SubscribeHeartbeatRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeHeartbeatRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeHeartbeatRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCaaConfidenceLevelRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeCaaConfidenceLevelRequest) */ {
 public:
  inline SubscribeCaaConfidenceLevelRequest() : SubscribeCaaConfidenceLevelRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeCaaConfidenceLevelRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeCaaConfidenceLevelRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeCaaConfidenceLevelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeCaaConfidenceLevelRequest(const SubscribeCaaConfidenceLevelRequest& from) : SubscribeCaaConfidenceLevelRequest(nullptr, from) {}
  inline SubscribeCaaConfidenceLevelRequest(SubscribeCaaConfidenceLevelRequest&& from) noexcept
      : SubscribeCaaConfidenceLevelRequest(nullptr, std::move(from)) {}
  inline SubscribeCaaConfidenceLevelRequest& operator=(const SubscribeCaaConfidenceLevelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCaaConfidenceLevelRequest& operator=(SubscribeCaaConfidenceLevelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCaaConfidenceLevelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCaaConfidenceLevelRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCaaConfidenceLevelRequest*>(
        &_SubscribeCaaConfidenceLevelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SubscribeCaaConfidenceLevelRequest& a, SubscribeCaaConfidenceLevelRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeCaaConfidenceLevelRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCaaConfidenceLevelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCaaConfidenceLevelRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeCaaConfidenceLevelRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCaaConfidenceLevelRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCaaConfidenceLevelRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeCaaConfidenceLevelRequest"; }

 protected:
  explicit SubscribeCaaConfidenceLevelRequest(::google::protobuf::Arena* arena);
  SubscribeCaaConfidenceLevelRequest(::google::protobuf::Arena* arena, const SubscribeCaaConfidenceLevelRequest& from);
  SubscribeCaaConfidenceLevelRequest(::google::protobuf::Arena* arena, SubscribeCaaConfidenceLevelRequest&& from) noexcept
      : SubscribeCaaConfidenceLevelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeCaaConfidenceLevelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeCaaConfidenceLevelRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeBatteryVoltagesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeBatteryVoltagesRequest) */ {
 public:
  inline SubscribeBatteryVoltagesRequest() : SubscribeBatteryVoltagesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeBatteryVoltagesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeBatteryVoltagesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeBatteryVoltagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeBatteryVoltagesRequest(const SubscribeBatteryVoltagesRequest& from) : SubscribeBatteryVoltagesRequest(nullptr, from) {}
  inline SubscribeBatteryVoltagesRequest(SubscribeBatteryVoltagesRequest&& from) noexcept
      : SubscribeBatteryVoltagesRequest(nullptr, std::move(from)) {}
  inline SubscribeBatteryVoltagesRequest& operator=(const SubscribeBatteryVoltagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeBatteryVoltagesRequest& operator=(SubscribeBatteryVoltagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeBatteryVoltagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeBatteryVoltagesRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeBatteryVoltagesRequest*>(
        &_SubscribeBatteryVoltagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SubscribeBatteryVoltagesRequest& a, SubscribeBatteryVoltagesRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeBatteryVoltagesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeBatteryVoltagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeBatteryVoltagesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeBatteryVoltagesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeBatteryVoltagesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeBatteryVoltagesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeBatteryVoltagesRequest"; }

 protected:
  explicit SubscribeBatteryVoltagesRequest(::google::protobuf::Arena* arena);
  SubscribeBatteryVoltagesRequest(::google::protobuf::Arena* arena, const SubscribeBatteryVoltagesRequest& from);
  SubscribeBatteryVoltagesRequest(::google::protobuf::Arena* arena, SubscribeBatteryVoltagesRequest&& from) noexcept
      : SubscribeBatteryVoltagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeBatteryVoltagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeBatteryVoltagesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeAvailableModesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeAvailableModesRequest) */ {
 public:
  inline SubscribeAvailableModesRequest() : SubscribeAvailableModesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeAvailableModesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeAvailableModesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeAvailableModesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeAvailableModesRequest(const SubscribeAvailableModesRequest& from) : SubscribeAvailableModesRequest(nullptr, from) {}
  inline SubscribeAvailableModesRequest(SubscribeAvailableModesRequest&& from) noexcept
      : SubscribeAvailableModesRequest(nullptr, std::move(from)) {}
  inline SubscribeAvailableModesRequest& operator=(const SubscribeAvailableModesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeAvailableModesRequest& operator=(SubscribeAvailableModesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeAvailableModesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeAvailableModesRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeAvailableModesRequest*>(
        &_SubscribeAvailableModesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SubscribeAvailableModesRequest& a, SubscribeAvailableModesRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeAvailableModesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeAvailableModesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeAvailableModesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeAvailableModesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeAvailableModesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeAvailableModesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeAvailableModesRequest"; }

 protected:
  explicit SubscribeAvailableModesRequest(::google::protobuf::Arena* arena);
  SubscribeAvailableModesRequest(::google::protobuf::Arena* arena, const SubscribeAvailableModesRequest& from);
  SubscribeAvailableModesRequest(::google::protobuf::Arena* arena, SubscribeAvailableModesRequest&& from) noexcept
      : SubscribeAvailableModesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeAvailableModesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeAvailableModesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SubscribeActuatorServosStatusRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SubscribeActuatorServosStatusRequest) */ {
 public:
  inline SubscribeActuatorServosStatusRequest() : SubscribeActuatorServosStatusRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeActuatorServosStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeActuatorServosStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeActuatorServosStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeActuatorServosStatusRequest(const SubscribeActuatorServosStatusRequest& from) : SubscribeActuatorServosStatusRequest(nullptr, from) {}
  inline SubscribeActuatorServosStatusRequest(SubscribeActuatorServosStatusRequest&& from) noexcept
      : SubscribeActuatorServosStatusRequest(nullptr, std::move(from)) {}
  inline SubscribeActuatorServosStatusRequest& operator=(const SubscribeActuatorServosStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeActuatorServosStatusRequest& operator=(SubscribeActuatorServosStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeActuatorServosStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeActuatorServosStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeActuatorServosStatusRequest*>(
        &_SubscribeActuatorServosStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SubscribeActuatorServosStatusRequest& a, SubscribeActuatorServosStatusRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeActuatorServosStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeActuatorServosStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeActuatorServosStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeActuatorServosStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeActuatorServosStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeActuatorServosStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SubscribeActuatorServosStatusRequest"; }

 protected:
  explicit SubscribeActuatorServosStatusRequest(::google::protobuf::Arena* arena);
  SubscribeActuatorServosStatusRequest(::google::protobuf::Arena* arena, const SubscribeActuatorServosStatusRequest& from);
  SubscribeActuatorServosStatusRequest(::google::protobuf::Arena* arena, SubscribeActuatorServosStatusRequest&& from) noexcept
      : SubscribeActuatorServosStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SubscribeActuatorServosStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeActuatorServosStatusRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class StrikerResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.StrikerResult) */ {
 public:
  inline StrikerResult() : StrikerResult(nullptr) {}
  ~StrikerResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StrikerResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StrikerResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StrikerResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline StrikerResult(const StrikerResult& from) : StrikerResult(nullptr, from) {}
  inline StrikerResult(StrikerResult&& from) noexcept
      : StrikerResult(nullptr, std::move(from)) {}
  inline StrikerResult& operator=(const StrikerResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline StrikerResult& operator=(StrikerResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StrikerResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const StrikerResult* internal_default_instance() {
    return reinterpret_cast<const StrikerResult*>(
        &_StrikerResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(StrikerResult& a, StrikerResult& b) { a.Swap(&b); }
  inline void Swap(StrikerResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StrikerResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StrikerResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StrikerResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StrikerResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StrikerResult& from) { StrikerResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StrikerResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.StrikerResult"; }

 protected:
  explicit StrikerResult(::google::protobuf::Arena* arena);
  StrikerResult(::google::protobuf::Arena* arena, const StrikerResult& from);
  StrikerResult(::google::protobuf::Arena* arena, StrikerResult&& from) noexcept
      : StrikerResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Result = StrikerResult_Result;
  static constexpr Result RESULT_UNKNOWN = StrikerResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = StrikerResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = StrikerResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_CONNECTION_ERROR = StrikerResult_Result_RESULT_CONNECTION_ERROR;
  static constexpr Result RESULT_BUSY = StrikerResult_Result_RESULT_BUSY;
  static constexpr Result RESULT_COMMAND_DENIED = StrikerResult_Result_RESULT_COMMAND_DENIED;
  static constexpr Result RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN = StrikerResult_Result_RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN;
  static constexpr Result RESULT_COMMAND_DENIED_NOT_LANDED = StrikerResult_Result_RESULT_COMMAND_DENIED_NOT_LANDED;
  static constexpr Result RESULT_TIMEOUT = StrikerResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN = StrikerResult_Result_RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN;
  static constexpr Result RESULT_NO_VTOL_TRANSITION_SUPPORT = StrikerResult_Result_RESULT_NO_VTOL_TRANSITION_SUPPORT;
  static constexpr Result RESULT_PARAMETER_ERROR = StrikerResult_Result_RESULT_PARAMETER_ERROR;
  static constexpr Result RESULT_UNSUPPORTED = StrikerResult_Result_RESULT_UNSUPPORTED;
  static constexpr Result RESULT_FAILED = StrikerResult_Result_RESULT_FAILED;
  static constexpr Result RESULT_INVALID_ARGUMENT = StrikerResult_Result_RESULT_INVALID_ARGUMENT;
  static inline bool Result_IsValid(int value) {
    return StrikerResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = StrikerResult_Result_Result_MIN;
  static constexpr Result Result_MAX = StrikerResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = StrikerResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return StrikerResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return StrikerResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return StrikerResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.striker.StrikerResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::striker::StrikerResult_Result result() const;
  void set_result(::mavsdk::rpc::striker::StrikerResult_Result value);

  private:
  ::mavsdk::rpc::striker::StrikerResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::striker::StrikerResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.StrikerResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StrikerResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SetRateCaaConfidenceLevelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SetRateCaaConfidenceLevelRequest) */ {
 public:
  inline SetRateCaaConfidenceLevelRequest() : SetRateCaaConfidenceLevelRequest(nullptr) {}
  ~SetRateCaaConfidenceLevelRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetRateCaaConfidenceLevelRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetRateCaaConfidenceLevelRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetRateCaaConfidenceLevelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetRateCaaConfidenceLevelRequest(const SetRateCaaConfidenceLevelRequest& from) : SetRateCaaConfidenceLevelRequest(nullptr, from) {}
  inline SetRateCaaConfidenceLevelRequest(SetRateCaaConfidenceLevelRequest&& from) noexcept
      : SetRateCaaConfidenceLevelRequest(nullptr, std::move(from)) {}
  inline SetRateCaaConfidenceLevelRequest& operator=(const SetRateCaaConfidenceLevelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRateCaaConfidenceLevelRequest& operator=(SetRateCaaConfidenceLevelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRateCaaConfidenceLevelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRateCaaConfidenceLevelRequest* internal_default_instance() {
    return reinterpret_cast<const SetRateCaaConfidenceLevelRequest*>(
        &_SetRateCaaConfidenceLevelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(SetRateCaaConfidenceLevelRequest& a, SetRateCaaConfidenceLevelRequest& b) { a.Swap(&b); }
  inline void Swap(SetRateCaaConfidenceLevelRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRateCaaConfidenceLevelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRateCaaConfidenceLevelRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetRateCaaConfidenceLevelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRateCaaConfidenceLevelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetRateCaaConfidenceLevelRequest& from) { SetRateCaaConfidenceLevelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetRateCaaConfidenceLevelRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SetRateCaaConfidenceLevelRequest"; }

 protected:
  explicit SetRateCaaConfidenceLevelRequest(::google::protobuf::Arena* arena);
  SetRateCaaConfidenceLevelRequest(::google::protobuf::Arena* arena, const SetRateCaaConfidenceLevelRequest& from);
  SetRateCaaConfidenceLevelRequest(::google::protobuf::Arena* arena, SetRateCaaConfidenceLevelRequest&& from) noexcept
      : SetRateCaaConfidenceLevelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRateHzFieldNumber = 1,
  };
  // double rate_hz = 1;
  void clear_rate_hz() ;
  double rate_hz() const;
  void set_rate_hz(double value);

  private:
  double _internal_rate_hz() const;
  void _internal_set_rate_hz(double value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SetRateCaaConfidenceLevelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetRateCaaConfidenceLevelRequest& from_msg);
    double rate_hz_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SetRateActuatorServosStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SetRateActuatorServosStatusRequest) */ {
 public:
  inline SetRateActuatorServosStatusRequest() : SetRateActuatorServosStatusRequest(nullptr) {}
  ~SetRateActuatorServosStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetRateActuatorServosStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetRateActuatorServosStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetRateActuatorServosStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetRateActuatorServosStatusRequest(const SetRateActuatorServosStatusRequest& from) : SetRateActuatorServosStatusRequest(nullptr, from) {}
  inline SetRateActuatorServosStatusRequest(SetRateActuatorServosStatusRequest&& from) noexcept
      : SetRateActuatorServosStatusRequest(nullptr, std::move(from)) {}
  inline SetRateActuatorServosStatusRequest& operator=(const SetRateActuatorServosStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRateActuatorServosStatusRequest& operator=(SetRateActuatorServosStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRateActuatorServosStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRateActuatorServosStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetRateActuatorServosStatusRequest*>(
        &_SetRateActuatorServosStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SetRateActuatorServosStatusRequest& a, SetRateActuatorServosStatusRequest& b) { a.Swap(&b); }
  inline void Swap(SetRateActuatorServosStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRateActuatorServosStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRateActuatorServosStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetRateActuatorServosStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRateActuatorServosStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetRateActuatorServosStatusRequest& from) { SetRateActuatorServosStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetRateActuatorServosStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SetRateActuatorServosStatusRequest"; }

 protected:
  explicit SetRateActuatorServosStatusRequest(::google::protobuf::Arena* arena);
  SetRateActuatorServosStatusRequest(::google::protobuf::Arena* arena, const SetRateActuatorServosStatusRequest& from);
  SetRateActuatorServosStatusRequest(::google::protobuf::Arena* arena, SetRateActuatorServosStatusRequest&& from) noexcept
      : SetRateActuatorServosStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRateHzFieldNumber = 1,
  };
  // double rate_hz = 1;
  void clear_rate_hz() ;
  double rate_hz() const;
  void set_rate_hz(double value);

  private:
  double _internal_rate_hz() const;
  void _internal_set_rate_hz(double value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SetRateActuatorServosStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetRateActuatorServosStatusRequest& from_msg);
    double rate_hz_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SetManualFlightModeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SetManualFlightModeRequest) */ {
 public:
  inline SetManualFlightModeRequest() : SetManualFlightModeRequest(nullptr) {}
  ~SetManualFlightModeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetManualFlightModeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetManualFlightModeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetManualFlightModeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetManualFlightModeRequest(const SetManualFlightModeRequest& from) : SetManualFlightModeRequest(nullptr, from) {}
  inline SetManualFlightModeRequest(SetManualFlightModeRequest&& from) noexcept
      : SetManualFlightModeRequest(nullptr, std::move(from)) {}
  inline SetManualFlightModeRequest& operator=(const SetManualFlightModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetManualFlightModeRequest& operator=(SetManualFlightModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetManualFlightModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetManualFlightModeRequest* internal_default_instance() {
    return reinterpret_cast<const SetManualFlightModeRequest*>(
        &_SetManualFlightModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SetManualFlightModeRequest& a, SetManualFlightModeRequest& b) { a.Swap(&b); }
  inline void Swap(SetManualFlightModeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetManualFlightModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetManualFlightModeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetManualFlightModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetManualFlightModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetManualFlightModeRequest& from) { SetManualFlightModeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetManualFlightModeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SetManualFlightModeRequest"; }

 protected:
  explicit SetManualFlightModeRequest(::google::protobuf::Arena* arena);
  SetManualFlightModeRequest(::google::protobuf::Arena* arena, const SetManualFlightModeRequest& from);
  SetManualFlightModeRequest(::google::protobuf::Arena* arena, SetManualFlightModeRequest&& from) noexcept
      : SetManualFlightModeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModeFieldNumber = 1,
    kCustomModeFieldNumber = 2,
    kCustomSubModeFieldNumber = 3,
  };
  // uint32 mode = 1;
  void clear_mode() ;
  ::uint32_t mode() const;
  void set_mode(::uint32_t value);

  private:
  ::uint32_t _internal_mode() const;
  void _internal_set_mode(::uint32_t value);

  public:
  // uint32 custom_mode = 2;
  void clear_custom_mode() ;
  ::uint32_t custom_mode() const;
  void set_custom_mode(::uint32_t value);

  private:
  ::uint32_t _internal_custom_mode() const;
  void _internal_set_custom_mode(::uint32_t value);

  public:
  // uint32 custom_sub_mode = 3;
  void clear_custom_sub_mode() ;
  ::uint32_t custom_sub_mode() const;
  void set_custom_sub_mode(::uint32_t value);

  private:
  ::uint32_t _internal_custom_sub_mode() const;
  void _internal_set_custom_sub_mode(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SetManualFlightModeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetManualFlightModeRequest& from_msg);
    ::uint32_t mode_;
    ::uint32_t custom_mode_;
    ::uint32_t custom_sub_mode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class RequestAvailableModesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.RequestAvailableModesRequest) */ {
 public:
  inline RequestAvailableModesRequest() : RequestAvailableModesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RequestAvailableModesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RequestAvailableModesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestAvailableModesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestAvailableModesRequest(const RequestAvailableModesRequest& from) : RequestAvailableModesRequest(nullptr, from) {}
  inline RequestAvailableModesRequest(RequestAvailableModesRequest&& from) noexcept
      : RequestAvailableModesRequest(nullptr, std::move(from)) {}
  inline RequestAvailableModesRequest& operator=(const RequestAvailableModesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestAvailableModesRequest& operator=(RequestAvailableModesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestAvailableModesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestAvailableModesRequest* internal_default_instance() {
    return reinterpret_cast<const RequestAvailableModesRequest*>(
        &_RequestAvailableModesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(RequestAvailableModesRequest& a, RequestAvailableModesRequest& b) { a.Swap(&b); }
  inline void Swap(RequestAvailableModesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestAvailableModesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestAvailableModesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RequestAvailableModesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RequestAvailableModesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RequestAvailableModesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.RequestAvailableModesRequest"; }

 protected:
  explicit RequestAvailableModesRequest(::google::protobuf::Arena* arena);
  RequestAvailableModesRequest(::google::protobuf::Arena* arena, const RequestAvailableModesRequest& from);
  RequestAvailableModesRequest(::google::protobuf::Arena* arena, RequestAvailableModesRequest&& from) noexcept
      : RequestAvailableModesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.RequestAvailableModesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestAvailableModesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class RcChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.RcChannel) */ {
 public:
  inline RcChannel() : RcChannel(nullptr) {}
  ~RcChannel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RcChannel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RcChannel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RcChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline RcChannel(const RcChannel& from) : RcChannel(nullptr, from) {}
  inline RcChannel(RcChannel&& from) noexcept
      : RcChannel(nullptr, std::move(from)) {}
  inline RcChannel& operator=(const RcChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline RcChannel& operator=(RcChannel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RcChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const RcChannel* internal_default_instance() {
    return reinterpret_cast<const RcChannel*>(
        &_RcChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(RcChannel& a, RcChannel& b) { a.Swap(&b); }
  inline void Swap(RcChannel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RcChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RcChannel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RcChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RcChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RcChannel& from) { RcChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RcChannel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.RcChannel"; }

 protected:
  explicit RcChannel(::google::protobuf::Arena* arena);
  RcChannel(::google::protobuf::Arena* arena, const RcChannel& from);
  RcChannel(::google::protobuf::Arena* arena, RcChannel&& from) noexcept
      : RcChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeBootMsFieldNumber = 1,
    kChan1RawFieldNumber = 2,
    kChan2RawFieldNumber = 3,
    kChan3RawFieldNumber = 4,
    kChan4RawFieldNumber = 5,
    kChan5RawFieldNumber = 6,
    kChan6RawFieldNumber = 7,
    kChan7RawFieldNumber = 8,
    kChan8RawFieldNumber = 9,
    kChan9RawFieldNumber = 10,
    kChan10RawFieldNumber = 11,
    kChan11RawFieldNumber = 12,
    kChan12RawFieldNumber = 13,
    kChan13RawFieldNumber = 14,
    kChan14RawFieldNumber = 15,
    kChan15RawFieldNumber = 16,
    kChan16RawFieldNumber = 17,
    kChan17RawFieldNumber = 18,
    kChan18RawFieldNumber = 19,
    kChancountFieldNumber = 20,
    kRssiFieldNumber = 21,
  };
  // uint32 time_boot_ms = 1 [(.mavsdk.options.default_value) = "0"];
  void clear_time_boot_ms() ;
  ::uint32_t time_boot_ms() const;
  void set_time_boot_ms(::uint32_t value);

  private:
  ::uint32_t _internal_time_boot_ms() const;
  void _internal_set_time_boot_ms(::uint32_t value);

  public:
  // uint32 chan1_raw = 2 [(.mavsdk.options.default_value) = "0"];
  void clear_chan1_raw() ;
  ::uint32_t chan1_raw() const;
  void set_chan1_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan1_raw() const;
  void _internal_set_chan1_raw(::uint32_t value);

  public:
  // uint32 chan2_raw = 3 [(.mavsdk.options.default_value) = "0"];
  void clear_chan2_raw() ;
  ::uint32_t chan2_raw() const;
  void set_chan2_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan2_raw() const;
  void _internal_set_chan2_raw(::uint32_t value);

  public:
  // uint32 chan3_raw = 4 [(.mavsdk.options.default_value) = "0"];
  void clear_chan3_raw() ;
  ::uint32_t chan3_raw() const;
  void set_chan3_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan3_raw() const;
  void _internal_set_chan3_raw(::uint32_t value);

  public:
  // uint32 chan4_raw = 5 [(.mavsdk.options.default_value) = "0"];
  void clear_chan4_raw() ;
  ::uint32_t chan4_raw() const;
  void set_chan4_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan4_raw() const;
  void _internal_set_chan4_raw(::uint32_t value);

  public:
  // uint32 chan5_raw = 6 [(.mavsdk.options.default_value) = "0"];
  void clear_chan5_raw() ;
  ::uint32_t chan5_raw() const;
  void set_chan5_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan5_raw() const;
  void _internal_set_chan5_raw(::uint32_t value);

  public:
  // uint32 chan6_raw = 7 [(.mavsdk.options.default_value) = "0"];
  void clear_chan6_raw() ;
  ::uint32_t chan6_raw() const;
  void set_chan6_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan6_raw() const;
  void _internal_set_chan6_raw(::uint32_t value);

  public:
  // uint32 chan7_raw = 8 [(.mavsdk.options.default_value) = "0"];
  void clear_chan7_raw() ;
  ::uint32_t chan7_raw() const;
  void set_chan7_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan7_raw() const;
  void _internal_set_chan7_raw(::uint32_t value);

  public:
  // uint32 chan8_raw = 9 [(.mavsdk.options.default_value) = "0"];
  void clear_chan8_raw() ;
  ::uint32_t chan8_raw() const;
  void set_chan8_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan8_raw() const;
  void _internal_set_chan8_raw(::uint32_t value);

  public:
  // uint32 chan9_raw = 10 [(.mavsdk.options.default_value) = "0"];
  void clear_chan9_raw() ;
  ::uint32_t chan9_raw() const;
  void set_chan9_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan9_raw() const;
  void _internal_set_chan9_raw(::uint32_t value);

  public:
  // uint32 chan10_raw = 11 [(.mavsdk.options.default_value) = "0"];
  void clear_chan10_raw() ;
  ::uint32_t chan10_raw() const;
  void set_chan10_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan10_raw() const;
  void _internal_set_chan10_raw(::uint32_t value);

  public:
  // uint32 chan11_raw = 12 [(.mavsdk.options.default_value) = "0"];
  void clear_chan11_raw() ;
  ::uint32_t chan11_raw() const;
  void set_chan11_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan11_raw() const;
  void _internal_set_chan11_raw(::uint32_t value);

  public:
  // uint32 chan12_raw = 13 [(.mavsdk.options.default_value) = "0"];
  void clear_chan12_raw() ;
  ::uint32_t chan12_raw() const;
  void set_chan12_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan12_raw() const;
  void _internal_set_chan12_raw(::uint32_t value);

  public:
  // uint32 chan13_raw = 14 [(.mavsdk.options.default_value) = "0"];
  void clear_chan13_raw() ;
  ::uint32_t chan13_raw() const;
  void set_chan13_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan13_raw() const;
  void _internal_set_chan13_raw(::uint32_t value);

  public:
  // uint32 chan14_raw = 15 [(.mavsdk.options.default_value) = "0"];
  void clear_chan14_raw() ;
  ::uint32_t chan14_raw() const;
  void set_chan14_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan14_raw() const;
  void _internal_set_chan14_raw(::uint32_t value);

  public:
  // uint32 chan15_raw = 16 [(.mavsdk.options.default_value) = "0"];
  void clear_chan15_raw() ;
  ::uint32_t chan15_raw() const;
  void set_chan15_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan15_raw() const;
  void _internal_set_chan15_raw(::uint32_t value);

  public:
  // uint32 chan16_raw = 17 [(.mavsdk.options.default_value) = "0"];
  void clear_chan16_raw() ;
  ::uint32_t chan16_raw() const;
  void set_chan16_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan16_raw() const;
  void _internal_set_chan16_raw(::uint32_t value);

  public:
  // uint32 chan17_raw = 18 [(.mavsdk.options.default_value) = "0"];
  void clear_chan17_raw() ;
  ::uint32_t chan17_raw() const;
  void set_chan17_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan17_raw() const;
  void _internal_set_chan17_raw(::uint32_t value);

  public:
  // uint32 chan18_raw = 19 [(.mavsdk.options.default_value) = "0"];
  void clear_chan18_raw() ;
  ::uint32_t chan18_raw() const;
  void set_chan18_raw(::uint32_t value);

  private:
  ::uint32_t _internal_chan18_raw() const;
  void _internal_set_chan18_raw(::uint32_t value);

  public:
  // uint32 chancount = 20 [(.mavsdk.options.default_value) = "0"];
  void clear_chancount() ;
  ::uint32_t chancount() const;
  void set_chancount(::uint32_t value);

  private:
  ::uint32_t _internal_chancount() const;
  void _internal_set_chancount(::uint32_t value);

  public:
  // uint32 rssi = 21 [(.mavsdk.options.default_value) = "0"];
  void clear_rssi() ;
  ::uint32_t rssi() const;
  void set_rssi(::uint32_t value);

  private:
  ::uint32_t _internal_rssi() const;
  void _internal_set_rssi(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.RcChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 21, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RcChannel& from_msg);
    ::uint32_t time_boot_ms_;
    ::uint32_t chan1_raw_;
    ::uint32_t chan2_raw_;
    ::uint32_t chan3_raw_;
    ::uint32_t chan4_raw_;
    ::uint32_t chan5_raw_;
    ::uint32_t chan6_raw_;
    ::uint32_t chan7_raw_;
    ::uint32_t chan8_raw_;
    ::uint32_t chan9_raw_;
    ::uint32_t chan10_raw_;
    ::uint32_t chan11_raw_;
    ::uint32_t chan12_raw_;
    ::uint32_t chan13_raw_;
    ::uint32_t chan14_raw_;
    ::uint32_t chan15_raw_;
    ::uint32_t chan16_raw_;
    ::uint32_t chan17_raw_;
    ::uint32_t chan18_raw_;
    ::uint32_t chancount_;
    ::uint32_t rssi_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class Magnitometer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.Magnitometer) */ {
 public:
  inline Magnitometer() : Magnitometer(nullptr) {}
  ~Magnitometer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Magnitometer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Magnitometer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Magnitometer(
      ::google::protobuf::internal::ConstantInitialized);

  inline Magnitometer(const Magnitometer& from) : Magnitometer(nullptr, from) {}
  inline Magnitometer(Magnitometer&& from) noexcept
      : Magnitometer(nullptr, std::move(from)) {}
  inline Magnitometer& operator=(const Magnitometer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Magnitometer& operator=(Magnitometer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Magnitometer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Magnitometer* internal_default_instance() {
    return reinterpret_cast<const Magnitometer*>(
        &_Magnitometer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(Magnitometer& a, Magnitometer& b) { a.Swap(&b); }
  inline void Swap(Magnitometer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Magnitometer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Magnitometer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Magnitometer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Magnitometer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Magnitometer& from) { Magnitometer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Magnitometer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.Magnitometer"; }

 protected:
  explicit Magnitometer(::google::protobuf::Arena* arena);
  Magnitometer(::google::protobuf::Arena* arena, const Magnitometer& from);
  Magnitometer(::google::protobuf::Arena* arena, Magnitometer&& from) noexcept
      : Magnitometer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kMagneticHeadingFieldNumber = 4,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // double magnetic_heading = 4;
  void clear_magnetic_heading() ;
  double magnetic_heading() const;
  void set_magnetic_heading(double value);

  private:
  double _internal_magnetic_heading() const;
  void _internal_set_magnetic_heading(double value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.Magnitometer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Magnitometer& from_msg);
    double x_;
    double y_;
    double z_;
    double magnetic_heading_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class Heartbeat final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.Heartbeat) */ {
 public:
  inline Heartbeat() : Heartbeat(nullptr) {}
  ~Heartbeat() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Heartbeat* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Heartbeat));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Heartbeat(
      ::google::protobuf::internal::ConstantInitialized);

  inline Heartbeat(const Heartbeat& from) : Heartbeat(nullptr, from) {}
  inline Heartbeat(Heartbeat&& from) noexcept
      : Heartbeat(nullptr, std::move(from)) {}
  inline Heartbeat& operator=(const Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Heartbeat& operator=(Heartbeat&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Heartbeat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Heartbeat* internal_default_instance() {
    return reinterpret_cast<const Heartbeat*>(
        &_Heartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Heartbeat& a, Heartbeat& b) { a.Swap(&b); }
  inline void Swap(Heartbeat* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Heartbeat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Heartbeat* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Heartbeat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Heartbeat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Heartbeat& from) { Heartbeat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Heartbeat* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.Heartbeat"; }

 protected:
  explicit Heartbeat(::google::protobuf::Arena* arena);
  Heartbeat(::google::protobuf::Arena* arena, const Heartbeat& from);
  Heartbeat(::google::protobuf::Arena* arena, Heartbeat&& from) noexcept
      : Heartbeat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomModeFieldNumber = 1,
    kTypeFieldNumber = 2,
    kAutopilotFieldNumber = 3,
    kBaseModeFieldNumber = 4,
    kSystemStatusFieldNumber = 5,
    kMavlinkVersionFieldNumber = 6,
  };
  // uint32 custom_mode = 1;
  void clear_custom_mode() ;
  ::uint32_t custom_mode() const;
  void set_custom_mode(::uint32_t value);

  private:
  ::uint32_t _internal_custom_mode() const;
  void _internal_set_custom_mode(::uint32_t value);

  public:
  // uint32 type = 2;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // uint32 autopilot = 3;
  void clear_autopilot() ;
  ::uint32_t autopilot() const;
  void set_autopilot(::uint32_t value);

  private:
  ::uint32_t _internal_autopilot() const;
  void _internal_set_autopilot(::uint32_t value);

  public:
  // uint32 base_mode = 4;
  void clear_base_mode() ;
  ::uint32_t base_mode() const;
  void set_base_mode(::uint32_t value);

  private:
  ::uint32_t _internal_base_mode() const;
  void _internal_set_base_mode(::uint32_t value);

  public:
  // uint32 system_status = 5;
  void clear_system_status() ;
  ::uint32_t system_status() const;
  void set_system_status(::uint32_t value);

  private:
  ::uint32_t _internal_system_status() const;
  void _internal_set_system_status(::uint32_t value);

  public:
  // uint32 mavlink_version = 6;
  void clear_mavlink_version() ;
  ::uint32_t mavlink_version() const;
  void set_mavlink_version(::uint32_t value);

  private:
  ::uint32_t _internal_mavlink_version() const;
  void _internal_set_mavlink_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.Heartbeat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Heartbeat& from_msg);
    ::uint32_t custom_mode_;
    ::uint32_t type_;
    ::uint32_t autopilot_;
    ::uint32_t base_mode_;
    ::uint32_t system_status_;
    ::uint32_t mavlink_version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class CaaConfidenceLevel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.CaaConfidenceLevel) */ {
 public:
  inline CaaConfidenceLevel() : CaaConfidenceLevel(nullptr) {}
  ~CaaConfidenceLevel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CaaConfidenceLevel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CaaConfidenceLevel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CaaConfidenceLevel(
      ::google::protobuf::internal::ConstantInitialized);

  inline CaaConfidenceLevel(const CaaConfidenceLevel& from) : CaaConfidenceLevel(nullptr, from) {}
  inline CaaConfidenceLevel(CaaConfidenceLevel&& from) noexcept
      : CaaConfidenceLevel(nullptr, std::move(from)) {}
  inline CaaConfidenceLevel& operator=(const CaaConfidenceLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaaConfidenceLevel& operator=(CaaConfidenceLevel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaaConfidenceLevel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaaConfidenceLevel* internal_default_instance() {
    return reinterpret_cast<const CaaConfidenceLevel*>(
        &_CaaConfidenceLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CaaConfidenceLevel& a, CaaConfidenceLevel& b) { a.Swap(&b); }
  inline void Swap(CaaConfidenceLevel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaaConfidenceLevel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaaConfidenceLevel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CaaConfidenceLevel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaaConfidenceLevel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CaaConfidenceLevel& from) { CaaConfidenceLevel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CaaConfidenceLevel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.CaaConfidenceLevel"; }

 protected:
  explicit CaaConfidenceLevel(::google::protobuf::Arena* arena);
  CaaConfidenceLevel(::google::protobuf::Arena* arena, const CaaConfidenceLevel& from);
  CaaConfidenceLevel(::google::protobuf::Arena* arena, CaaConfidenceLevel&& from) noexcept
      : CaaConfidenceLevel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeUsecFieldNumber = 1,
    kConfidenceLevelFieldNumber = 2,
  };
  // uint64 time_usec = 1;
  void clear_time_usec() ;
  ::uint64_t time_usec() const;
  void set_time_usec(::uint64_t value);

  private:
  ::uint64_t _internal_time_usec() const;
  void _internal_set_time_usec(::uint64_t value);

  public:
  // float confidence_level = 2;
  void clear_confidence_level() ;
  float confidence_level() const;
  void set_confidence_level(float value);

  private:
  float _internal_confidence_level() const;
  void _internal_set_confidence_level(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.CaaConfidenceLevel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CaaConfidenceLevel& from_msg);
    ::uint64_t time_usec_;
    float confidence_level_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class BatteryVoltages final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.BatteryVoltages) */ {
 public:
  inline BatteryVoltages() : BatteryVoltages(nullptr) {}
  ~BatteryVoltages() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BatteryVoltages* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BatteryVoltages));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatteryVoltages(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatteryVoltages(const BatteryVoltages& from) : BatteryVoltages(nullptr, from) {}
  inline BatteryVoltages(BatteryVoltages&& from) noexcept
      : BatteryVoltages(nullptr, std::move(from)) {}
  inline BatteryVoltages& operator=(const BatteryVoltages& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatteryVoltages& operator=(BatteryVoltages&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatteryVoltages& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatteryVoltages* internal_default_instance() {
    return reinterpret_cast<const BatteryVoltages*>(
        &_BatteryVoltages_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(BatteryVoltages& a, BatteryVoltages& b) { a.Swap(&b); }
  inline void Swap(BatteryVoltages* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatteryVoltages* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatteryVoltages* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BatteryVoltages>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatteryVoltages& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatteryVoltages& from) { BatteryVoltages::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BatteryVoltages* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.BatteryVoltages"; }

 protected:
  explicit BatteryVoltages(::google::protobuf::Arena* arena);
  BatteryVoltages(::google::protobuf::Arena* arena, const BatteryVoltages& from);
  BatteryVoltages(::google::protobuf::Arena* arena, BatteryVoltages&& from) noexcept
      : BatteryVoltages(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoltagesFieldNumber = 1,
    kExtVoltagesFieldNumber = 2,
  };
  // repeated uint32 voltages = 1;
  int voltages_size() const;
  private:
  int _internal_voltages_size() const;

  public:
  void clear_voltages() ;
  ::uint32_t voltages(int index) const;
  void set_voltages(int index, ::uint32_t value);
  void add_voltages(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& voltages() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_voltages();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_voltages() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_voltages();

  public:
  // repeated uint32 ext_voltages = 2;
  int ext_voltages_size() const;
  private:
  int _internal_ext_voltages_size() const;

  public:
  void clear_ext_voltages() ;
  ::uint32_t ext_voltages(int index) const;
  void set_ext_voltages(int index, ::uint32_t value);
  void add_ext_voltages(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ext_voltages() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_ext_voltages();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ext_voltages() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_ext_voltages();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.BatteryVoltages)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatteryVoltages& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> voltages_;
    ::google::protobuf::internal::CachedSize _voltages_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ext_voltages_;
    ::google::protobuf::internal::CachedSize _ext_voltages_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class AvailableMode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.AvailableMode) */ {
 public:
  inline AvailableMode() : AvailableMode(nullptr) {}
  ~AvailableMode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AvailableMode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AvailableMode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AvailableMode(
      ::google::protobuf::internal::ConstantInitialized);

  inline AvailableMode(const AvailableMode& from) : AvailableMode(nullptr, from) {}
  inline AvailableMode(AvailableMode&& from) noexcept
      : AvailableMode(nullptr, std::move(from)) {}
  inline AvailableMode& operator=(const AvailableMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline AvailableMode& operator=(AvailableMode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AvailableMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const AvailableMode* internal_default_instance() {
    return reinterpret_cast<const AvailableMode*>(
        &_AvailableMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(AvailableMode& a, AvailableMode& b) { a.Swap(&b); }
  inline void Swap(AvailableMode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AvailableMode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AvailableMode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AvailableMode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AvailableMode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AvailableMode& from) { AvailableMode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AvailableMode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.AvailableMode"; }

 protected:
  explicit AvailableMode(::google::protobuf::Arena* arena);
  AvailableMode(::google::protobuf::Arena* arena, const AvailableMode& from);
  AvailableMode(::google::protobuf::Arena* arena, AvailableMode&& from) noexcept
      : AvailableMode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModeNameFieldNumber = 6,
    kNumberModesFieldNumber = 1,
    kModeIndexFieldNumber = 2,
    kStandardModeFieldNumber = 3,
    kCustomModeFieldNumber = 4,
    kPropertiesFieldNumber = 5,
  };
  // string mode_name = 6;
  void clear_mode_name() ;
  const std::string& mode_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mode_name(Arg_&& arg, Args_... args);
  std::string* mutable_mode_name();
  PROTOBUF_NODISCARD std::string* release_mode_name();
  void set_allocated_mode_name(std::string* value);

  private:
  const std::string& _internal_mode_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mode_name(
      const std::string& value);
  std::string* _internal_mutable_mode_name();

  public:
  // uint32 number_modes = 1;
  void clear_number_modes() ;
  ::uint32_t number_modes() const;
  void set_number_modes(::uint32_t value);

  private:
  ::uint32_t _internal_number_modes() const;
  void _internal_set_number_modes(::uint32_t value);

  public:
  // uint32 mode_index = 2;
  void clear_mode_index() ;
  ::uint32_t mode_index() const;
  void set_mode_index(::uint32_t value);

  private:
  ::uint32_t _internal_mode_index() const;
  void _internal_set_mode_index(::uint32_t value);

  public:
  // uint32 standard_mode = 3;
  void clear_standard_mode() ;
  ::uint32_t standard_mode() const;
  void set_standard_mode(::uint32_t value);

  private:
  ::uint32_t _internal_standard_mode() const;
  void _internal_set_standard_mode(::uint32_t value);

  public:
  // uint32 custom_mode = 4;
  void clear_custom_mode() ;
  ::uint32_t custom_mode() const;
  void set_custom_mode(::uint32_t value);

  private:
  ::uint32_t _internal_custom_mode() const;
  void _internal_set_custom_mode(::uint32_t value);

  public:
  // uint32 properties = 5;
  void clear_properties() ;
  ::uint32_t properties() const;
  void set_properties(::uint32_t value);

  private:
  ::uint32_t _internal_properties() const;
  void _internal_set_properties(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.AvailableMode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AvailableMode& from_msg);
    ::google::protobuf::internal::ArenaStringPtr mode_name_;
    ::uint32_t number_modes_;
    ::uint32_t mode_index_;
    ::uint32_t standard_mode_;
    ::uint32_t custom_mode_;
    ::uint32_t properties_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class ActuatorServosStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.ActuatorServosStatus) */ {
 public:
  inline ActuatorServosStatus() : ActuatorServosStatus(nullptr) {}
  ~ActuatorServosStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActuatorServosStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActuatorServosStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActuatorServosStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActuatorServosStatus(const ActuatorServosStatus& from) : ActuatorServosStatus(nullptr, from) {}
  inline ActuatorServosStatus(ActuatorServosStatus&& from) noexcept
      : ActuatorServosStatus(nullptr, std::move(from)) {}
  inline ActuatorServosStatus& operator=(const ActuatorServosStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActuatorServosStatus& operator=(ActuatorServosStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActuatorServosStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActuatorServosStatus* internal_default_instance() {
    return reinterpret_cast<const ActuatorServosStatus*>(
        &_ActuatorServosStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(ActuatorServosStatus& a, ActuatorServosStatus& b) { a.Swap(&b); }
  inline void Swap(ActuatorServosStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActuatorServosStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActuatorServosStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActuatorServosStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActuatorServosStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActuatorServosStatus& from) { ActuatorServosStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActuatorServosStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.ActuatorServosStatus"; }

 protected:
  explicit ActuatorServosStatus(::google::protobuf::Arena* arena);
  ActuatorServosStatus(::google::protobuf::Arena* arena, const ActuatorServosStatus& from);
  ActuatorServosStatus(::google::protobuf::Arena* arena, ActuatorServosStatus&& from) noexcept
      : ActuatorServosStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlFieldNumber = 2,
    kTimeUsecFieldNumber = 1,
  };
  // repeated float control = 2;
  int control_size() const;
  private:
  int _internal_control_size() const;

  public:
  void clear_control() ;
  float control(int index) const;
  void set_control(int index, float value);
  void add_control(float value);
  const ::google::protobuf::RepeatedField<float>& control() const;
  ::google::protobuf::RepeatedField<float>* mutable_control();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_control() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_control();

  public:
  // uint64 time_usec = 1;
  void clear_time_usec() ;
  ::uint64_t time_usec() const;
  void set_time_usec(::uint64_t value);

  private:
  ::uint64_t _internal_time_usec() const;
  void _internal_set_time_usec(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.ActuatorServosStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActuatorServosStatus& from_msg);
    ::google::protobuf::RepeatedField<float> control_;
    ::uint64_t time_usec_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SysStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SysStatusResponse) */ {
 public:
  inline SysStatusResponse() : SysStatusResponse(nullptr) {}
  ~SysStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SysStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SysStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SysStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SysStatusResponse(const SysStatusResponse& from) : SysStatusResponse(nullptr, from) {}
  inline SysStatusResponse(SysStatusResponse&& from) noexcept
      : SysStatusResponse(nullptr, std::move(from)) {}
  inline SysStatusResponse& operator=(const SysStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysStatusResponse& operator=(SysStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SysStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SysStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SysStatusResponse*>(
        &_SysStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SysStatusResponse& a, SysStatusResponse& b) { a.Swap(&b); }
  inline void Swap(SysStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SysStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SysStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SysStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SysStatusResponse& from) { SysStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SysStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SysStatusResponse"; }

 protected:
  explicit SysStatusResponse(::google::protobuf::Arena* arena);
  SysStatusResponse(::google::protobuf::Arena* arena, const SysStatusResponse& from);
  SysStatusResponse(::google::protobuf::Arena* arena, SysStatusResponse&& from) noexcept
      : SysStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSysStatusFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.SysStatus sys_status = 1;
  bool has_sys_status() const;
  void clear_sys_status() ;
  const ::mavsdk::rpc::striker::SysStatus& sys_status() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::SysStatus* release_sys_status();
  ::mavsdk::rpc::striker::SysStatus* mutable_sys_status();
  void set_allocated_sys_status(::mavsdk::rpc::striker::SysStatus* value);
  void unsafe_arena_set_allocated_sys_status(::mavsdk::rpc::striker::SysStatus* value);
  ::mavsdk::rpc::striker::SysStatus* unsafe_arena_release_sys_status();

  private:
  const ::mavsdk::rpc::striker::SysStatus& _internal_sys_status() const;
  ::mavsdk::rpc::striker::SysStatus* _internal_mutable_sys_status();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SysStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SysStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::SysStatus* sys_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SetRateCaaConfidenceLevelResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse) */ {
 public:
  inline SetRateCaaConfidenceLevelResponse() : SetRateCaaConfidenceLevelResponse(nullptr) {}
  ~SetRateCaaConfidenceLevelResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetRateCaaConfidenceLevelResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetRateCaaConfidenceLevelResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetRateCaaConfidenceLevelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetRateCaaConfidenceLevelResponse(const SetRateCaaConfidenceLevelResponse& from) : SetRateCaaConfidenceLevelResponse(nullptr, from) {}
  inline SetRateCaaConfidenceLevelResponse(SetRateCaaConfidenceLevelResponse&& from) noexcept
      : SetRateCaaConfidenceLevelResponse(nullptr, std::move(from)) {}
  inline SetRateCaaConfidenceLevelResponse& operator=(const SetRateCaaConfidenceLevelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRateCaaConfidenceLevelResponse& operator=(SetRateCaaConfidenceLevelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRateCaaConfidenceLevelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRateCaaConfidenceLevelResponse* internal_default_instance() {
    return reinterpret_cast<const SetRateCaaConfidenceLevelResponse*>(
        &_SetRateCaaConfidenceLevelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(SetRateCaaConfidenceLevelResponse& a, SetRateCaaConfidenceLevelResponse& b) { a.Swap(&b); }
  inline void Swap(SetRateCaaConfidenceLevelResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRateCaaConfidenceLevelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRateCaaConfidenceLevelResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetRateCaaConfidenceLevelResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRateCaaConfidenceLevelResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetRateCaaConfidenceLevelResponse& from) { SetRateCaaConfidenceLevelResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetRateCaaConfidenceLevelResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse"; }

 protected:
  explicit SetRateCaaConfidenceLevelResponse(::google::protobuf::Arena* arena);
  SetRateCaaConfidenceLevelResponse(::google::protobuf::Arena* arena, const SetRateCaaConfidenceLevelResponse& from);
  SetRateCaaConfidenceLevelResponse(::google::protobuf::Arena* arena, SetRateCaaConfidenceLevelResponse&& from) noexcept
      : SetRateCaaConfidenceLevelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrikerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.StrikerResult striker_result = 1;
  bool has_striker_result() const;
  void clear_striker_result() ;
  const ::mavsdk::rpc::striker::StrikerResult& striker_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::StrikerResult* release_striker_result();
  ::mavsdk::rpc::striker::StrikerResult* mutable_striker_result();
  void set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  void unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  ::mavsdk::rpc::striker::StrikerResult* unsafe_arena_release_striker_result();

  private:
  const ::mavsdk::rpc::striker::StrikerResult& _internal_striker_result() const;
  ::mavsdk::rpc::striker::StrikerResult* _internal_mutable_striker_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetRateCaaConfidenceLevelResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::StrikerResult* striker_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SetRateActuatorServosStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse) */ {
 public:
  inline SetRateActuatorServosStatusResponse() : SetRateActuatorServosStatusResponse(nullptr) {}
  ~SetRateActuatorServosStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetRateActuatorServosStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetRateActuatorServosStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetRateActuatorServosStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetRateActuatorServosStatusResponse(const SetRateActuatorServosStatusResponse& from) : SetRateActuatorServosStatusResponse(nullptr, from) {}
  inline SetRateActuatorServosStatusResponse(SetRateActuatorServosStatusResponse&& from) noexcept
      : SetRateActuatorServosStatusResponse(nullptr, std::move(from)) {}
  inline SetRateActuatorServosStatusResponse& operator=(const SetRateActuatorServosStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRateActuatorServosStatusResponse& operator=(SetRateActuatorServosStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRateActuatorServosStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRateActuatorServosStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetRateActuatorServosStatusResponse*>(
        &_SetRateActuatorServosStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SetRateActuatorServosStatusResponse& a, SetRateActuatorServosStatusResponse& b) { a.Swap(&b); }
  inline void Swap(SetRateActuatorServosStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRateActuatorServosStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRateActuatorServosStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetRateActuatorServosStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRateActuatorServosStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetRateActuatorServosStatusResponse& from) { SetRateActuatorServosStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetRateActuatorServosStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SetRateActuatorServosStatusResponse"; }

 protected:
  explicit SetRateActuatorServosStatusResponse(::google::protobuf::Arena* arena);
  SetRateActuatorServosStatusResponse(::google::protobuf::Arena* arena, const SetRateActuatorServosStatusResponse& from);
  SetRateActuatorServosStatusResponse(::google::protobuf::Arena* arena, SetRateActuatorServosStatusResponse&& from) noexcept
      : SetRateActuatorServosStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrikerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.StrikerResult striker_result = 1;
  bool has_striker_result() const;
  void clear_striker_result() ;
  const ::mavsdk::rpc::striker::StrikerResult& striker_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::StrikerResult* release_striker_result();
  ::mavsdk::rpc::striker::StrikerResult* mutable_striker_result();
  void set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  void unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  ::mavsdk::rpc::striker::StrikerResult* unsafe_arena_release_striker_result();

  private:
  const ::mavsdk::rpc::striker::StrikerResult& _internal_striker_result() const;
  ::mavsdk::rpc::striker::StrikerResult* _internal_mutable_striker_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetRateActuatorServosStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::StrikerResult* striker_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class SetManualFlightModeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.SetManualFlightModeResponse) */ {
 public:
  inline SetManualFlightModeResponse() : SetManualFlightModeResponse(nullptr) {}
  ~SetManualFlightModeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetManualFlightModeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetManualFlightModeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetManualFlightModeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetManualFlightModeResponse(const SetManualFlightModeResponse& from) : SetManualFlightModeResponse(nullptr, from) {}
  inline SetManualFlightModeResponse(SetManualFlightModeResponse&& from) noexcept
      : SetManualFlightModeResponse(nullptr, std::move(from)) {}
  inline SetManualFlightModeResponse& operator=(const SetManualFlightModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetManualFlightModeResponse& operator=(SetManualFlightModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetManualFlightModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetManualFlightModeResponse* internal_default_instance() {
    return reinterpret_cast<const SetManualFlightModeResponse*>(
        &_SetManualFlightModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SetManualFlightModeResponse& a, SetManualFlightModeResponse& b) { a.Swap(&b); }
  inline void Swap(SetManualFlightModeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetManualFlightModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetManualFlightModeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetManualFlightModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetManualFlightModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetManualFlightModeResponse& from) { SetManualFlightModeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetManualFlightModeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.SetManualFlightModeResponse"; }

 protected:
  explicit SetManualFlightModeResponse(::google::protobuf::Arena* arena);
  SetManualFlightModeResponse(::google::protobuf::Arena* arena, const SetManualFlightModeResponse& from);
  SetManualFlightModeResponse(::google::protobuf::Arena* arena, SetManualFlightModeResponse&& from) noexcept
      : SetManualFlightModeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrikerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.StrikerResult striker_result = 1;
  bool has_striker_result() const;
  void clear_striker_result() ;
  const ::mavsdk::rpc::striker::StrikerResult& striker_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::StrikerResult* release_striker_result();
  ::mavsdk::rpc::striker::StrikerResult* mutable_striker_result();
  void set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  void unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  ::mavsdk::rpc::striker::StrikerResult* unsafe_arena_release_striker_result();

  private:
  const ::mavsdk::rpc::striker::StrikerResult& _internal_striker_result() const;
  ::mavsdk::rpc::striker::StrikerResult* _internal_mutable_striker_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.SetManualFlightModeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetManualFlightModeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::StrikerResult* striker_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class RequestAvailableModesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.RequestAvailableModesResponse) */ {
 public:
  inline RequestAvailableModesResponse() : RequestAvailableModesResponse(nullptr) {}
  ~RequestAvailableModesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RequestAvailableModesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RequestAvailableModesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestAvailableModesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestAvailableModesResponse(const RequestAvailableModesResponse& from) : RequestAvailableModesResponse(nullptr, from) {}
  inline RequestAvailableModesResponse(RequestAvailableModesResponse&& from) noexcept
      : RequestAvailableModesResponse(nullptr, std::move(from)) {}
  inline RequestAvailableModesResponse& operator=(const RequestAvailableModesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestAvailableModesResponse& operator=(RequestAvailableModesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestAvailableModesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestAvailableModesResponse* internal_default_instance() {
    return reinterpret_cast<const RequestAvailableModesResponse*>(
        &_RequestAvailableModesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(RequestAvailableModesResponse& a, RequestAvailableModesResponse& b) { a.Swap(&b); }
  inline void Swap(RequestAvailableModesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestAvailableModesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestAvailableModesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RequestAvailableModesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestAvailableModesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestAvailableModesResponse& from) { RequestAvailableModesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RequestAvailableModesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.RequestAvailableModesResponse"; }

 protected:
  explicit RequestAvailableModesResponse(::google::protobuf::Arena* arena);
  RequestAvailableModesResponse(::google::protobuf::Arena* arena, const RequestAvailableModesResponse& from);
  RequestAvailableModesResponse(::google::protobuf::Arena* arena, RequestAvailableModesResponse&& from) noexcept
      : RequestAvailableModesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrikerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.StrikerResult striker_result = 1;
  bool has_striker_result() const;
  void clear_striker_result() ;
  const ::mavsdk::rpc::striker::StrikerResult& striker_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::StrikerResult* release_striker_result();
  ::mavsdk::rpc::striker::StrikerResult* mutable_striker_result();
  void set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  void unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value);
  ::mavsdk::rpc::striker::StrikerResult* unsafe_arena_release_striker_result();

  private:
  const ::mavsdk::rpc::striker::StrikerResult& _internal_striker_result() const;
  ::mavsdk::rpc::striker::StrikerResult* _internal_mutable_striker_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.RequestAvailableModesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestAvailableModesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::StrikerResult* striker_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class RcChannelResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.RcChannelResponse) */ {
 public:
  inline RcChannelResponse() : RcChannelResponse(nullptr) {}
  ~RcChannelResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RcChannelResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RcChannelResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RcChannelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RcChannelResponse(const RcChannelResponse& from) : RcChannelResponse(nullptr, from) {}
  inline RcChannelResponse(RcChannelResponse&& from) noexcept
      : RcChannelResponse(nullptr, std::move(from)) {}
  inline RcChannelResponse& operator=(const RcChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RcChannelResponse& operator=(RcChannelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RcChannelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RcChannelResponse* internal_default_instance() {
    return reinterpret_cast<const RcChannelResponse*>(
        &_RcChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RcChannelResponse& a, RcChannelResponse& b) { a.Swap(&b); }
  inline void Swap(RcChannelResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RcChannelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RcChannelResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RcChannelResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RcChannelResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RcChannelResponse& from) { RcChannelResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RcChannelResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.RcChannelResponse"; }

 protected:
  explicit RcChannelResponse(::google::protobuf::Arena* arena);
  RcChannelResponse(::google::protobuf::Arena* arena, const RcChannelResponse& from);
  RcChannelResponse(::google::protobuf::Arena* arena, RcChannelResponse&& from) noexcept
      : RcChannelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRcChannelFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.RcChannel rc_channel = 1;
  bool has_rc_channel() const;
  void clear_rc_channel() ;
  const ::mavsdk::rpc::striker::RcChannel& rc_channel() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::RcChannel* release_rc_channel();
  ::mavsdk::rpc::striker::RcChannel* mutable_rc_channel();
  void set_allocated_rc_channel(::mavsdk::rpc::striker::RcChannel* value);
  void unsafe_arena_set_allocated_rc_channel(::mavsdk::rpc::striker::RcChannel* value);
  ::mavsdk::rpc::striker::RcChannel* unsafe_arena_release_rc_channel();

  private:
  const ::mavsdk::rpc::striker::RcChannel& _internal_rc_channel() const;
  ::mavsdk::rpc::striker::RcChannel* _internal_mutable_rc_channel();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.RcChannelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RcChannelResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::RcChannel* rc_channel_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class MagnitometerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.MagnitometerResponse) */ {
 public:
  inline MagnitometerResponse() : MagnitometerResponse(nullptr) {}
  ~MagnitometerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MagnitometerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MagnitometerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MagnitometerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MagnitometerResponse(const MagnitometerResponse& from) : MagnitometerResponse(nullptr, from) {}
  inline MagnitometerResponse(MagnitometerResponse&& from) noexcept
      : MagnitometerResponse(nullptr, std::move(from)) {}
  inline MagnitometerResponse& operator=(const MagnitometerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MagnitometerResponse& operator=(MagnitometerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MagnitometerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MagnitometerResponse* internal_default_instance() {
    return reinterpret_cast<const MagnitometerResponse*>(
        &_MagnitometerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MagnitometerResponse& a, MagnitometerResponse& b) { a.Swap(&b); }
  inline void Swap(MagnitometerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MagnitometerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MagnitometerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MagnitometerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MagnitometerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MagnitometerResponse& from) { MagnitometerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MagnitometerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.MagnitometerResponse"; }

 protected:
  explicit MagnitometerResponse(::google::protobuf::Arena* arena);
  MagnitometerResponse(::google::protobuf::Arena* arena, const MagnitometerResponse& from);
  MagnitometerResponse(::google::protobuf::Arena* arena, MagnitometerResponse&& from) noexcept
      : MagnitometerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMagnitometerFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.Magnitometer magnitometer = 1;
  bool has_magnitometer() const;
  void clear_magnitometer() ;
  const ::mavsdk::rpc::striker::Magnitometer& magnitometer() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::Magnitometer* release_magnitometer();
  ::mavsdk::rpc::striker::Magnitometer* mutable_magnitometer();
  void set_allocated_magnitometer(::mavsdk::rpc::striker::Magnitometer* value);
  void unsafe_arena_set_allocated_magnitometer(::mavsdk::rpc::striker::Magnitometer* value);
  ::mavsdk::rpc::striker::Magnitometer* unsafe_arena_release_magnitometer();

  private:
  const ::mavsdk::rpc::striker::Magnitometer& _internal_magnitometer() const;
  ::mavsdk::rpc::striker::Magnitometer* _internal_mutable_magnitometer();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.MagnitometerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MagnitometerResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::Magnitometer* magnitometer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class HeartbeatResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.HeartbeatResponse) */ {
 public:
  inline HeartbeatResponse() : HeartbeatResponse(nullptr) {}
  ~HeartbeatResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HeartbeatResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HeartbeatResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HeartbeatResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline HeartbeatResponse(const HeartbeatResponse& from) : HeartbeatResponse(nullptr, from) {}
  inline HeartbeatResponse(HeartbeatResponse&& from) noexcept
      : HeartbeatResponse(nullptr, std::move(from)) {}
  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeartbeatResponse& operator=(HeartbeatResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeartbeatResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeartbeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartbeatResponse*>(
        &_HeartbeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HeartbeatResponse& a, HeartbeatResponse& b) { a.Swap(&b); }
  inline void Swap(HeartbeatResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeartbeatResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeartbeatResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HeartbeatResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HeartbeatResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HeartbeatResponse& from) { HeartbeatResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HeartbeatResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.HeartbeatResponse"; }

 protected:
  explicit HeartbeatResponse(::google::protobuf::Arena* arena);
  HeartbeatResponse(::google::protobuf::Arena* arena, const HeartbeatResponse& from);
  HeartbeatResponse(::google::protobuf::Arena* arena, HeartbeatResponse&& from) noexcept
      : HeartbeatResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeartbeatFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.Heartbeat heartbeat = 1;
  bool has_heartbeat() const;
  void clear_heartbeat() ;
  const ::mavsdk::rpc::striker::Heartbeat& heartbeat() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::Heartbeat* release_heartbeat();
  ::mavsdk::rpc::striker::Heartbeat* mutable_heartbeat();
  void set_allocated_heartbeat(::mavsdk::rpc::striker::Heartbeat* value);
  void unsafe_arena_set_allocated_heartbeat(::mavsdk::rpc::striker::Heartbeat* value);
  ::mavsdk::rpc::striker::Heartbeat* unsafe_arena_release_heartbeat();

  private:
  const ::mavsdk::rpc::striker::Heartbeat& _internal_heartbeat() const;
  ::mavsdk::rpc::striker::Heartbeat* _internal_mutable_heartbeat();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.HeartbeatResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HeartbeatResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::Heartbeat* heartbeat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class CaaConfidenceLevelResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.CaaConfidenceLevelResponse) */ {
 public:
  inline CaaConfidenceLevelResponse() : CaaConfidenceLevelResponse(nullptr) {}
  ~CaaConfidenceLevelResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CaaConfidenceLevelResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CaaConfidenceLevelResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CaaConfidenceLevelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CaaConfidenceLevelResponse(const CaaConfidenceLevelResponse& from) : CaaConfidenceLevelResponse(nullptr, from) {}
  inline CaaConfidenceLevelResponse(CaaConfidenceLevelResponse&& from) noexcept
      : CaaConfidenceLevelResponse(nullptr, std::move(from)) {}
  inline CaaConfidenceLevelResponse& operator=(const CaaConfidenceLevelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaaConfidenceLevelResponse& operator=(CaaConfidenceLevelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaaConfidenceLevelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaaConfidenceLevelResponse* internal_default_instance() {
    return reinterpret_cast<const CaaConfidenceLevelResponse*>(
        &_CaaConfidenceLevelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CaaConfidenceLevelResponse& a, CaaConfidenceLevelResponse& b) { a.Swap(&b); }
  inline void Swap(CaaConfidenceLevelResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaaConfidenceLevelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaaConfidenceLevelResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CaaConfidenceLevelResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaaConfidenceLevelResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CaaConfidenceLevelResponse& from) { CaaConfidenceLevelResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CaaConfidenceLevelResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.CaaConfidenceLevelResponse"; }

 protected:
  explicit CaaConfidenceLevelResponse(::google::protobuf::Arena* arena);
  CaaConfidenceLevelResponse(::google::protobuf::Arena* arena, const CaaConfidenceLevelResponse& from);
  CaaConfidenceLevelResponse(::google::protobuf::Arena* arena, CaaConfidenceLevelResponse&& from) noexcept
      : CaaConfidenceLevelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCaaConfidenceLevelFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.CaaConfidenceLevel caa_confidence_level = 1;
  bool has_caa_confidence_level() const;
  void clear_caa_confidence_level() ;
  const ::mavsdk::rpc::striker::CaaConfidenceLevel& caa_confidence_level() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::CaaConfidenceLevel* release_caa_confidence_level();
  ::mavsdk::rpc::striker::CaaConfidenceLevel* mutable_caa_confidence_level();
  void set_allocated_caa_confidence_level(::mavsdk::rpc::striker::CaaConfidenceLevel* value);
  void unsafe_arena_set_allocated_caa_confidence_level(::mavsdk::rpc::striker::CaaConfidenceLevel* value);
  ::mavsdk::rpc::striker::CaaConfidenceLevel* unsafe_arena_release_caa_confidence_level();

  private:
  const ::mavsdk::rpc::striker::CaaConfidenceLevel& _internal_caa_confidence_level() const;
  ::mavsdk::rpc::striker::CaaConfidenceLevel* _internal_mutable_caa_confidence_level();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.CaaConfidenceLevelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CaaConfidenceLevelResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::CaaConfidenceLevel* caa_confidence_level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class BatteryVoltagesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.BatteryVoltagesResponse) */ {
 public:
  inline BatteryVoltagesResponse() : BatteryVoltagesResponse(nullptr) {}
  ~BatteryVoltagesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BatteryVoltagesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BatteryVoltagesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatteryVoltagesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatteryVoltagesResponse(const BatteryVoltagesResponse& from) : BatteryVoltagesResponse(nullptr, from) {}
  inline BatteryVoltagesResponse(BatteryVoltagesResponse&& from) noexcept
      : BatteryVoltagesResponse(nullptr, std::move(from)) {}
  inline BatteryVoltagesResponse& operator=(const BatteryVoltagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatteryVoltagesResponse& operator=(BatteryVoltagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatteryVoltagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatteryVoltagesResponse* internal_default_instance() {
    return reinterpret_cast<const BatteryVoltagesResponse*>(
        &_BatteryVoltagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(BatteryVoltagesResponse& a, BatteryVoltagesResponse& b) { a.Swap(&b); }
  inline void Swap(BatteryVoltagesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatteryVoltagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatteryVoltagesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BatteryVoltagesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatteryVoltagesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatteryVoltagesResponse& from) { BatteryVoltagesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BatteryVoltagesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.BatteryVoltagesResponse"; }

 protected:
  explicit BatteryVoltagesResponse(::google::protobuf::Arena* arena);
  BatteryVoltagesResponse(::google::protobuf::Arena* arena, const BatteryVoltagesResponse& from);
  BatteryVoltagesResponse(::google::protobuf::Arena* arena, BatteryVoltagesResponse&& from) noexcept
      : BatteryVoltagesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBatteryVoltagesFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.BatteryVoltages battery_voltages = 1;
  bool has_battery_voltages() const;
  void clear_battery_voltages() ;
  const ::mavsdk::rpc::striker::BatteryVoltages& battery_voltages() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::BatteryVoltages* release_battery_voltages();
  ::mavsdk::rpc::striker::BatteryVoltages* mutable_battery_voltages();
  void set_allocated_battery_voltages(::mavsdk::rpc::striker::BatteryVoltages* value);
  void unsafe_arena_set_allocated_battery_voltages(::mavsdk::rpc::striker::BatteryVoltages* value);
  ::mavsdk::rpc::striker::BatteryVoltages* unsafe_arena_release_battery_voltages();

  private:
  const ::mavsdk::rpc::striker::BatteryVoltages& _internal_battery_voltages() const;
  ::mavsdk::rpc::striker::BatteryVoltages* _internal_mutable_battery_voltages();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.BatteryVoltagesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatteryVoltagesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::BatteryVoltages* battery_voltages_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class AvailableModesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.AvailableModesResponse) */ {
 public:
  inline AvailableModesResponse() : AvailableModesResponse(nullptr) {}
  ~AvailableModesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AvailableModesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AvailableModesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AvailableModesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AvailableModesResponse(const AvailableModesResponse& from) : AvailableModesResponse(nullptr, from) {}
  inline AvailableModesResponse(AvailableModesResponse&& from) noexcept
      : AvailableModesResponse(nullptr, std::move(from)) {}
  inline AvailableModesResponse& operator=(const AvailableModesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AvailableModesResponse& operator=(AvailableModesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AvailableModesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AvailableModesResponse* internal_default_instance() {
    return reinterpret_cast<const AvailableModesResponse*>(
        &_AvailableModesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(AvailableModesResponse& a, AvailableModesResponse& b) { a.Swap(&b); }
  inline void Swap(AvailableModesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AvailableModesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AvailableModesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AvailableModesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AvailableModesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AvailableModesResponse& from) { AvailableModesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AvailableModesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.AvailableModesResponse"; }

 protected:
  explicit AvailableModesResponse(::google::protobuf::Arena* arena);
  AvailableModesResponse(::google::protobuf::Arena* arena, const AvailableModesResponse& from);
  AvailableModesResponse(::google::protobuf::Arena* arena, AvailableModesResponse&& from) noexcept
      : AvailableModesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvailableModesFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.striker.AvailableMode available_modes = 1;
  int available_modes_size() const;
  private:
  int _internal_available_modes_size() const;

  public:
  void clear_available_modes() ;
  ::mavsdk::rpc::striker::AvailableMode* mutable_available_modes(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>* mutable_available_modes();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>& _internal_available_modes() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>* _internal_mutable_available_modes();
  public:
  const ::mavsdk::rpc::striker::AvailableMode& available_modes(int index) const;
  ::mavsdk::rpc::striker::AvailableMode* add_available_modes();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>& available_modes() const;
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.AvailableModesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AvailableModesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::striker::AvailableMode > available_modes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};
// -------------------------------------------------------------------

class ActuatorServosStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.striker.ActuatorServosStatusResponse) */ {
 public:
  inline ActuatorServosStatusResponse() : ActuatorServosStatusResponse(nullptr) {}
  ~ActuatorServosStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActuatorServosStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActuatorServosStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActuatorServosStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActuatorServosStatusResponse(const ActuatorServosStatusResponse& from) : ActuatorServosStatusResponse(nullptr, from) {}
  inline ActuatorServosStatusResponse(ActuatorServosStatusResponse&& from) noexcept
      : ActuatorServosStatusResponse(nullptr, std::move(from)) {}
  inline ActuatorServosStatusResponse& operator=(const ActuatorServosStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActuatorServosStatusResponse& operator=(ActuatorServosStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActuatorServosStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActuatorServosStatusResponse* internal_default_instance() {
    return reinterpret_cast<const ActuatorServosStatusResponse*>(
        &_ActuatorServosStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ActuatorServosStatusResponse& a, ActuatorServosStatusResponse& b) { a.Swap(&b); }
  inline void Swap(ActuatorServosStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActuatorServosStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActuatorServosStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActuatorServosStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActuatorServosStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActuatorServosStatusResponse& from) { ActuatorServosStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActuatorServosStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.striker.ActuatorServosStatusResponse"; }

 protected:
  explicit ActuatorServosStatusResponse(::google::protobuf::Arena* arena);
  ActuatorServosStatusResponse(::google::protobuf::Arena* arena, const ActuatorServosStatusResponse& from);
  ActuatorServosStatusResponse(::google::protobuf::Arena* arena, ActuatorServosStatusResponse&& from) noexcept
      : ActuatorServosStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActuatorServosStatusFieldNumber = 1,
  };
  // .mavsdk.rpc.striker.ActuatorServosStatus actuator_servos_status = 1;
  bool has_actuator_servos_status() const;
  void clear_actuator_servos_status() ;
  const ::mavsdk::rpc::striker::ActuatorServosStatus& actuator_servos_status() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::striker::ActuatorServosStatus* release_actuator_servos_status();
  ::mavsdk::rpc::striker::ActuatorServosStatus* mutable_actuator_servos_status();
  void set_allocated_actuator_servos_status(::mavsdk::rpc::striker::ActuatorServosStatus* value);
  void unsafe_arena_set_allocated_actuator_servos_status(::mavsdk::rpc::striker::ActuatorServosStatus* value);
  ::mavsdk::rpc::striker::ActuatorServosStatus* unsafe_arena_release_actuator_servos_status();

  private:
  const ::mavsdk::rpc::striker::ActuatorServosStatus& _internal_actuator_servos_status() const;
  ::mavsdk::rpc::striker::ActuatorServosStatus* _internal_mutable_actuator_servos_status();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.striker.ActuatorServosStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActuatorServosStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::striker::ActuatorServosStatus* actuator_servos_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_striker_2fstriker_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubscribeHeartbeatRequest

// -------------------------------------------------------------------

// HeartbeatResponse

// .mavsdk.rpc.striker.Heartbeat heartbeat = 1;
inline bool HeartbeatResponse::has_heartbeat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heartbeat_ != nullptr);
  return value;
}
inline void HeartbeatResponse::clear_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.heartbeat_ != nullptr) _impl_.heartbeat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::Heartbeat& HeartbeatResponse::_internal_heartbeat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::Heartbeat* p = _impl_.heartbeat_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::Heartbeat&>(::mavsdk::rpc::striker::_Heartbeat_default_instance_);
}
inline const ::mavsdk::rpc::striker::Heartbeat& HeartbeatResponse::heartbeat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.HeartbeatResponse.heartbeat)
  return _internal_heartbeat();
}
inline void HeartbeatResponse::unsafe_arena_set_allocated_heartbeat(::mavsdk::rpc::striker::Heartbeat* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.heartbeat_);
  }
  _impl_.heartbeat_ = reinterpret_cast<::mavsdk::rpc::striker::Heartbeat*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.HeartbeatResponse.heartbeat)
}
inline ::mavsdk::rpc::striker::Heartbeat* HeartbeatResponse::release_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::Heartbeat* released = _impl_.heartbeat_;
  _impl_.heartbeat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::Heartbeat* HeartbeatResponse::unsafe_arena_release_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.HeartbeatResponse.heartbeat)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::Heartbeat* temp = _impl_.heartbeat_;
  _impl_.heartbeat_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::Heartbeat* HeartbeatResponse::_internal_mutable_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.heartbeat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::Heartbeat>(GetArena());
    _impl_.heartbeat_ = reinterpret_cast<::mavsdk::rpc::striker::Heartbeat*>(p);
  }
  return _impl_.heartbeat_;
}
inline ::mavsdk::rpc::striker::Heartbeat* HeartbeatResponse::mutable_heartbeat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::Heartbeat* _msg = _internal_mutable_heartbeat();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.HeartbeatResponse.heartbeat)
  return _msg;
}
inline void HeartbeatResponse::set_allocated_heartbeat(::mavsdk::rpc::striker::Heartbeat* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.heartbeat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.heartbeat_ = reinterpret_cast<::mavsdk::rpc::striker::Heartbeat*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.HeartbeatResponse.heartbeat)
}

// -------------------------------------------------------------------

// SubscribeSysStatusRequest

// -------------------------------------------------------------------

// SysStatusResponse

// .mavsdk.rpc.striker.SysStatus sys_status = 1;
inline bool SysStatusResponse::has_sys_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sys_status_ != nullptr);
  return value;
}
inline void SysStatusResponse::clear_sys_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sys_status_ != nullptr) _impl_.sys_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::SysStatus& SysStatusResponse::_internal_sys_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::SysStatus* p = _impl_.sys_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::SysStatus&>(::mavsdk::rpc::striker::_SysStatus_default_instance_);
}
inline const ::mavsdk::rpc::striker::SysStatus& SysStatusResponse::sys_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatusResponse.sys_status)
  return _internal_sys_status();
}
inline void SysStatusResponse::unsafe_arena_set_allocated_sys_status(::mavsdk::rpc::striker::SysStatus* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sys_status_);
  }
  _impl_.sys_status_ = reinterpret_cast<::mavsdk::rpc::striker::SysStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.SysStatusResponse.sys_status)
}
inline ::mavsdk::rpc::striker::SysStatus* SysStatusResponse::release_sys_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::SysStatus* released = _impl_.sys_status_;
  _impl_.sys_status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::SysStatus* SysStatusResponse::unsafe_arena_release_sys_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.SysStatusResponse.sys_status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::SysStatus* temp = _impl_.sys_status_;
  _impl_.sys_status_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::SysStatus* SysStatusResponse::_internal_mutable_sys_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sys_status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::SysStatus>(GetArena());
    _impl_.sys_status_ = reinterpret_cast<::mavsdk::rpc::striker::SysStatus*>(p);
  }
  return _impl_.sys_status_;
}
inline ::mavsdk::rpc::striker::SysStatus* SysStatusResponse::mutable_sys_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::SysStatus* _msg = _internal_mutable_sys_status();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.SysStatusResponse.sys_status)
  return _msg;
}
inline void SysStatusResponse::set_allocated_sys_status(::mavsdk::rpc::striker::SysStatus* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sys_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sys_status_ = reinterpret_cast<::mavsdk::rpc::striker::SysStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.SysStatusResponse.sys_status)
}

// -------------------------------------------------------------------

// SubscribeRcChannelRequest

// -------------------------------------------------------------------

// RcChannelResponse

// .mavsdk.rpc.striker.RcChannel rc_channel = 1;
inline bool RcChannelResponse::has_rc_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rc_channel_ != nullptr);
  return value;
}
inline void RcChannelResponse::clear_rc_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rc_channel_ != nullptr) _impl_.rc_channel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::RcChannel& RcChannelResponse::_internal_rc_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::RcChannel* p = _impl_.rc_channel_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::RcChannel&>(::mavsdk::rpc::striker::_RcChannel_default_instance_);
}
inline const ::mavsdk::rpc::striker::RcChannel& RcChannelResponse::rc_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannelResponse.rc_channel)
  return _internal_rc_channel();
}
inline void RcChannelResponse::unsafe_arena_set_allocated_rc_channel(::mavsdk::rpc::striker::RcChannel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rc_channel_);
  }
  _impl_.rc_channel_ = reinterpret_cast<::mavsdk::rpc::striker::RcChannel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.RcChannelResponse.rc_channel)
}
inline ::mavsdk::rpc::striker::RcChannel* RcChannelResponse::release_rc_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::RcChannel* released = _impl_.rc_channel_;
  _impl_.rc_channel_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::RcChannel* RcChannelResponse::unsafe_arena_release_rc_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.RcChannelResponse.rc_channel)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::RcChannel* temp = _impl_.rc_channel_;
  _impl_.rc_channel_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::RcChannel* RcChannelResponse::_internal_mutable_rc_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rc_channel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::RcChannel>(GetArena());
    _impl_.rc_channel_ = reinterpret_cast<::mavsdk::rpc::striker::RcChannel*>(p);
  }
  return _impl_.rc_channel_;
}
inline ::mavsdk::rpc::striker::RcChannel* RcChannelResponse::mutable_rc_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::RcChannel* _msg = _internal_mutable_rc_channel();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.RcChannelResponse.rc_channel)
  return _msg;
}
inline void RcChannelResponse::set_allocated_rc_channel(::mavsdk::rpc::striker::RcChannel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.rc_channel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rc_channel_ = reinterpret_cast<::mavsdk::rpc::striker::RcChannel*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.RcChannelResponse.rc_channel)
}

// -------------------------------------------------------------------

// SubscribeMagnitometerRequest

// -------------------------------------------------------------------

// MagnitometerResponse

// .mavsdk.rpc.striker.Magnitometer magnitometer = 1;
inline bool MagnitometerResponse::has_magnitometer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.magnitometer_ != nullptr);
  return value;
}
inline void MagnitometerResponse::clear_magnitometer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.magnitometer_ != nullptr) _impl_.magnitometer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::Magnitometer& MagnitometerResponse::_internal_magnitometer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::Magnitometer* p = _impl_.magnitometer_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::Magnitometer&>(::mavsdk::rpc::striker::_Magnitometer_default_instance_);
}
inline const ::mavsdk::rpc::striker::Magnitometer& MagnitometerResponse::magnitometer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.MagnitometerResponse.magnitometer)
  return _internal_magnitometer();
}
inline void MagnitometerResponse::unsafe_arena_set_allocated_magnitometer(::mavsdk::rpc::striker::Magnitometer* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.magnitometer_);
  }
  _impl_.magnitometer_ = reinterpret_cast<::mavsdk::rpc::striker::Magnitometer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.MagnitometerResponse.magnitometer)
}
inline ::mavsdk::rpc::striker::Magnitometer* MagnitometerResponse::release_magnitometer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::Magnitometer* released = _impl_.magnitometer_;
  _impl_.magnitometer_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::Magnitometer* MagnitometerResponse::unsafe_arena_release_magnitometer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.MagnitometerResponse.magnitometer)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::Magnitometer* temp = _impl_.magnitometer_;
  _impl_.magnitometer_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::Magnitometer* MagnitometerResponse::_internal_mutable_magnitometer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.magnitometer_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::Magnitometer>(GetArena());
    _impl_.magnitometer_ = reinterpret_cast<::mavsdk::rpc::striker::Magnitometer*>(p);
  }
  return _impl_.magnitometer_;
}
inline ::mavsdk::rpc::striker::Magnitometer* MagnitometerResponse::mutable_magnitometer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::Magnitometer* _msg = _internal_mutable_magnitometer();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.MagnitometerResponse.magnitometer)
  return _msg;
}
inline void MagnitometerResponse::set_allocated_magnitometer(::mavsdk::rpc::striker::Magnitometer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.magnitometer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.magnitometer_ = reinterpret_cast<::mavsdk::rpc::striker::Magnitometer*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.MagnitometerResponse.magnitometer)
}

// -------------------------------------------------------------------

// SubscribeBatteryVoltagesRequest

// -------------------------------------------------------------------

// BatteryVoltagesResponse

// .mavsdk.rpc.striker.BatteryVoltages battery_voltages = 1;
inline bool BatteryVoltagesResponse::has_battery_voltages() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.battery_voltages_ != nullptr);
  return value;
}
inline void BatteryVoltagesResponse::clear_battery_voltages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.battery_voltages_ != nullptr) _impl_.battery_voltages_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::BatteryVoltages& BatteryVoltagesResponse::_internal_battery_voltages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::BatteryVoltages* p = _impl_.battery_voltages_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::BatteryVoltages&>(::mavsdk::rpc::striker::_BatteryVoltages_default_instance_);
}
inline const ::mavsdk::rpc::striker::BatteryVoltages& BatteryVoltagesResponse::battery_voltages() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.BatteryVoltagesResponse.battery_voltages)
  return _internal_battery_voltages();
}
inline void BatteryVoltagesResponse::unsafe_arena_set_allocated_battery_voltages(::mavsdk::rpc::striker::BatteryVoltages* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.battery_voltages_);
  }
  _impl_.battery_voltages_ = reinterpret_cast<::mavsdk::rpc::striker::BatteryVoltages*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.BatteryVoltagesResponse.battery_voltages)
}
inline ::mavsdk::rpc::striker::BatteryVoltages* BatteryVoltagesResponse::release_battery_voltages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::BatteryVoltages* released = _impl_.battery_voltages_;
  _impl_.battery_voltages_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::BatteryVoltages* BatteryVoltagesResponse::unsafe_arena_release_battery_voltages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.BatteryVoltagesResponse.battery_voltages)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::BatteryVoltages* temp = _impl_.battery_voltages_;
  _impl_.battery_voltages_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::BatteryVoltages* BatteryVoltagesResponse::_internal_mutable_battery_voltages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.battery_voltages_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::BatteryVoltages>(GetArena());
    _impl_.battery_voltages_ = reinterpret_cast<::mavsdk::rpc::striker::BatteryVoltages*>(p);
  }
  return _impl_.battery_voltages_;
}
inline ::mavsdk::rpc::striker::BatteryVoltages* BatteryVoltagesResponse::mutable_battery_voltages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::BatteryVoltages* _msg = _internal_mutable_battery_voltages();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.BatteryVoltagesResponse.battery_voltages)
  return _msg;
}
inline void BatteryVoltagesResponse::set_allocated_battery_voltages(::mavsdk::rpc::striker::BatteryVoltages* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.battery_voltages_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.battery_voltages_ = reinterpret_cast<::mavsdk::rpc::striker::BatteryVoltages*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.BatteryVoltagesResponse.battery_voltages)
}

// -------------------------------------------------------------------

// SubscribeAvailableModesRequest

// -------------------------------------------------------------------

// AvailableModesResponse

// repeated .mavsdk.rpc.striker.AvailableMode available_modes = 1;
inline int AvailableModesResponse::_internal_available_modes_size() const {
  return _internal_available_modes().size();
}
inline int AvailableModesResponse::available_modes_size() const {
  return _internal_available_modes_size();
}
inline void AvailableModesResponse::clear_available_modes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_modes_.Clear();
}
inline ::mavsdk::rpc::striker::AvailableMode* AvailableModesResponse::mutable_available_modes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.AvailableModesResponse.available_modes)
  return _internal_mutable_available_modes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>* AvailableModesResponse::mutable_available_modes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.striker.AvailableModesResponse.available_modes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_available_modes();
}
inline const ::mavsdk::rpc::striker::AvailableMode& AvailableModesResponse::available_modes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableModesResponse.available_modes)
  return _internal_available_modes().Get(index);
}
inline ::mavsdk::rpc::striker::AvailableMode* AvailableModesResponse::add_available_modes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::striker::AvailableMode* _add = _internal_mutable_available_modes()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.striker.AvailableModesResponse.available_modes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>& AvailableModesResponse::available_modes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.striker.AvailableModesResponse.available_modes)
  return _internal_available_modes();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>&
AvailableModesResponse::_internal_available_modes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_modes_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::striker::AvailableMode>*
AvailableModesResponse::_internal_mutable_available_modes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.available_modes_;
}

// -------------------------------------------------------------------

// SetManualFlightModeResponse

// .mavsdk.rpc.striker.StrikerResult striker_result = 1;
inline bool SetManualFlightModeResponse::has_striker_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.striker_result_ != nullptr);
  return value;
}
inline void SetManualFlightModeResponse::clear_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ != nullptr) _impl_.striker_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::StrikerResult& SetManualFlightModeResponse::_internal_striker_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::StrikerResult* p = _impl_.striker_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::StrikerResult&>(::mavsdk::rpc::striker::_StrikerResult_default_instance_);
}
inline const ::mavsdk::rpc::striker::StrikerResult& SetManualFlightModeResponse::striker_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetManualFlightModeResponse.striker_result)
  return _internal_striker_result();
}
inline void SetManualFlightModeResponse::unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.striker_result_);
  }
  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.SetManualFlightModeResponse.striker_result)
}
inline ::mavsdk::rpc::striker::StrikerResult* SetManualFlightModeResponse::release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* released = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetManualFlightModeResponse::unsafe_arena_release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.SetManualFlightModeResponse.striker_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* temp = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetManualFlightModeResponse::_internal_mutable_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::StrikerResult>(GetArena());
    _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(p);
  }
  return _impl_.striker_result_;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetManualFlightModeResponse::mutable_striker_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* _msg = _internal_mutable_striker_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.SetManualFlightModeResponse.striker_result)
  return _msg;
}
inline void SetManualFlightModeResponse::set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.striker_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.SetManualFlightModeResponse.striker_result)
}

// -------------------------------------------------------------------

// SubscribeActuatorServosStatusRequest

// -------------------------------------------------------------------

// ActuatorServosStatusResponse

// .mavsdk.rpc.striker.ActuatorServosStatus actuator_servos_status = 1;
inline bool ActuatorServosStatusResponse::has_actuator_servos_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.actuator_servos_status_ != nullptr);
  return value;
}
inline void ActuatorServosStatusResponse::clear_actuator_servos_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.actuator_servos_status_ != nullptr) _impl_.actuator_servos_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::ActuatorServosStatus& ActuatorServosStatusResponse::_internal_actuator_servos_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::ActuatorServosStatus* p = _impl_.actuator_servos_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::ActuatorServosStatus&>(::mavsdk::rpc::striker::_ActuatorServosStatus_default_instance_);
}
inline const ::mavsdk::rpc::striker::ActuatorServosStatus& ActuatorServosStatusResponse::actuator_servos_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.ActuatorServosStatusResponse.actuator_servos_status)
  return _internal_actuator_servos_status();
}
inline void ActuatorServosStatusResponse::unsafe_arena_set_allocated_actuator_servos_status(::mavsdk::rpc::striker::ActuatorServosStatus* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.actuator_servos_status_);
  }
  _impl_.actuator_servos_status_ = reinterpret_cast<::mavsdk::rpc::striker::ActuatorServosStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.ActuatorServosStatusResponse.actuator_servos_status)
}
inline ::mavsdk::rpc::striker::ActuatorServosStatus* ActuatorServosStatusResponse::release_actuator_servos_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::ActuatorServosStatus* released = _impl_.actuator_servos_status_;
  _impl_.actuator_servos_status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::ActuatorServosStatus* ActuatorServosStatusResponse::unsafe_arena_release_actuator_servos_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.ActuatorServosStatusResponse.actuator_servos_status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::ActuatorServosStatus* temp = _impl_.actuator_servos_status_;
  _impl_.actuator_servos_status_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::ActuatorServosStatus* ActuatorServosStatusResponse::_internal_mutable_actuator_servos_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.actuator_servos_status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::ActuatorServosStatus>(GetArena());
    _impl_.actuator_servos_status_ = reinterpret_cast<::mavsdk::rpc::striker::ActuatorServosStatus*>(p);
  }
  return _impl_.actuator_servos_status_;
}
inline ::mavsdk::rpc::striker::ActuatorServosStatus* ActuatorServosStatusResponse::mutable_actuator_servos_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::ActuatorServosStatus* _msg = _internal_mutable_actuator_servos_status();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.ActuatorServosStatusResponse.actuator_servos_status)
  return _msg;
}
inline void ActuatorServosStatusResponse::set_allocated_actuator_servos_status(::mavsdk::rpc::striker::ActuatorServosStatus* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.actuator_servos_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.actuator_servos_status_ = reinterpret_cast<::mavsdk::rpc::striker::ActuatorServosStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.ActuatorServosStatusResponse.actuator_servos_status)
}

// -------------------------------------------------------------------

// SetRateActuatorServosStatusRequest

// double rate_hz = 1;
inline void SetRateActuatorServosStatusRequest::clear_rate_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_hz_ = 0;
}
inline double SetRateActuatorServosStatusRequest::rate_hz() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetRateActuatorServosStatusRequest.rate_hz)
  return _internal_rate_hz();
}
inline void SetRateActuatorServosStatusRequest::set_rate_hz(double value) {
  _internal_set_rate_hz(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SetRateActuatorServosStatusRequest.rate_hz)
}
inline double SetRateActuatorServosStatusRequest::_internal_rate_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rate_hz_;
}
inline void SetRateActuatorServosStatusRequest::_internal_set_rate_hz(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_hz_ = value;
}

// -------------------------------------------------------------------

// SetRateActuatorServosStatusResponse

// .mavsdk.rpc.striker.StrikerResult striker_result = 1;
inline bool SetRateActuatorServosStatusResponse::has_striker_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.striker_result_ != nullptr);
  return value;
}
inline void SetRateActuatorServosStatusResponse::clear_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ != nullptr) _impl_.striker_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::StrikerResult& SetRateActuatorServosStatusResponse::_internal_striker_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::StrikerResult* p = _impl_.striker_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::StrikerResult&>(::mavsdk::rpc::striker::_StrikerResult_default_instance_);
}
inline const ::mavsdk::rpc::striker::StrikerResult& SetRateActuatorServosStatusResponse::striker_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse.striker_result)
  return _internal_striker_result();
}
inline void SetRateActuatorServosStatusResponse::unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.striker_result_);
  }
  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse.striker_result)
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateActuatorServosStatusResponse::release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* released = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateActuatorServosStatusResponse::unsafe_arena_release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse.striker_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* temp = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateActuatorServosStatusResponse::_internal_mutable_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::StrikerResult>(GetArena());
    _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(p);
  }
  return _impl_.striker_result_;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateActuatorServosStatusResponse::mutable_striker_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* _msg = _internal_mutable_striker_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse.striker_result)
  return _msg;
}
inline void SetRateActuatorServosStatusResponse::set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.striker_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.SetRateActuatorServosStatusResponse.striker_result)
}

// -------------------------------------------------------------------

// RequestAvailableModesRequest

// -------------------------------------------------------------------

// RequestAvailableModesResponse

// .mavsdk.rpc.striker.StrikerResult striker_result = 1;
inline bool RequestAvailableModesResponse::has_striker_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.striker_result_ != nullptr);
  return value;
}
inline void RequestAvailableModesResponse::clear_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ != nullptr) _impl_.striker_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::StrikerResult& RequestAvailableModesResponse::_internal_striker_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::StrikerResult* p = _impl_.striker_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::StrikerResult&>(::mavsdk::rpc::striker::_StrikerResult_default_instance_);
}
inline const ::mavsdk::rpc::striker::StrikerResult& RequestAvailableModesResponse::striker_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RequestAvailableModesResponse.striker_result)
  return _internal_striker_result();
}
inline void RequestAvailableModesResponse::unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.striker_result_);
  }
  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.RequestAvailableModesResponse.striker_result)
}
inline ::mavsdk::rpc::striker::StrikerResult* RequestAvailableModesResponse::release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* released = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::StrikerResult* RequestAvailableModesResponse::unsafe_arena_release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.RequestAvailableModesResponse.striker_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* temp = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::StrikerResult* RequestAvailableModesResponse::_internal_mutable_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::StrikerResult>(GetArena());
    _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(p);
  }
  return _impl_.striker_result_;
}
inline ::mavsdk::rpc::striker::StrikerResult* RequestAvailableModesResponse::mutable_striker_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* _msg = _internal_mutable_striker_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.RequestAvailableModesResponse.striker_result)
  return _msg;
}
inline void RequestAvailableModesResponse::set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.striker_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.RequestAvailableModesResponse.striker_result)
}

// -------------------------------------------------------------------

// SubscribeCaaConfidenceLevelRequest

// -------------------------------------------------------------------

// CaaConfidenceLevelResponse

// .mavsdk.rpc.striker.CaaConfidenceLevel caa_confidence_level = 1;
inline bool CaaConfidenceLevelResponse::has_caa_confidence_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.caa_confidence_level_ != nullptr);
  return value;
}
inline void CaaConfidenceLevelResponse::clear_caa_confidence_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.caa_confidence_level_ != nullptr) _impl_.caa_confidence_level_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::CaaConfidenceLevel& CaaConfidenceLevelResponse::_internal_caa_confidence_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::CaaConfidenceLevel* p = _impl_.caa_confidence_level_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::CaaConfidenceLevel&>(::mavsdk::rpc::striker::_CaaConfidenceLevel_default_instance_);
}
inline const ::mavsdk::rpc::striker::CaaConfidenceLevel& CaaConfidenceLevelResponse::caa_confidence_level() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.CaaConfidenceLevelResponse.caa_confidence_level)
  return _internal_caa_confidence_level();
}
inline void CaaConfidenceLevelResponse::unsafe_arena_set_allocated_caa_confidence_level(::mavsdk::rpc::striker::CaaConfidenceLevel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.caa_confidence_level_);
  }
  _impl_.caa_confidence_level_ = reinterpret_cast<::mavsdk::rpc::striker::CaaConfidenceLevel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.CaaConfidenceLevelResponse.caa_confidence_level)
}
inline ::mavsdk::rpc::striker::CaaConfidenceLevel* CaaConfidenceLevelResponse::release_caa_confidence_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::CaaConfidenceLevel* released = _impl_.caa_confidence_level_;
  _impl_.caa_confidence_level_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::CaaConfidenceLevel* CaaConfidenceLevelResponse::unsafe_arena_release_caa_confidence_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.CaaConfidenceLevelResponse.caa_confidence_level)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::CaaConfidenceLevel* temp = _impl_.caa_confidence_level_;
  _impl_.caa_confidence_level_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::CaaConfidenceLevel* CaaConfidenceLevelResponse::_internal_mutable_caa_confidence_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.caa_confidence_level_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::CaaConfidenceLevel>(GetArena());
    _impl_.caa_confidence_level_ = reinterpret_cast<::mavsdk::rpc::striker::CaaConfidenceLevel*>(p);
  }
  return _impl_.caa_confidence_level_;
}
inline ::mavsdk::rpc::striker::CaaConfidenceLevel* CaaConfidenceLevelResponse::mutable_caa_confidence_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::CaaConfidenceLevel* _msg = _internal_mutable_caa_confidence_level();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.CaaConfidenceLevelResponse.caa_confidence_level)
  return _msg;
}
inline void CaaConfidenceLevelResponse::set_allocated_caa_confidence_level(::mavsdk::rpc::striker::CaaConfidenceLevel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.caa_confidence_level_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.caa_confidence_level_ = reinterpret_cast<::mavsdk::rpc::striker::CaaConfidenceLevel*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.CaaConfidenceLevelResponse.caa_confidence_level)
}

// -------------------------------------------------------------------

// SetRateCaaConfidenceLevelRequest

// double rate_hz = 1;
inline void SetRateCaaConfidenceLevelRequest::clear_rate_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_hz_ = 0;
}
inline double SetRateCaaConfidenceLevelRequest::rate_hz() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetRateCaaConfidenceLevelRequest.rate_hz)
  return _internal_rate_hz();
}
inline void SetRateCaaConfidenceLevelRequest::set_rate_hz(double value) {
  _internal_set_rate_hz(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SetRateCaaConfidenceLevelRequest.rate_hz)
}
inline double SetRateCaaConfidenceLevelRequest::_internal_rate_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rate_hz_;
}
inline void SetRateCaaConfidenceLevelRequest::_internal_set_rate_hz(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_hz_ = value;
}

// -------------------------------------------------------------------

// SetRateCaaConfidenceLevelResponse

// .mavsdk.rpc.striker.StrikerResult striker_result = 1;
inline bool SetRateCaaConfidenceLevelResponse::has_striker_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.striker_result_ != nullptr);
  return value;
}
inline void SetRateCaaConfidenceLevelResponse::clear_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ != nullptr) _impl_.striker_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::striker::StrikerResult& SetRateCaaConfidenceLevelResponse::_internal_striker_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::striker::StrikerResult* p = _impl_.striker_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::striker::StrikerResult&>(::mavsdk::rpc::striker::_StrikerResult_default_instance_);
}
inline const ::mavsdk::rpc::striker::StrikerResult& SetRateCaaConfidenceLevelResponse::striker_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse.striker_result)
  return _internal_striker_result();
}
inline void SetRateCaaConfidenceLevelResponse::unsafe_arena_set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.striker_result_);
  }
  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse.striker_result)
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateCaaConfidenceLevelResponse::release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* released = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateCaaConfidenceLevelResponse::unsafe_arena_release_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse.striker_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* temp = _impl_.striker_result_;
  _impl_.striker_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateCaaConfidenceLevelResponse::_internal_mutable_striker_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.striker_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::striker::StrikerResult>(GetArena());
    _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(p);
  }
  return _impl_.striker_result_;
}
inline ::mavsdk::rpc::striker::StrikerResult* SetRateCaaConfidenceLevelResponse::mutable_striker_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::striker::StrikerResult* _msg = _internal_mutable_striker_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse.striker_result)
  return _msg;
}
inline void SetRateCaaConfidenceLevelResponse::set_allocated_striker_result(::mavsdk::rpc::striker::StrikerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.striker_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.striker_result_ = reinterpret_cast<::mavsdk::rpc::striker::StrikerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.SetRateCaaConfidenceLevelResponse.striker_result)
}

// -------------------------------------------------------------------

// ActuatorServosStatus

// uint64 time_usec = 1;
inline void ActuatorServosStatus::clear_time_usec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_usec_ = ::uint64_t{0u};
}
inline ::uint64_t ActuatorServosStatus::time_usec() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.ActuatorServosStatus.time_usec)
  return _internal_time_usec();
}
inline void ActuatorServosStatus::set_time_usec(::uint64_t value) {
  _internal_set_time_usec(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.ActuatorServosStatus.time_usec)
}
inline ::uint64_t ActuatorServosStatus::_internal_time_usec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_usec_;
}
inline void ActuatorServosStatus::_internal_set_time_usec(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_usec_ = value;
}

// repeated float control = 2;
inline int ActuatorServosStatus::_internal_control_size() const {
  return _internal_control().size();
}
inline int ActuatorServosStatus::control_size() const {
  return _internal_control_size();
}
inline void ActuatorServosStatus::clear_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_.Clear();
}
inline float ActuatorServosStatus::control(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.ActuatorServosStatus.control)
  return _internal_control().Get(index);
}
inline void ActuatorServosStatus::set_control(int index, float value) {
  _internal_mutable_control()->Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.ActuatorServosStatus.control)
}
inline void ActuatorServosStatus::add_control(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_control()->Add(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.striker.ActuatorServosStatus.control)
}
inline const ::google::protobuf::RepeatedField<float>& ActuatorServosStatus::control() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.striker.ActuatorServosStatus.control)
  return _internal_control();
}
inline ::google::protobuf::RepeatedField<float>* ActuatorServosStatus::mutable_control()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.striker.ActuatorServosStatus.control)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_control();
}
inline const ::google::protobuf::RepeatedField<float>&
ActuatorServosStatus::_internal_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_;
}
inline ::google::protobuf::RepeatedField<float>* ActuatorServosStatus::_internal_mutable_control() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.control_;
}

// -------------------------------------------------------------------

// CaaConfidenceLevel

// uint64 time_usec = 1;
inline void CaaConfidenceLevel::clear_time_usec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_usec_ = ::uint64_t{0u};
}
inline ::uint64_t CaaConfidenceLevel::time_usec() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.CaaConfidenceLevel.time_usec)
  return _internal_time_usec();
}
inline void CaaConfidenceLevel::set_time_usec(::uint64_t value) {
  _internal_set_time_usec(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.CaaConfidenceLevel.time_usec)
}
inline ::uint64_t CaaConfidenceLevel::_internal_time_usec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_usec_;
}
inline void CaaConfidenceLevel::_internal_set_time_usec(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_usec_ = value;
}

// float confidence_level = 2;
inline void CaaConfidenceLevel::clear_confidence_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_level_ = 0;
}
inline float CaaConfidenceLevel::confidence_level() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.CaaConfidenceLevel.confidence_level)
  return _internal_confidence_level();
}
inline void CaaConfidenceLevel::set_confidence_level(float value) {
  _internal_set_confidence_level(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.CaaConfidenceLevel.confidence_level)
}
inline float CaaConfidenceLevel::_internal_confidence_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confidence_level_;
}
inline void CaaConfidenceLevel::_internal_set_confidence_level(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_level_ = value;
}

// -------------------------------------------------------------------

// Heartbeat

// uint32 custom_mode = 1;
inline void Heartbeat::clear_custom_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_mode_ = 0u;
}
inline ::uint32_t Heartbeat::custom_mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Heartbeat.custom_mode)
  return _internal_custom_mode();
}
inline void Heartbeat::set_custom_mode(::uint32_t value) {
  _internal_set_custom_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Heartbeat.custom_mode)
}
inline ::uint32_t Heartbeat::_internal_custom_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_mode_;
}
inline void Heartbeat::_internal_set_custom_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_mode_ = value;
}

// uint32 type = 2;
inline void Heartbeat::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0u;
}
inline ::uint32_t Heartbeat::type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Heartbeat.type)
  return _internal_type();
}
inline void Heartbeat::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Heartbeat.type)
}
inline ::uint32_t Heartbeat::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void Heartbeat::_internal_set_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// uint32 autopilot = 3;
inline void Heartbeat::clear_autopilot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.autopilot_ = 0u;
}
inline ::uint32_t Heartbeat::autopilot() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Heartbeat.autopilot)
  return _internal_autopilot();
}
inline void Heartbeat::set_autopilot(::uint32_t value) {
  _internal_set_autopilot(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Heartbeat.autopilot)
}
inline ::uint32_t Heartbeat::_internal_autopilot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.autopilot_;
}
inline void Heartbeat::_internal_set_autopilot(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.autopilot_ = value;
}

// uint32 base_mode = 4;
inline void Heartbeat::clear_base_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_mode_ = 0u;
}
inline ::uint32_t Heartbeat::base_mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Heartbeat.base_mode)
  return _internal_base_mode();
}
inline void Heartbeat::set_base_mode(::uint32_t value) {
  _internal_set_base_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Heartbeat.base_mode)
}
inline ::uint32_t Heartbeat::_internal_base_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_mode_;
}
inline void Heartbeat::_internal_set_base_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_mode_ = value;
}

// uint32 system_status = 5;
inline void Heartbeat::clear_system_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_status_ = 0u;
}
inline ::uint32_t Heartbeat::system_status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Heartbeat.system_status)
  return _internal_system_status();
}
inline void Heartbeat::set_system_status(::uint32_t value) {
  _internal_set_system_status(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Heartbeat.system_status)
}
inline ::uint32_t Heartbeat::_internal_system_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.system_status_;
}
inline void Heartbeat::_internal_set_system_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_status_ = value;
}

// uint32 mavlink_version = 6;
inline void Heartbeat::clear_mavlink_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mavlink_version_ = 0u;
}
inline ::uint32_t Heartbeat::mavlink_version() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Heartbeat.mavlink_version)
  return _internal_mavlink_version();
}
inline void Heartbeat::set_mavlink_version(::uint32_t value) {
  _internal_set_mavlink_version(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Heartbeat.mavlink_version)
}
inline ::uint32_t Heartbeat::_internal_mavlink_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mavlink_version_;
}
inline void Heartbeat::_internal_set_mavlink_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mavlink_version_ = value;
}

// -------------------------------------------------------------------

// SysStatus

// uint32 onboard_control_sensors_present = 1;
inline void SysStatus::clear_onboard_control_sensors_present() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_present_ = 0u;
}
inline ::uint32_t SysStatus::onboard_control_sensors_present() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_present)
  return _internal_onboard_control_sensors_present();
}
inline void SysStatus::set_onboard_control_sensors_present(::uint32_t value) {
  _internal_set_onboard_control_sensors_present(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_present)
}
inline ::uint32_t SysStatus::_internal_onboard_control_sensors_present() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onboard_control_sensors_present_;
}
inline void SysStatus::_internal_set_onboard_control_sensors_present(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_present_ = value;
}

// uint32 onboard_control_sensors_enabled = 2;
inline void SysStatus::clear_onboard_control_sensors_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_enabled_ = 0u;
}
inline ::uint32_t SysStatus::onboard_control_sensors_enabled() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_enabled)
  return _internal_onboard_control_sensors_enabled();
}
inline void SysStatus::set_onboard_control_sensors_enabled(::uint32_t value) {
  _internal_set_onboard_control_sensors_enabled(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_enabled)
}
inline ::uint32_t SysStatus::_internal_onboard_control_sensors_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onboard_control_sensors_enabled_;
}
inline void SysStatus::_internal_set_onboard_control_sensors_enabled(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_enabled_ = value;
}

// uint32 onboard_control_sensors_health = 3;
inline void SysStatus::clear_onboard_control_sensors_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_health_ = 0u;
}
inline ::uint32_t SysStatus::onboard_control_sensors_health() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_health)
  return _internal_onboard_control_sensors_health();
}
inline void SysStatus::set_onboard_control_sensors_health(::uint32_t value) {
  _internal_set_onboard_control_sensors_health(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_health)
}
inline ::uint32_t SysStatus::_internal_onboard_control_sensors_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onboard_control_sensors_health_;
}
inline void SysStatus::_internal_set_onboard_control_sensors_health(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_health_ = value;
}

// uint32 load = 4;
inline void SysStatus::clear_load() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_ = 0u;
}
inline ::uint32_t SysStatus::load() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.load)
  return _internal_load();
}
inline void SysStatus::set_load(::uint32_t value) {
  _internal_set_load(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.load)
}
inline ::uint32_t SysStatus::_internal_load() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.load_;
}
inline void SysStatus::_internal_set_load(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_ = value;
}

// uint32 voltage_battery = 5;
inline void SysStatus::clear_voltage_battery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voltage_battery_ = 0u;
}
inline ::uint32_t SysStatus::voltage_battery() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.voltage_battery)
  return _internal_voltage_battery();
}
inline void SysStatus::set_voltage_battery(::uint32_t value) {
  _internal_set_voltage_battery(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.voltage_battery)
}
inline ::uint32_t SysStatus::_internal_voltage_battery() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voltage_battery_;
}
inline void SysStatus::_internal_set_voltage_battery(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voltage_battery_ = value;
}

// int32 current_battery = 6;
inline void SysStatus::clear_current_battery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_battery_ = 0;
}
inline ::int32_t SysStatus::current_battery() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.current_battery)
  return _internal_current_battery();
}
inline void SysStatus::set_current_battery(::int32_t value) {
  _internal_set_current_battery(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.current_battery)
}
inline ::int32_t SysStatus::_internal_current_battery() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_battery_;
}
inline void SysStatus::_internal_set_current_battery(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_battery_ = value;
}

// uint32 drop_rate_comm = 7;
inline void SysStatus::clear_drop_rate_comm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.drop_rate_comm_ = 0u;
}
inline ::uint32_t SysStatus::drop_rate_comm() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.drop_rate_comm)
  return _internal_drop_rate_comm();
}
inline void SysStatus::set_drop_rate_comm(::uint32_t value) {
  _internal_set_drop_rate_comm(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.drop_rate_comm)
}
inline ::uint32_t SysStatus::_internal_drop_rate_comm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.drop_rate_comm_;
}
inline void SysStatus::_internal_set_drop_rate_comm(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.drop_rate_comm_ = value;
}

// uint32 errors_comm = 8;
inline void SysStatus::clear_errors_comm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_comm_ = 0u;
}
inline ::uint32_t SysStatus::errors_comm() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.errors_comm)
  return _internal_errors_comm();
}
inline void SysStatus::set_errors_comm(::uint32_t value) {
  _internal_set_errors_comm(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.errors_comm)
}
inline ::uint32_t SysStatus::_internal_errors_comm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_comm_;
}
inline void SysStatus::_internal_set_errors_comm(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_comm_ = value;
}

// uint32 errors_count1 = 9;
inline void SysStatus::clear_errors_count1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count1_ = 0u;
}
inline ::uint32_t SysStatus::errors_count1() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.errors_count1)
  return _internal_errors_count1();
}
inline void SysStatus::set_errors_count1(::uint32_t value) {
  _internal_set_errors_count1(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.errors_count1)
}
inline ::uint32_t SysStatus::_internal_errors_count1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_count1_;
}
inline void SysStatus::_internal_set_errors_count1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count1_ = value;
}

// uint32 errors_count2 = 10;
inline void SysStatus::clear_errors_count2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count2_ = 0u;
}
inline ::uint32_t SysStatus::errors_count2() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.errors_count2)
  return _internal_errors_count2();
}
inline void SysStatus::set_errors_count2(::uint32_t value) {
  _internal_set_errors_count2(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.errors_count2)
}
inline ::uint32_t SysStatus::_internal_errors_count2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_count2_;
}
inline void SysStatus::_internal_set_errors_count2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count2_ = value;
}

// uint32 errors_count3 = 11;
inline void SysStatus::clear_errors_count3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count3_ = 0u;
}
inline ::uint32_t SysStatus::errors_count3() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.errors_count3)
  return _internal_errors_count3();
}
inline void SysStatus::set_errors_count3(::uint32_t value) {
  _internal_set_errors_count3(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.errors_count3)
}
inline ::uint32_t SysStatus::_internal_errors_count3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_count3_;
}
inline void SysStatus::_internal_set_errors_count3(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count3_ = value;
}

// uint32 errors_count4 = 12;
inline void SysStatus::clear_errors_count4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count4_ = 0u;
}
inline ::uint32_t SysStatus::errors_count4() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.errors_count4)
  return _internal_errors_count4();
}
inline void SysStatus::set_errors_count4(::uint32_t value) {
  _internal_set_errors_count4(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.errors_count4)
}
inline ::uint32_t SysStatus::_internal_errors_count4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_count4_;
}
inline void SysStatus::_internal_set_errors_count4(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_count4_ = value;
}

// int32 battery_remaining = 13;
inline void SysStatus::clear_battery_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battery_remaining_ = 0;
}
inline ::int32_t SysStatus::battery_remaining() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.battery_remaining)
  return _internal_battery_remaining();
}
inline void SysStatus::set_battery_remaining(::int32_t value) {
  _internal_set_battery_remaining(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.battery_remaining)
}
inline ::int32_t SysStatus::_internal_battery_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.battery_remaining_;
}
inline void SysStatus::_internal_set_battery_remaining(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battery_remaining_ = value;
}

// uint32 onboard_control_sensors_present_extended = 14;
inline void SysStatus::clear_onboard_control_sensors_present_extended() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_present_extended_ = 0u;
}
inline ::uint32_t SysStatus::onboard_control_sensors_present_extended() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_present_extended)
  return _internal_onboard_control_sensors_present_extended();
}
inline void SysStatus::set_onboard_control_sensors_present_extended(::uint32_t value) {
  _internal_set_onboard_control_sensors_present_extended(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_present_extended)
}
inline ::uint32_t SysStatus::_internal_onboard_control_sensors_present_extended() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onboard_control_sensors_present_extended_;
}
inline void SysStatus::_internal_set_onboard_control_sensors_present_extended(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_present_extended_ = value;
}

// uint32 onboard_control_sensors_enabled_extended = 15;
inline void SysStatus::clear_onboard_control_sensors_enabled_extended() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_enabled_extended_ = 0u;
}
inline ::uint32_t SysStatus::onboard_control_sensors_enabled_extended() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_enabled_extended)
  return _internal_onboard_control_sensors_enabled_extended();
}
inline void SysStatus::set_onboard_control_sensors_enabled_extended(::uint32_t value) {
  _internal_set_onboard_control_sensors_enabled_extended(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_enabled_extended)
}
inline ::uint32_t SysStatus::_internal_onboard_control_sensors_enabled_extended() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onboard_control_sensors_enabled_extended_;
}
inline void SysStatus::_internal_set_onboard_control_sensors_enabled_extended(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_enabled_extended_ = value;
}

// uint32 onboard_control_sensors_health_extended = 16;
inline void SysStatus::clear_onboard_control_sensors_health_extended() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_health_extended_ = 0u;
}
inline ::uint32_t SysStatus::onboard_control_sensors_health_extended() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_health_extended)
  return _internal_onboard_control_sensors_health_extended();
}
inline void SysStatus::set_onboard_control_sensors_health_extended(::uint32_t value) {
  _internal_set_onboard_control_sensors_health_extended(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SysStatus.onboard_control_sensors_health_extended)
}
inline ::uint32_t SysStatus::_internal_onboard_control_sensors_health_extended() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onboard_control_sensors_health_extended_;
}
inline void SysStatus::_internal_set_onboard_control_sensors_health_extended(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onboard_control_sensors_health_extended_ = value;
}

// -------------------------------------------------------------------

// RcChannel

// uint32 time_boot_ms = 1 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_time_boot_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_boot_ms_ = 0u;
}
inline ::uint32_t RcChannel::time_boot_ms() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.time_boot_ms)
  return _internal_time_boot_ms();
}
inline void RcChannel::set_time_boot_ms(::uint32_t value) {
  _internal_set_time_boot_ms(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.time_boot_ms)
}
inline ::uint32_t RcChannel::_internal_time_boot_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_boot_ms_;
}
inline void RcChannel::_internal_set_time_boot_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_boot_ms_ = value;
}

// uint32 chan1_raw = 2 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan1_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan1_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan1_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan1_raw)
  return _internal_chan1_raw();
}
inline void RcChannel::set_chan1_raw(::uint32_t value) {
  _internal_set_chan1_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan1_raw)
}
inline ::uint32_t RcChannel::_internal_chan1_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan1_raw_;
}
inline void RcChannel::_internal_set_chan1_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan1_raw_ = value;
}

// uint32 chan2_raw = 3 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan2_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan2_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan2_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan2_raw)
  return _internal_chan2_raw();
}
inline void RcChannel::set_chan2_raw(::uint32_t value) {
  _internal_set_chan2_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan2_raw)
}
inline ::uint32_t RcChannel::_internal_chan2_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan2_raw_;
}
inline void RcChannel::_internal_set_chan2_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan2_raw_ = value;
}

// uint32 chan3_raw = 4 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan3_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan3_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan3_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan3_raw)
  return _internal_chan3_raw();
}
inline void RcChannel::set_chan3_raw(::uint32_t value) {
  _internal_set_chan3_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan3_raw)
}
inline ::uint32_t RcChannel::_internal_chan3_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan3_raw_;
}
inline void RcChannel::_internal_set_chan3_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan3_raw_ = value;
}

// uint32 chan4_raw = 5 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan4_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan4_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan4_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan4_raw)
  return _internal_chan4_raw();
}
inline void RcChannel::set_chan4_raw(::uint32_t value) {
  _internal_set_chan4_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan4_raw)
}
inline ::uint32_t RcChannel::_internal_chan4_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan4_raw_;
}
inline void RcChannel::_internal_set_chan4_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan4_raw_ = value;
}

// uint32 chan5_raw = 6 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan5_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan5_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan5_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan5_raw)
  return _internal_chan5_raw();
}
inline void RcChannel::set_chan5_raw(::uint32_t value) {
  _internal_set_chan5_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan5_raw)
}
inline ::uint32_t RcChannel::_internal_chan5_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan5_raw_;
}
inline void RcChannel::_internal_set_chan5_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan5_raw_ = value;
}

// uint32 chan6_raw = 7 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan6_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan6_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan6_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan6_raw)
  return _internal_chan6_raw();
}
inline void RcChannel::set_chan6_raw(::uint32_t value) {
  _internal_set_chan6_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan6_raw)
}
inline ::uint32_t RcChannel::_internal_chan6_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan6_raw_;
}
inline void RcChannel::_internal_set_chan6_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan6_raw_ = value;
}

// uint32 chan7_raw = 8 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan7_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan7_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan7_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan7_raw)
  return _internal_chan7_raw();
}
inline void RcChannel::set_chan7_raw(::uint32_t value) {
  _internal_set_chan7_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan7_raw)
}
inline ::uint32_t RcChannel::_internal_chan7_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan7_raw_;
}
inline void RcChannel::_internal_set_chan7_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan7_raw_ = value;
}

// uint32 chan8_raw = 9 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan8_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan8_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan8_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan8_raw)
  return _internal_chan8_raw();
}
inline void RcChannel::set_chan8_raw(::uint32_t value) {
  _internal_set_chan8_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan8_raw)
}
inline ::uint32_t RcChannel::_internal_chan8_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan8_raw_;
}
inline void RcChannel::_internal_set_chan8_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan8_raw_ = value;
}

// uint32 chan9_raw = 10 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan9_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan9_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan9_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan9_raw)
  return _internal_chan9_raw();
}
inline void RcChannel::set_chan9_raw(::uint32_t value) {
  _internal_set_chan9_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan9_raw)
}
inline ::uint32_t RcChannel::_internal_chan9_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan9_raw_;
}
inline void RcChannel::_internal_set_chan9_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan9_raw_ = value;
}

// uint32 chan10_raw = 11 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan10_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan10_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan10_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan10_raw)
  return _internal_chan10_raw();
}
inline void RcChannel::set_chan10_raw(::uint32_t value) {
  _internal_set_chan10_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan10_raw)
}
inline ::uint32_t RcChannel::_internal_chan10_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan10_raw_;
}
inline void RcChannel::_internal_set_chan10_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan10_raw_ = value;
}

// uint32 chan11_raw = 12 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan11_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan11_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan11_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan11_raw)
  return _internal_chan11_raw();
}
inline void RcChannel::set_chan11_raw(::uint32_t value) {
  _internal_set_chan11_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan11_raw)
}
inline ::uint32_t RcChannel::_internal_chan11_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan11_raw_;
}
inline void RcChannel::_internal_set_chan11_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan11_raw_ = value;
}

// uint32 chan12_raw = 13 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan12_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan12_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan12_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan12_raw)
  return _internal_chan12_raw();
}
inline void RcChannel::set_chan12_raw(::uint32_t value) {
  _internal_set_chan12_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan12_raw)
}
inline ::uint32_t RcChannel::_internal_chan12_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan12_raw_;
}
inline void RcChannel::_internal_set_chan12_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan12_raw_ = value;
}

// uint32 chan13_raw = 14 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan13_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan13_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan13_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan13_raw)
  return _internal_chan13_raw();
}
inline void RcChannel::set_chan13_raw(::uint32_t value) {
  _internal_set_chan13_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan13_raw)
}
inline ::uint32_t RcChannel::_internal_chan13_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan13_raw_;
}
inline void RcChannel::_internal_set_chan13_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan13_raw_ = value;
}

// uint32 chan14_raw = 15 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan14_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan14_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan14_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan14_raw)
  return _internal_chan14_raw();
}
inline void RcChannel::set_chan14_raw(::uint32_t value) {
  _internal_set_chan14_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan14_raw)
}
inline ::uint32_t RcChannel::_internal_chan14_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan14_raw_;
}
inline void RcChannel::_internal_set_chan14_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan14_raw_ = value;
}

// uint32 chan15_raw = 16 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan15_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan15_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan15_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan15_raw)
  return _internal_chan15_raw();
}
inline void RcChannel::set_chan15_raw(::uint32_t value) {
  _internal_set_chan15_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan15_raw)
}
inline ::uint32_t RcChannel::_internal_chan15_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan15_raw_;
}
inline void RcChannel::_internal_set_chan15_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan15_raw_ = value;
}

// uint32 chan16_raw = 17 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan16_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan16_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan16_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan16_raw)
  return _internal_chan16_raw();
}
inline void RcChannel::set_chan16_raw(::uint32_t value) {
  _internal_set_chan16_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan16_raw)
}
inline ::uint32_t RcChannel::_internal_chan16_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan16_raw_;
}
inline void RcChannel::_internal_set_chan16_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan16_raw_ = value;
}

// uint32 chan17_raw = 18 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan17_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan17_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan17_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan17_raw)
  return _internal_chan17_raw();
}
inline void RcChannel::set_chan17_raw(::uint32_t value) {
  _internal_set_chan17_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan17_raw)
}
inline ::uint32_t RcChannel::_internal_chan17_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan17_raw_;
}
inline void RcChannel::_internal_set_chan17_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan17_raw_ = value;
}

// uint32 chan18_raw = 19 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chan18_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan18_raw_ = 0u;
}
inline ::uint32_t RcChannel::chan18_raw() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chan18_raw)
  return _internal_chan18_raw();
}
inline void RcChannel::set_chan18_raw(::uint32_t value) {
  _internal_set_chan18_raw(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chan18_raw)
}
inline ::uint32_t RcChannel::_internal_chan18_raw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan18_raw_;
}
inline void RcChannel::_internal_set_chan18_raw(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan18_raw_ = value;
}

// uint32 chancount = 20 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_chancount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chancount_ = 0u;
}
inline ::uint32_t RcChannel::chancount() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.chancount)
  return _internal_chancount();
}
inline void RcChannel::set_chancount(::uint32_t value) {
  _internal_set_chancount(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.chancount)
}
inline ::uint32_t RcChannel::_internal_chancount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chancount_;
}
inline void RcChannel::_internal_set_chancount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chancount_ = value;
}

// uint32 rssi = 21 [(.mavsdk.options.default_value) = "0"];
inline void RcChannel::clear_rssi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rssi_ = 0u;
}
inline ::uint32_t RcChannel::rssi() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.RcChannel.rssi)
  return _internal_rssi();
}
inline void RcChannel::set_rssi(::uint32_t value) {
  _internal_set_rssi(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.RcChannel.rssi)
}
inline ::uint32_t RcChannel::_internal_rssi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rssi_;
}
inline void RcChannel::_internal_set_rssi(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rssi_ = value;
}

// -------------------------------------------------------------------

// Magnitometer

// double x = 1;
inline void Magnitometer::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double Magnitometer::x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Magnitometer.x)
  return _internal_x();
}
inline void Magnitometer::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Magnitometer.x)
}
inline double Magnitometer::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Magnitometer::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2;
inline void Magnitometer::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double Magnitometer::y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Magnitometer.y)
  return _internal_y();
}
inline void Magnitometer::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Magnitometer.y)
}
inline double Magnitometer::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Magnitometer::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3;
inline void Magnitometer::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline double Magnitometer::z() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Magnitometer.z)
  return _internal_z();
}
inline void Magnitometer::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Magnitometer.z)
}
inline double Magnitometer::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Magnitometer::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// double magnetic_heading = 4;
inline void Magnitometer::clear_magnetic_heading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.magnetic_heading_ = 0;
}
inline double Magnitometer::magnetic_heading() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.Magnitometer.magnetic_heading)
  return _internal_magnetic_heading();
}
inline void Magnitometer::set_magnetic_heading(double value) {
  _internal_set_magnetic_heading(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.Magnitometer.magnetic_heading)
}
inline double Magnitometer::_internal_magnetic_heading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.magnetic_heading_;
}
inline void Magnitometer::_internal_set_magnetic_heading(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.magnetic_heading_ = value;
}

// -------------------------------------------------------------------

// BatteryVoltages

// repeated uint32 voltages = 1;
inline int BatteryVoltages::_internal_voltages_size() const {
  return _internal_voltages().size();
}
inline int BatteryVoltages::voltages_size() const {
  return _internal_voltages_size();
}
inline void BatteryVoltages::clear_voltages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voltages_.Clear();
}
inline ::uint32_t BatteryVoltages::voltages(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.BatteryVoltages.voltages)
  return _internal_voltages().Get(index);
}
inline void BatteryVoltages::set_voltages(int index, ::uint32_t value) {
  _internal_mutable_voltages()->Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.BatteryVoltages.voltages)
}
inline void BatteryVoltages::add_voltages(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_voltages()->Add(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.striker.BatteryVoltages.voltages)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& BatteryVoltages::voltages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.striker.BatteryVoltages.voltages)
  return _internal_voltages();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BatteryVoltages::mutable_voltages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.striker.BatteryVoltages.voltages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_voltages();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
BatteryVoltages::_internal_voltages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voltages_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BatteryVoltages::_internal_mutable_voltages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.voltages_;
}

// repeated uint32 ext_voltages = 2;
inline int BatteryVoltages::_internal_ext_voltages_size() const {
  return _internal_ext_voltages().size();
}
inline int BatteryVoltages::ext_voltages_size() const {
  return _internal_ext_voltages_size();
}
inline void BatteryVoltages::clear_ext_voltages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ext_voltages_.Clear();
}
inline ::uint32_t BatteryVoltages::ext_voltages(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.BatteryVoltages.ext_voltages)
  return _internal_ext_voltages().Get(index);
}
inline void BatteryVoltages::set_ext_voltages(int index, ::uint32_t value) {
  _internal_mutable_ext_voltages()->Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.BatteryVoltages.ext_voltages)
}
inline void BatteryVoltages::add_ext_voltages(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ext_voltages()->Add(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.striker.BatteryVoltages.ext_voltages)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& BatteryVoltages::ext_voltages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.striker.BatteryVoltages.ext_voltages)
  return _internal_ext_voltages();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BatteryVoltages::mutable_ext_voltages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.striker.BatteryVoltages.ext_voltages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ext_voltages();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
BatteryVoltages::_internal_ext_voltages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ext_voltages_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BatteryVoltages::_internal_mutable_ext_voltages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ext_voltages_;
}

// -------------------------------------------------------------------

// AvailableMode

// uint32 number_modes = 1;
inline void AvailableMode::clear_number_modes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_modes_ = 0u;
}
inline ::uint32_t AvailableMode::number_modes() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableMode.number_modes)
  return _internal_number_modes();
}
inline void AvailableMode::set_number_modes(::uint32_t value) {
  _internal_set_number_modes(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.AvailableMode.number_modes)
}
inline ::uint32_t AvailableMode::_internal_number_modes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_modes_;
}
inline void AvailableMode::_internal_set_number_modes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_modes_ = value;
}

// uint32 mode_index = 2;
inline void AvailableMode::clear_mode_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_index_ = 0u;
}
inline ::uint32_t AvailableMode::mode_index() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableMode.mode_index)
  return _internal_mode_index();
}
inline void AvailableMode::set_mode_index(::uint32_t value) {
  _internal_set_mode_index(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.AvailableMode.mode_index)
}
inline ::uint32_t AvailableMode::_internal_mode_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mode_index_;
}
inline void AvailableMode::_internal_set_mode_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_index_ = value;
}

// uint32 standard_mode = 3;
inline void AvailableMode::clear_standard_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.standard_mode_ = 0u;
}
inline ::uint32_t AvailableMode::standard_mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableMode.standard_mode)
  return _internal_standard_mode();
}
inline void AvailableMode::set_standard_mode(::uint32_t value) {
  _internal_set_standard_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.AvailableMode.standard_mode)
}
inline ::uint32_t AvailableMode::_internal_standard_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.standard_mode_;
}
inline void AvailableMode::_internal_set_standard_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.standard_mode_ = value;
}

// uint32 custom_mode = 4;
inline void AvailableMode::clear_custom_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_mode_ = 0u;
}
inline ::uint32_t AvailableMode::custom_mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableMode.custom_mode)
  return _internal_custom_mode();
}
inline void AvailableMode::set_custom_mode(::uint32_t value) {
  _internal_set_custom_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.AvailableMode.custom_mode)
}
inline ::uint32_t AvailableMode::_internal_custom_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_mode_;
}
inline void AvailableMode::_internal_set_custom_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_mode_ = value;
}

// uint32 properties = 5;
inline void AvailableMode::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_ = 0u;
}
inline ::uint32_t AvailableMode::properties() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableMode.properties)
  return _internal_properties();
}
inline void AvailableMode::set_properties(::uint32_t value) {
  _internal_set_properties(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.AvailableMode.properties)
}
inline ::uint32_t AvailableMode::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_;
}
inline void AvailableMode::_internal_set_properties(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_ = value;
}

// string mode_name = 6;
inline void AvailableMode::clear_mode_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_name_.ClearToEmpty();
}
inline const std::string& AvailableMode::mode_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.AvailableMode.mode_name)
  return _internal_mode_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AvailableMode::set_mode_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.AvailableMode.mode_name)
}
inline std::string* AvailableMode::mutable_mode_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mode_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.AvailableMode.mode_name)
  return _s;
}
inline const std::string& AvailableMode::_internal_mode_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mode_name_.Get();
}
inline void AvailableMode::_internal_set_mode_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_name_.Set(value, GetArena());
}
inline std::string* AvailableMode::_internal_mutable_mode_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mode_name_.Mutable( GetArena());
}
inline std::string* AvailableMode::release_mode_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.AvailableMode.mode_name)
  return _impl_.mode_name_.Release();
}
inline void AvailableMode::set_allocated_mode_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mode_name_.IsDefault()) {
    _impl_.mode_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.AvailableMode.mode_name)
}

// -------------------------------------------------------------------

// SetManualFlightModeRequest

// uint32 mode = 1;
inline void SetManualFlightModeRequest::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0u;
}
inline ::uint32_t SetManualFlightModeRequest::mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetManualFlightModeRequest.mode)
  return _internal_mode();
}
inline void SetManualFlightModeRequest::set_mode(::uint32_t value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SetManualFlightModeRequest.mode)
}
inline ::uint32_t SetManualFlightModeRequest::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mode_;
}
inline void SetManualFlightModeRequest::_internal_set_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// uint32 custom_mode = 2;
inline void SetManualFlightModeRequest::clear_custom_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_mode_ = 0u;
}
inline ::uint32_t SetManualFlightModeRequest::custom_mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetManualFlightModeRequest.custom_mode)
  return _internal_custom_mode();
}
inline void SetManualFlightModeRequest::set_custom_mode(::uint32_t value) {
  _internal_set_custom_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SetManualFlightModeRequest.custom_mode)
}
inline ::uint32_t SetManualFlightModeRequest::_internal_custom_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_mode_;
}
inline void SetManualFlightModeRequest::_internal_set_custom_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_mode_ = value;
}

// uint32 custom_sub_mode = 3;
inline void SetManualFlightModeRequest::clear_custom_sub_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_sub_mode_ = 0u;
}
inline ::uint32_t SetManualFlightModeRequest::custom_sub_mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.SetManualFlightModeRequest.custom_sub_mode)
  return _internal_custom_sub_mode();
}
inline void SetManualFlightModeRequest::set_custom_sub_mode(::uint32_t value) {
  _internal_set_custom_sub_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.SetManualFlightModeRequest.custom_sub_mode)
}
inline ::uint32_t SetManualFlightModeRequest::_internal_custom_sub_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_sub_mode_;
}
inline void SetManualFlightModeRequest::_internal_set_custom_sub_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_sub_mode_ = value;
}

// -------------------------------------------------------------------

// StrikerResult

// .mavsdk.rpc.striker.StrikerResult.Result result = 1;
inline void StrikerResult::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::striker::StrikerResult_Result StrikerResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.StrikerResult.result)
  return _internal_result();
}
inline void StrikerResult::set_result(::mavsdk::rpc::striker::StrikerResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.StrikerResult.result)
}
inline ::mavsdk::rpc::striker::StrikerResult_Result StrikerResult::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::striker::StrikerResult_Result>(_impl_.result_);
}
inline void StrikerResult::_internal_set_result(::mavsdk::rpc::striker::StrikerResult_Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string result_str = 2;
inline void StrikerResult::clear_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& StrikerResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.striker.StrikerResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StrikerResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.striker.StrikerResult.result_str)
}
inline std::string* StrikerResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.striker.StrikerResult.result_str)
  return _s;
}
inline const std::string& StrikerResult::_internal_result_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_str_.Get();
}
inline void StrikerResult::_internal_set_result_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* StrikerResult::_internal_mutable_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* StrikerResult::release_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.striker.StrikerResult.result_str)
  return _impl_.result_str_.Release();
}
inline void StrikerResult::set_allocated_result_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.result_str_.IsDefault()) {
    _impl_.result_str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.striker.StrikerResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace striker
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::striker::StrikerResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::striker::StrikerResult_Result>() {
  return ::mavsdk::rpc::striker::StrikerResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // striker_2fstriker_2eproto_2epb_2eh
