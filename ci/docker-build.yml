docker-build:
  stage: build
  image: docker:24.0.7
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""  
  needs:
    - job: check-docker-changes
      artifacts: true
  rules:
    - if: '$docker_changed == "true"'
  parallel:
    matrix:
      - name: "Ubuntu 20.04"
        dockerfile: "Dockerfile-ubuntu-20.04"
        image: "mavsdk-ubuntu-20.04"
      - name: "Ubuntu 22.04"
        dockerfile: "Dockerfile-ubuntu-22.04"
        image: "mavsdk-ubuntu-22.04"
      - name: "Ubuntu 24.04"
        dockerfile: "Dockerfile-ubuntu-24.04"
        image: "mavsdk-ubuntu-24.04"
        extra_tag: "mavsdk-dev"
      - name: "Debian 11 (Bullseye)"
        dockerfile: "Dockerfile-debian-11"
        image: "mavsdk-debian-11"
      - name: "Debian 12 (Bookworm)"
        dockerfile: "Dockerfile-debian-12"
        image: "mavsdk-debian-12"
      - name: "Debian 13 (Trixie)"
        dockerfile: "Dockerfile-debian-13"
        image: "mavsdk-debian-13"
      - name: "Dockcross ARMv6"
        dockerfile: "Dockerfile.dockcross-linux-armv6-custom"
        image: "mavsdk-dockcross-linux-armv6-custom"
      - name: "Dockcross ARMv7"
        dockerfile: "Dockerfile.dockcross-linux-armv7-custom"
        image: "mavsdk-dockcross-linux-armv7-custom"
      - name: "Dockcross ARM64"
        dockerfile: "Dockerfile.dockcross-linux-arm64-custom"
        image: "mavsdk-dockcross-linux-arm64-custom"
      - name: "Dockcross ARM64 LTS"
        dockerfile: "Dockerfile.dockcross-linux-arm64-lts-custom"
        image: "mavsdk-dockcross-linux-arm64-lts-custom"
  script:
    - echo "Using docker tag: $docker_tag"
    - |
      TAGS="docker.io/mavsdk/${image}:$docker_tag"
      if [ -n "$extra_tag" ] && [ "$CI_PIPELINE_SOURCE" != "merge_request_event" ]; then
        TAGS="$TAGS,docker.io/mavsdk/${extra_tag}:$docker_tag"
      fi
      echo "TAGS=$TAGS"
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - echo "Building and pushing image: $TAGS"
    - docker buildx create --use
    - docker buildx build --push \
        --file ./docker/${dockerfile} \
        --tag $(echo "$TAGS" | tr ',' '\n') \
        ./docker