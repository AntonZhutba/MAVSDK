stages:
  - check
  - build
  - test

check-docker-changes:
  stage: check
  image: ubuntu:24.04
  before_script:
    - apt-get update && apt-get install -y git
  script:
    - git config --global --add safe.directory "$CI_PROJECT_DIR"
    - git fetch origin main
    - |
      git diff --name-only origin/main...HEAD > changed_files.txt
      if grep '^docker/' changed_files.txt; then
        echo "docker_changed=true" > docker_env.txt
        if [[ "$CI_PIPELINE_SOURCE" == "merge_request_event" ]]; then
          echo "docker_tag=pr-$CI_MERGE_REQUEST_IID" >> docker_env.txt
        else
          echo "docker_tag=latest" >> docker_env.txt
        fi
      else
        echo "docker_changed=false" > docker_env.txt
        echo "docker_tag=latest" >> docker_env.txt
      fi
  artifacts:
    reports:
      dotenv: docker_env.txt
    expire_in: 1 hour

docker-build:
  stage: build
  image: docker:24.0.7
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""  
  needs:
    - job: check-docker-changes
      artifacts: true
  rules:
    - if: '$docker_changed == "true"'
  parallel:
    matrix:
      - name: "Ubuntu 20.04"
        dockerfile: "Dockerfile-ubuntu-20.04"
        image: "mavsdk-ubuntu-20.04"
      - name: "Ubuntu 22.04"
        dockerfile: "Dockerfile-ubuntu-22.04"
        image: "mavsdk-ubuntu-22.04"
      - name: "Ubuntu 24.04"
        dockerfile: "Dockerfile-ubuntu-24.04"
        image: "mavsdk-ubuntu-24.04"
        extra_tag: "mavsdk-dev"
      - name: "Debian 11 (Bullseye)"
        dockerfile: "Dockerfile-debian-11"
        image: "mavsdk-debian-11"
      - name: "Debian 12 (Bookworm)"
        dockerfile: "Dockerfile-debian-12"
        image: "mavsdk-debian-12"
      - name: "Debian 13 (Trixie)"
        dockerfile: "Dockerfile-debian-13"
        image: "mavsdk-debian-13"
      - name: "Dockcross ARMv6"
        dockerfile: "Dockerfile.dockcross-linux-armv6-custom"
        image: "mavsdk-dockcross-linux-armv6-custom"
      - name: "Dockcross ARMv7"
        dockerfile: "Dockerfile.dockcross-linux-armv7-custom"
        image: "mavsdk-dockcross-linux-armv7-custom"
      - name: "Dockcross ARM64"
        dockerfile: "Dockerfile.dockcross-linux-arm64-custom"
        image: "mavsdk-dockcross-linux-arm64-custom"
      - name: "Dockcross ARM64 LTS"
        dockerfile: "Dockerfile.dockcross-linux-arm64-lts-custom"
        image: "mavsdk-dockcross-linux-arm64-lts-custom"
  script:
    - echo "Using docker tag $docker_tag"
    - TAGS="docker.io/mavsdk/${image}:$docker_tag"; if [ -n "$extra_tag" ] && [ "$CI_PIPELINE_SOURCE" != "merge_request_event" ]; then TAGS="$TAGS,docker.io/mavsdk/${extra_tag}:$docker_tag"; fi
    - echo "TAGS=$TAGS"
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - echo "Building and pushing image $TAGS"
    - docker buildx create --use
    - docker buildx build --push \
        --file ./docker/${dockerfile} \
        --tag $(echo "$TAGS" | tr ',' '\n') \
        ./docker

coverage:
  stage: test
  image: docker.io/mavsdk/mavsdk-ubuntu-22.04:$docker_tag
  needs:
    - job: check-docker-changes
      artifacts: true
    - job: docker-build
      optional: true
  variables:
    NODE_OPTIONS: --max_old_space_size=4096
  cache:
    key: coverage-third-party
    paths:
      - build/third_party/install
  script:
    - git config --global --add safe.directory "$CI_PROJECT_DIR"
    - git fetch --tags
    - |
      if [ -d build/third_party/install ]; then
        echo "superbuild=-DSUPERBUILD=OFF" >> coverage_env.txt
        echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=$(pwd)/build/third_party/install" >> coverage_env.txt
      fi
    - source coverage_env.txt || true
    - apt-get update && apt-get install -y lcov curl
    - cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Coverage -DASAN=ON -DWERROR=ON -DENABLE_CPPTRACE=On -Bbuild -H.
    - cmake --build build -j$(nproc)
    - ./build/src/unit_tests/unit_tests_runner
    - ./build/src/system_tests/system_tests_runner
    - lcov --capture --directory . --no-external --exclude "*/third_party/*" --output-file lcov.info
    - ls -l lcov.info
    - >
      curl -s https://codecov.io/bash | bash -s -- -f lcov.info || 
      echo "Coveralls upload skipped (fallback)"
  artifacts:
    paths:
      - lcov.info
    reports:
      coverage_report:
        coverage_format: cobertura
        path: lcov.info